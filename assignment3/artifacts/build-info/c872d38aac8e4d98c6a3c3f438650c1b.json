{
	"id": "c872d38aac8e4d98c6a3c3f438650c1b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"assignment3/Swap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"./interfaces/ISwap.sol\";\r\nimport \"./sAsset.sol\";\r\n\r\ncontract Swap is Ownable(msg.sender), ISwap {\r\n\r\n    address token0;\r\n    address token1;\r\n    uint reserve0;\r\n    uint reserve1;\r\n    mapping (address => uint) shares;\r\n    uint public totalShares;\r\n\r\n    constructor(address addr0, address addr1) {\r\n        token0 = addr0;\r\n        token1 = addr1;\r\n    }\r\n\r\n    function init(uint token0Amount, uint token1Amount) external override onlyOwner {\r\n        require(reserve0 == 0 && reserve1 == 0, \"init - already has liquidity\");\r\n        require(token0Amount > 0 && token1Amount > 0, \"init - both tokens are needed\");\r\n        \r\n        require(sAsset(token0).transferFrom(msg.sender, address(this), token0Amount));\r\n        require(sAsset(token1).transferFrom(msg.sender, address(this), token1Amount));\r\n        reserve0 = token0Amount;\r\n        reserve1 = token1Amount;\r\n        totalShares = sqrt(token0Amount * token1Amount);\r\n        shares[msg.sender] = totalShares;\r\n    }\r\n\r\n    // https://github.com/Uniswap/v2-core/blob/v1.0.1/contracts/libraries/Math.sol\r\n    function sqrt(uint y) internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = y / 2 + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = (y / x + x) / 2;\r\n            }\r\n        } else if (y != 0) {\r\n            z = 1;\r\n        }\r\n    }\r\n\r\n    function getReserves() external view returns (uint, uint) {\r\n        return (reserve0, reserve1);\r\n    }\r\n\r\n    function getTokens() external view returns (address, address) {\r\n        return (token0, token1);\r\n    }\r\n\r\n    function getShares(address LP) external view returns (uint) {\r\n        return shares[LP];\r\n    }\r\n\r\n    /* TODO: implement your functions here */\r\n    function addLiquidity(uint token0Amount) external override {\r\n        require(reserve0 != 0 && reserve1 != 0, \"pool not initilized\");\r\n        uint token1Amount = token0Amount*reserve1/reserve0;\r\n        uint newShares = totalShares*token0Amount/reserve0;\r\n\r\n        require(sAsset(token0).transferFrom(msg.sender, address(this), token0Amount), \"failed to transfer token0\");\r\n        require(sAsset(token1).transferFrom(msg.sender, address(this), token1Amount), \"failed to transfer token1\");\r\n        reserve0 += token0Amount;\r\n        reserve1 += token1Amount;\r\n        shares[msg.sender] += newShares;\r\n        totalShares += newShares;\r\n    }\r\n\r\n    function removeLiquidity(uint withdrawShares) external override {\r\n        require(withdrawShares <= shares[msg.sender], \"not enough share to withdraw\");\r\n        uint token0Amount = reserve0*withdrawShares/totalShares;\r\n        uint token1Amount = reserve1*withdrawShares/totalShares;\r\n        require(sAsset(token0).transfer(msg.sender, token0Amount), \"failed to transfer token0\");\r\n        require(sAsset(token1).transfer(msg.sender, token1Amount), \"failed to transfer token1\");\r\n        reserve0 -= token0Amount;\r\n        reserve1 -= token1Amount;\r\n        shares[msg.sender] -= withdrawShares;\r\n        totalShares -= withdrawShares;\r\n    }\r\n\r\n    function token0To1(uint token0Amount) external override {\r\n        require(token0Amount > 0, \"not token0 provided\");\r\n        uint token1Amount = (token0Amount*reserve1*997) / (reserve0*1000 + token0Amount*997);\r\n        require(sAsset(token0).transferFrom(msg.sender, address(this), token0Amount), \"failed to transfer token0\");\r\n\r\n        require(sAsset(token1).transfer(msg.sender, token1Amount), \"failed to transfer token1\");\r\n        reserve0 += token0Amount;\r\n        reserve1 -= token1Amount;\r\n    }\r\n\r\n    function token1To0(uint token1Amount) external override {\r\n        require(token1Amount > 0, \"not token0 provided\");\r\n        uint token0Amount = (token1Amount*reserve0*997) / (reserve1*1000 + token1Amount*997);\r\n        require(sAsset(token1).transferFrom(msg.sender, address(this), token1Amount), \"failed to transfer token1\");\r\n\r\n        require(sAsset(token0).transfer(msg.sender, token0Amount), \"failed to transfer token0\");\r\n        reserve0 -= token0Amount;\r\n        reserve1 += token1Amount;\r\n    }\r\n\r\n\r\n    \r\n}"
			},
			"assignment3/sAsset.sol": {
				"content": "pragma solidity >=0.8.0 <0.9.0;\r\n//SPDX-License-Identifier: MIT\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\n\r\n\r\ncontract sAsset is ERC20, AccessControl {\r\n    // Create a new role identifier for the minter / burner role\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");    \r\n    /**\r\n     * @dev Constructor that gives msg.sender all of existing tokens.\r\n     */\r\n    constructor(\r\n        string memory name,\r\n        string memory symbol,\r\n        uint256 initialSupply\r\n    ) ERC20(name, symbol) {\r\n        _mint(msg.sender, initialSupply * (10 ** uint256(decimals())));\r\n        // Grant the contract deployer the default admin role: it will be able\r\n        // to grant and revoke any roles\r\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n    }\r\n\r\n    event mintToken(address to, uint256 amount);\r\n    event burnToken(address from, uint256 amount);\r\n\r\n\r\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        \r\n        _mint(to, amount);\r\n        emit mintToken(to, amount);\r\n    }\r\n\r\n    function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        \r\n        _burn(from, amount);\r\n        emit burnToken(from, amount);\r\n    }\r\n\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 8;\r\n    }\r\n}"
			},
			"assignment3/interfaces/ISwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.8.0 <0.9.0;\r\n\r\ninterface ISwap {\r\n\r\n    function init(uint token0Amount, uint token1Amount) external;\r\n\r\n    function addLiquidity(uint token0Amount) external;\r\n    function removeLiquidity(uint withdrawShares) external;\r\n\r\n    function token0To1(uint token0Amount) external;\r\n    function token1To0(uint token1Amount) external;\r\n \r\n\r\n    \r\n\r\n    \r\n}"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 387,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"assignment3/Swap.sol": {
				"Swap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "addr0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "addr1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "LP",
									"type": "address"
								}
							],
							"name": "getShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokens",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "withdrawShares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								}
							],
							"name": "token0To1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								}
							],
							"name": "token1To0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalShares",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"assignment3/Swap.sol\":180:4223  contract Swap is Ownable(msg.sender), ISwap {... */\n  mstore(0x40, 0x80)\n    /* \"assignment3/Swap.sol\":386:486  constructor(address addr0, address addr1) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"assignment3/Swap.sol\":205:215  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"assignment3/Swap.sol\":448:453  addr0 */\n  dup2\n    /* \"assignment3/Swap.sol\":439:445  token0 */\n  0x01\n  0x00\n    /* \"assignment3/Swap.sol\":439:453  token0 = addr0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"assignment3/Swap.sol\":473:478  addr1 */\n  dup1\n    /* \"assignment3/Swap.sol\":464:470  token1 */\n  0x02\n  0x00\n    /* \"assignment3/Swap.sol\":464:478  token1 = addr1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"assignment3/Swap.sol\":386:486  constructor(address addr0, address addr1) {... */\n  pop\n  pop\n    /* \"assignment3/Swap.sol\":180:4223  contract Swap is Ownable(msg.sender), ISwap {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"assignment3/Swap.sol\":180:4223  contract Swap is Ownable(msg.sender), ISwap {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"assignment3/Swap.sol\":180:4223  contract Swap is Ownable(msg.sender), ISwap {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9c8f9f23\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa5843f08\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xaa6ca808\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xad3bd45c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xf04da65b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x0902f1ac\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x26ef80c9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3a98ef39\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"assignment3/Swap.sol\":1511:1615  function getReserves() external view returns (uint, uint) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment3/Swap.sol\":3192:3697  function token0To1(uint token0Amount) external override {... */\n    tag_4:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      stop\n        /* \"assignment3/Swap.sol\":354:377  uint public totalShares */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment3/Swap.sol\":1886:2531  function addLiquidity(uint token0Amount) external override {... */\n    tag_6:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_29:\n      tag_30\n      jump\t// in\n    tag_28:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment3/Swap.sol\":2539:3184  function removeLiquidity(uint withdrawShares) external override {... */\n    tag_9:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_38:\n      tag_39\n      jump\t// in\n    tag_37:\n      stop\n        /* \"assignment3/Swap.sol\":494:1108  function init(uint token0Amount, uint token1Amount) external override onlyOwner {... */\n    tag_10:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      stop\n        /* \"assignment3/Swap.sol\":1623:1727  function getTokens() external view returns (address, address) {... */\n    tag_11:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_46\n      swap3\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment3/Swap.sol\":3705:4210  function token1To0(uint token1Amount) external override {... */\n    tag_12:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \"assignment3/Swap.sol\":1735:1831  function getShares(address LP) external view returns (uint) {... */\n    tag_13:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_14:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"assignment3/Swap.sol\":1511:1615  function getReserves() external view returns (uint, uint) {... */\n    tag_17:\n        /* \"assignment3/Swap.sol\":1557:1561  uint */\n      0x00\n        /* \"assignment3/Swap.sol\":1563:1567  uint */\n      dup1\n        /* \"assignment3/Swap.sol\":1588:1596  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":1598:1606  reserve1 */\n      sload(0x04)\n        /* \"assignment3/Swap.sol\":1580:1607  return (reserve0, reserve1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"assignment3/Swap.sol\":1511:1615  function getReserves() external view returns (uint, uint) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"assignment3/Swap.sol\":3192:3697  function token0To1(uint token0Amount) external override {... */\n    tag_23:\n        /* \"assignment3/Swap.sol\":3282:3283  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":3267:3279  token0Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":3267:3283  token0Amount > 0 */\n      gt\n        /* \"assignment3/Swap.sol\":3259:3307  require(token0Amount > 0, \"not token0 provided\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"assignment3/Swap.sol\":3318:3335  uint token1Amount */\n      0x00\n        /* \"assignment3/Swap.sol\":3398:3401  997 */\n      0x03e5\n        /* \"assignment3/Swap.sol\":3385:3397  token0Amount */\n      dup3\n        /* \"assignment3/Swap.sol\":3385:3401  token0Amount*997 */\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"assignment3/Swap.sol\":3378:3382  1000 */\n      0x03e8\n        /* \"assignment3/Swap.sol\":3369:3377  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":3369:3382  reserve0*1000 */\n      tag_66\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n        /* \"assignment3/Swap.sol\":3369:3401  reserve0*1000 + token0Amount*997 */\n      tag_67\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"assignment3/Swap.sol\":3361:3364  997 */\n      0x03e5\n        /* \"assignment3/Swap.sol\":3352:3360  reserve1 */\n      sload(0x04)\n        /* \"assignment3/Swap.sol\":3339:3351  token0Amount */\n      dup5\n        /* \"assignment3/Swap.sol\":3339:3360  token0Amount*reserve1 */\n      tag_69\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_69:\n        /* \"assignment3/Swap.sol\":3339:3364  token0Amount*reserve1*997 */\n      tag_70\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_70:\n        /* \"assignment3/Swap.sol\":3338:3402  (token0Amount*reserve1*997) / (reserve0*1000 + token0Amount*997) */\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"assignment3/Swap.sol\":3318:3402  uint token1Amount = (token0Amount*reserve1*997) / (reserve0*1000 + token0Amount*997) */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":3428:3434  token0 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":3421:3448  sAsset(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"assignment3/Swap.sol\":3449:3459  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":3469:3473  this */\n      address\n        /* \"assignment3/Swap.sol\":3476:3488  token0Amount */\n      dup6\n        /* \"assignment3/Swap.sol\":3421:3489  sAsset(token0).transferFrom(msg.sender, address(this), token0Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"assignment3/Swap.sol\":3413:3519  require(sAsset(token0).transferFrom(msg.sender, address(this), token0Amount), \"failed to transfer token0\") */\n      tag_79\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_80\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_79:\n        /* \"assignment3/Swap.sol\":3547:3553  token1 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":3540:3563  sAsset(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"assignment3/Swap.sol\":3564:3574  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":3576:3588  token1Amount */\n      dup4\n        /* \"assignment3/Swap.sol\":3540:3589  sAsset(token1).transfer(msg.sender, token1Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_85\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_85:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_86:\n        /* \"assignment3/Swap.sol\":3532:3619  require(sAsset(token1).transfer(msg.sender, token1Amount), \"failed to transfer token1\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"assignment3/Swap.sol\":3642:3654  token0Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":3630:3638  reserve0 */\n      0x03\n      0x00\n        /* \"assignment3/Swap.sol\":3630:3654  reserve0 += token0Amount */\n      dup3\n      dup3\n      sload\n      tag_90\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_90:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":3677:3689  token1Amount */\n      dup1\n        /* \"assignment3/Swap.sol\":3665:3673  reserve1 */\n      0x04\n      0x00\n        /* \"assignment3/Swap.sol\":3665:3689  reserve1 -= token1Amount */\n      dup3\n      dup3\n      sload\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":3248:3697  {... */\n      pop\n        /* \"assignment3/Swap.sol\":3192:3697  function token0To1(uint token0Amount) external override {... */\n      pop\n      jump\t// out\n        /* \"assignment3/Swap.sol\":354:377  uint public totalShares */\n    tag_25:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"assignment3/Swap.sol\":1886:2531  function addLiquidity(uint token0Amount) external override {... */\n    tag_30:\n        /* \"assignment3/Swap.sol\":1976:1977  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":1964:1972  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":1964:1977  reserve0 != 0 */\n      eq\n      iszero\n        /* \"assignment3/Swap.sol\":1964:1994  reserve0 != 0 && reserve1 != 0 */\n      dup1\n      iszero\n      tag_94\n      jumpi\n      pop\n        /* \"assignment3/Swap.sol\":1993:1994  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":1981:1989  reserve1 */\n      sload(0x04)\n        /* \"assignment3/Swap.sol\":1981:1994  reserve1 != 0 */\n      eq\n      iszero\n        /* \"assignment3/Swap.sol\":1964:1994  reserve0 != 0 && reserve1 != 0 */\n    tag_94:\n        /* \"assignment3/Swap.sol\":1956:2018  require(reserve0 != 0 && reserve1 != 0, \"pool not initilized\") */\n      tag_95\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_96\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_95:\n        /* \"assignment3/Swap.sol\":2029:2046  uint token1Amount */\n      0x00\n        /* \"assignment3/Swap.sol\":2071:2079  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":2062:2070  reserve1 */\n      sload(0x04)\n        /* \"assignment3/Swap.sol\":2049:2061  token0Amount */\n      dup4\n        /* \"assignment3/Swap.sol\":2049:2070  token0Amount*reserve1 */\n      tag_98\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_98:\n        /* \"assignment3/Swap.sol\":2049:2079  token0Amount*reserve1/reserve0 */\n      tag_99\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_99:\n        /* \"assignment3/Swap.sol\":2029:2079  uint token1Amount = token0Amount*reserve1/reserve0 */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":2090:2104  uint newShares */\n      0x00\n        /* \"assignment3/Swap.sol\":2132:2140  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":2119:2131  token0Amount */\n      dup4\n        /* \"assignment3/Swap.sol\":2107:2118  totalShares */\n      sload(0x06)\n        /* \"assignment3/Swap.sol\":2107:2131  totalShares*token0Amount */\n      tag_100\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_100:\n        /* \"assignment3/Swap.sol\":2107:2140  totalShares*token0Amount/reserve0 */\n      tag_101\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_101:\n        /* \"assignment3/Swap.sol\":2090:2140  uint newShares = totalShares*token0Amount/reserve0 */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":2168:2174  token0 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":2161:2188  sAsset(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"assignment3/Swap.sol\":2189:2199  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":2209:2213  this */\n      address\n        /* \"assignment3/Swap.sol\":2216:2228  token0Amount */\n      dup7\n        /* \"assignment3/Swap.sol\":2161:2229  sAsset(token0).transferFrom(msg.sender, address(this), token0Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_102:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_105:\n        /* \"assignment3/Swap.sol\":2153:2259  require(sAsset(token0).transferFrom(msg.sender, address(this), token0Amount), \"failed to transfer token0\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_81\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"assignment3/Swap.sol\":2285:2291  token1 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":2278:2305  sAsset(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"assignment3/Swap.sol\":2306:2316  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":2326:2330  this */\n      address\n        /* \"assignment3/Swap.sol\":2333:2345  token1Amount */\n      dup6\n        /* \"assignment3/Swap.sol\":2278:2346  sAsset(token1).transferFrom(msg.sender, address(this), token1Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_108:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_111:\n        /* \"assignment3/Swap.sol\":2270:2376  require(sAsset(token1).transferFrom(msg.sender, address(this), token1Amount), \"failed to transfer token1\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap1\n      tag_89\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"assignment3/Swap.sol\":2399:2411  token0Amount */\n      dup3\n        /* \"assignment3/Swap.sol\":2387:2395  reserve0 */\n      0x03\n      0x00\n        /* \"assignment3/Swap.sol\":2387:2411  reserve0 += token0Amount */\n      dup3\n      dup3\n      sload\n      tag_114\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":2434:2446  token1Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":2422:2430  reserve1 */\n      0x04\n      0x00\n        /* \"assignment3/Swap.sol\":2422:2446  reserve1 += token1Amount */\n      dup3\n      dup3\n      sload\n      tag_115\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_115:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":2479:2488  newShares */\n      dup1\n        /* \"assignment3/Swap.sol\":2457:2463  shares */\n      0x05\n        /* \"assignment3/Swap.sol\":2457:2475  shares[msg.sender] */\n      0x00\n        /* \"assignment3/Swap.sol\":2464:2474  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":2457:2475  shares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"assignment3/Swap.sol\":2457:2488  shares[msg.sender] += newShares */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":2514:2523  newShares */\n      dup1\n        /* \"assignment3/Swap.sol\":2499:2510  totalShares */\n      0x06\n      0x00\n        /* \"assignment3/Swap.sol\":2499:2523  totalShares += newShares */\n      dup3\n      dup3\n      sload\n      tag_117\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_117:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":1945:2531  {... */\n      pop\n      pop\n        /* \"assignment3/Swap.sol\":1886:2531  function addLiquidity(uint token0Amount) external override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"assignment3/Swap.sol\":2539:3184  function removeLiquidity(uint withdrawShares) external override {... */\n    tag_39:\n        /* \"assignment3/Swap.sol\":2640:2646  shares */\n      0x05\n        /* \"assignment3/Swap.sol\":2640:2658  shares[msg.sender] */\n      0x00\n        /* \"assignment3/Swap.sol\":2647:2657  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":2640:2658  shares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"assignment3/Swap.sol\":2622:2636  withdrawShares */\n      dup2\n        /* \"assignment3/Swap.sol\":2622:2658  withdrawShares <= shares[msg.sender] */\n      gt\n      iszero\n        /* \"assignment3/Swap.sol\":2614:2691  require(withdrawShares <= shares[msg.sender], \"not enough share to withdraw\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"assignment3/Swap.sol\":2702:2719  uint token0Amount */\n      0x00\n        /* \"assignment3/Swap.sol\":2746:2757  totalShares */\n      sload(0x06)\n        /* \"assignment3/Swap.sol\":2731:2745  withdrawShares */\n      dup3\n        /* \"assignment3/Swap.sol\":2722:2730  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":2722:2745  reserve0*withdrawShares */\n      tag_129\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_129:\n        /* \"assignment3/Swap.sol\":2722:2757  reserve0*withdrawShares/totalShares */\n      tag_130\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_130:\n        /* \"assignment3/Swap.sol\":2702:2757  uint token0Amount = reserve0*withdrawShares/totalShares */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":2768:2785  uint token1Amount */\n      0x00\n        /* \"assignment3/Swap.sol\":2812:2823  totalShares */\n      sload(0x06)\n        /* \"assignment3/Swap.sol\":2797:2811  withdrawShares */\n      dup4\n        /* \"assignment3/Swap.sol\":2788:2796  reserve1 */\n      sload(0x04)\n        /* \"assignment3/Swap.sol\":2788:2811  reserve1*withdrawShares */\n      tag_131\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_131:\n        /* \"assignment3/Swap.sol\":2788:2823  reserve1*withdrawShares/totalShares */\n      tag_132\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_132:\n        /* \"assignment3/Swap.sol\":2768:2823  uint token1Amount = reserve1*withdrawShares/totalShares */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":2849:2855  token0 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":2842:2865  sAsset(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"assignment3/Swap.sol\":2866:2876  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":2878:2890  token0Amount */\n      dup5\n        /* \"assignment3/Swap.sol\":2842:2891  sAsset(token0).transfer(msg.sender, token0Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_136:\n        /* \"assignment3/Swap.sol\":2834:2921  require(sAsset(token0).transfer(msg.sender, token0Amount), \"failed to transfer token0\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_81\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"assignment3/Swap.sol\":2947:2953  token1 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":2940:2963  sAsset(token1).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"assignment3/Swap.sol\":2964:2974  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":2976:2988  token1Amount */\n      dup4\n        /* \"assignment3/Swap.sol\":2940:2989  sAsset(token1).transfer(msg.sender, token1Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_139:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_141\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_142:\n        /* \"assignment3/Swap.sol\":2932:3019  require(sAsset(token1).transfer(msg.sender, token1Amount), \"failed to transfer token1\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_144\n      swap1\n      tag_89\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"assignment3/Swap.sol\":3042:3054  token0Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":3030:3038  reserve0 */\n      0x03\n      0x00\n        /* \"assignment3/Swap.sol\":3030:3054  reserve0 -= token0Amount */\n      dup3\n      dup3\n      sload\n      tag_145\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_145:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":3077:3089  token1Amount */\n      dup1\n        /* \"assignment3/Swap.sol\":3065:3073  reserve1 */\n      0x04\n      0x00\n        /* \"assignment3/Swap.sol\":3065:3089  reserve1 -= token1Amount */\n      dup3\n      dup3\n      sload\n      tag_146\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_146:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":3122:3136  withdrawShares */\n      dup3\n        /* \"assignment3/Swap.sol\":3100:3106  shares */\n      0x05\n        /* \"assignment3/Swap.sol\":3100:3118  shares[msg.sender] */\n      0x00\n        /* \"assignment3/Swap.sol\":3107:3117  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":3100:3118  shares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"assignment3/Swap.sol\":3100:3136  shares[msg.sender] -= withdrawShares */\n      dup3\n      dup3\n      sload\n      tag_147\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":3162:3176  withdrawShares */\n      dup3\n        /* \"assignment3/Swap.sol\":3147:3158  totalShares */\n      0x06\n      0x00\n        /* \"assignment3/Swap.sol\":3147:3176  totalShares -= withdrawShares */\n      dup3\n      dup3\n      sload\n      tag_148\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_148:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":2603:3184  {... */\n      pop\n      pop\n        /* \"assignment3/Swap.sol\":2539:3184  function removeLiquidity(uint withdrawShares) external override {... */\n      pop\n      jump\t// out\n        /* \"assignment3/Swap.sol\":494:1108  function init(uint token0Amount, uint token1Amount) external override onlyOwner {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_150:\n        /* \"assignment3/Swap.sol\":605:606  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":593:601  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":593:606  reserve0 == 0 */\n      eq\n        /* \"assignment3/Swap.sol\":593:623  reserve0 == 0 && reserve1 == 0 */\n      dup1\n      iszero\n      tag_152\n      jumpi\n      pop\n        /* \"assignment3/Swap.sol\":622:623  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":610:618  reserve1 */\n      sload(0x04)\n        /* \"assignment3/Swap.sol\":610:623  reserve1 == 0 */\n      eq\n        /* \"assignment3/Swap.sol\":593:623  reserve0 == 0 && reserve1 == 0 */\n    tag_152:\n        /* \"assignment3/Swap.sol\":585:656  require(reserve0 == 0 && reserve1 == 0, \"init - already has liquidity\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"assignment3/Swap.sol\":690:691  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":675:687  token0Amount */\n      dup3\n        /* \"assignment3/Swap.sol\":675:691  token0Amount > 0 */\n      gt\n        /* \"assignment3/Swap.sol\":675:711  token0Amount > 0 && token1Amount > 0 */\n      dup1\n      iszero\n      tag_156\n      jumpi\n      pop\n        /* \"assignment3/Swap.sol\":710:711  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":695:707  token1Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":695:711  token1Amount > 0 */\n      gt\n        /* \"assignment3/Swap.sol\":675:711  token0Amount > 0 && token1Amount > 0 */\n    tag_156:\n        /* \"assignment3/Swap.sol\":667:745  require(token0Amount > 0 && token1Amount > 0, \"init - both tokens are needed\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"assignment3/Swap.sol\":781:787  token0 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":774:801  sAsset(token0).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"assignment3/Swap.sol\":802:812  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":822:826  this */\n      address\n        /* \"assignment3/Swap.sol\":829:841  token0Amount */\n      dup6\n        /* \"assignment3/Swap.sol\":774:842  sAsset(token0).transferFrom(msg.sender, address(this), token0Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_160:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_163:\n        /* \"assignment3/Swap.sol\":766:843  require(sAsset(token0).transferFrom(msg.sender, address(this), token0Amount)) */\n      tag_164\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_164:\n        /* \"assignment3/Swap.sol\":869:875  token1 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":862:889  sAsset(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"assignment3/Swap.sol\":890:900  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":910:914  this */\n      address\n        /* \"assignment3/Swap.sol\":917:929  token1Amount */\n      dup5\n        /* \"assignment3/Swap.sol\":862:930  sAsset(token1).transferFrom(msg.sender, address(this), token1Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_165:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_168:\n        /* \"assignment3/Swap.sol\":854:931  require(sAsset(token1).transferFrom(msg.sender, address(this), token1Amount)) */\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n        /* \"assignment3/Swap.sol\":953:965  token0Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":942:950  reserve0 */\n      0x03\n        /* \"assignment3/Swap.sol\":942:965  reserve0 = token0Amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":987:999  token1Amount */\n      dup1\n        /* \"assignment3/Swap.sol\":976:984  reserve1 */\n      0x04\n        /* \"assignment3/Swap.sol\":976:999  reserve1 = token1Amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":1024:1057  sqrt(token0Amount * token1Amount) */\n      tag_170\n        /* \"assignment3/Swap.sol\":1044:1056  token1Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":1029:1041  token0Amount */\n      dup4\n        /* \"assignment3/Swap.sol\":1029:1056  token0Amount * token1Amount */\n      tag_171\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_171:\n        /* \"assignment3/Swap.sol\":1024:1028  sqrt */\n      tag_172\n        /* \"assignment3/Swap.sol\":1024:1057  sqrt(token0Amount * token1Amount) */\n      jump\t// in\n    tag_170:\n        /* \"assignment3/Swap.sol\":1010:1021  totalShares */\n      0x06\n        /* \"assignment3/Swap.sol\":1010:1057  totalShares = sqrt(token0Amount * token1Amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":1089:1100  totalShares */\n      sload(0x06)\n        /* \"assignment3/Swap.sol\":1068:1074  shares */\n      0x05\n        /* \"assignment3/Swap.sol\":1068:1086  shares[msg.sender] */\n      0x00\n        /* \"assignment3/Swap.sol\":1075:1085  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":1068:1086  shares[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"assignment3/Swap.sol\":1068:1100  shares[msg.sender] = totalShares */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":494:1108  function init(uint token0Amount, uint token1Amount) external override onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"assignment3/Swap.sol\":1623:1727  function getTokens() external view returns (address, address) {... */\n    tag_45:\n        /* \"assignment3/Swap.sol\":1667:1674  address */\n      0x00\n        /* \"assignment3/Swap.sol\":1676:1683  address */\n      dup1\n        /* \"assignment3/Swap.sol\":1704:1710  token0 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":1712:1718  token1 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":1696:1719  return (token0, token1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"assignment3/Swap.sol\":1623:1727  function getTokens() external view returns (address, address) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"assignment3/Swap.sol\":3705:4210  function token1To0(uint token1Amount) external override {... */\n    tag_50:\n        /* \"assignment3/Swap.sol\":3795:3796  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":3780:3792  token1Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":3780:3796  token1Amount > 0 */\n      gt\n        /* \"assignment3/Swap.sol\":3772:3820  require(token1Amount > 0, \"not token0 provided\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_63\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"assignment3/Swap.sol\":3831:3848  uint token0Amount */\n      0x00\n        /* \"assignment3/Swap.sol\":3911:3914  997 */\n      0x03e5\n        /* \"assignment3/Swap.sol\":3898:3910  token1Amount */\n      dup3\n        /* \"assignment3/Swap.sol\":3898:3914  token1Amount*997 */\n      tag_177\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_177:\n        /* \"assignment3/Swap.sol\":3891:3895  1000 */\n      0x03e8\n        /* \"assignment3/Swap.sol\":3882:3890  reserve1 */\n      sload(0x04)\n        /* \"assignment3/Swap.sol\":3882:3895  reserve1*1000 */\n      tag_178\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_178:\n        /* \"assignment3/Swap.sol\":3882:3914  reserve1*1000 + token1Amount*997 */\n      tag_179\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_179:\n        /* \"assignment3/Swap.sol\":3874:3877  997 */\n      0x03e5\n        /* \"assignment3/Swap.sol\":3865:3873  reserve0 */\n      sload(0x03)\n        /* \"assignment3/Swap.sol\":3852:3864  token1Amount */\n      dup5\n        /* \"assignment3/Swap.sol\":3852:3873  token1Amount*reserve0 */\n      tag_180\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_180:\n        /* \"assignment3/Swap.sol\":3852:3877  token1Amount*reserve0*997 */\n      tag_181\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_181:\n        /* \"assignment3/Swap.sol\":3851:3915  (token1Amount*reserve0*997) / (reserve1*1000 + token1Amount*997) */\n      tag_182\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_182:\n        /* \"assignment3/Swap.sol\":3831:3915  uint token0Amount = (token1Amount*reserve0*997) / (reserve1*1000 + token1Amount*997) */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":3941:3947  token1 */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":3934:3961  sAsset(token1).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"assignment3/Swap.sol\":3962:3972  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":3982:3986  this */\n      address\n        /* \"assignment3/Swap.sol\":3989:4001  token1Amount */\n      dup6\n        /* \"assignment3/Swap.sol\":3934:4002  sAsset(token1).transferFrom(msg.sender, address(this), token1Amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_183:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_185:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_186\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_186:\n        /* \"assignment3/Swap.sol\":3926:4032  require(sAsset(token1).transferFrom(msg.sender, address(this), token1Amount), \"failed to transfer token1\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap1\n      tag_89\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"assignment3/Swap.sol\":4060:4066  token0 */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"assignment3/Swap.sol\":4053:4076  sAsset(token0).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"assignment3/Swap.sol\":4077:4087  msg.sender */\n      caller\n        /* \"assignment3/Swap.sol\":4089:4101  token0Amount */\n      dup4\n        /* \"assignment3/Swap.sol\":4053:4102  sAsset(token0).transfer(msg.sender, token0Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_189:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_192:\n        /* \"assignment3/Swap.sol\":4045:4132  require(sAsset(token0).transfer(msg.sender, token0Amount), \"failed to transfer token0\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_81\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"assignment3/Swap.sol\":4155:4167  token0Amount */\n      dup1\n        /* \"assignment3/Swap.sol\":4143:4151  reserve0 */\n      0x03\n      0x00\n        /* \"assignment3/Swap.sol\":4143:4167  reserve0 -= token0Amount */\n      dup3\n      dup3\n      sload\n      tag_195\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_195:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":4190:4202  token1Amount */\n      dup2\n        /* \"assignment3/Swap.sol\":4178:4186  reserve1 */\n      0x04\n      0x00\n        /* \"assignment3/Swap.sol\":4178:4202  reserve1 += token1Amount */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"assignment3/Swap.sol\":3761:4210  {... */\n      pop\n        /* \"assignment3/Swap.sol\":3705:4210  function token1To0(uint token1Amount) external override {... */\n      pop\n      jump\t// out\n        /* \"assignment3/Swap.sol\":1735:1831  function getShares(address LP) external view returns (uint) {... */\n    tag_54:\n        /* \"assignment3/Swap.sol\":1789:1793  uint */\n      0x00\n        /* \"assignment3/Swap.sol\":1813:1819  shares */\n      0x05\n        /* \"assignment3/Swap.sol\":1813:1823  shares[LP] */\n      0x00\n        /* \"assignment3/Swap.sol\":1820:1822  LP */\n      dup4\n        /* \"assignment3/Swap.sol\":1813:1823  shares[LP] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"assignment3/Swap.sol\":1806:1823  return shares[LP] */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":1735:1831  function getShares(address LP) external view returns (uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_201\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_34\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_206\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"assignment3/Swap.sol\":1200:1503  function sqrt(uint y) internal pure returns (uint z) {... */\n    tag_172:\n        /* \"assignment3/Swap.sol\":1245:1251  uint z */\n      0x00\n        /* \"assignment3/Swap.sol\":1272:1273  3 */\n      0x03\n        /* \"assignment3/Swap.sol\":1268:1269  y */\n      dup3\n        /* \"assignment3/Swap.sol\":1268:1273  y > 3 */\n      gt\n        /* \"assignment3/Swap.sol\":1264:1496  if (y > 3) {... */\n      iszero\n      tag_213\n      jumpi\n        /* \"assignment3/Swap.sol\":1294:1295  y */\n      dup2\n        /* \"assignment3/Swap.sol\":1290:1295  z = y */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":1310:1316  uint x */\n      0x00\n        /* \"assignment3/Swap.sol\":1327:1328  1 */\n      0x01\n        /* \"assignment3/Swap.sol\":1323:1324  2 */\n      0x02\n        /* \"assignment3/Swap.sol\":1319:1320  y */\n      dup5\n        /* \"assignment3/Swap.sol\":1319:1324  y / 2 */\n      tag_214\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_214:\n        /* \"assignment3/Swap.sol\":1319:1328  y / 2 + 1 */\n      tag_215\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_215:\n        /* \"assignment3/Swap.sol\":1310:1328  uint x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":1343:1435  while (x < z) {... */\n    tag_216:\n        /* \"assignment3/Swap.sol\":1354:1355  z */\n      dup2\n        /* \"assignment3/Swap.sol\":1350:1351  x */\n      dup2\n        /* \"assignment3/Swap.sol\":1350:1355  x < z */\n      lt\n        /* \"assignment3/Swap.sol\":1343:1435  while (x < z) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"assignment3/Swap.sol\":1380:1381  x */\n      dup1\n        /* \"assignment3/Swap.sol\":1376:1381  z = x */\n      swap2\n      pop\n        /* \"assignment3/Swap.sol\":1418:1419  2 */\n      0x02\n        /* \"assignment3/Swap.sol\":1413:1414  x */\n      dup2\n        /* \"assignment3/Swap.sol\":1409:1410  x */\n      dup3\n        /* \"assignment3/Swap.sol\":1405:1406  y */\n      dup6\n        /* \"assignment3/Swap.sol\":1405:1410  y / x */\n      tag_218\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_218:\n        /* \"assignment3/Swap.sol\":1405:1414  y / x + x */\n      tag_219\n      swap2\n      swap1\n      tag_68\n      jump\t// in\n    tag_219:\n        /* \"assignment3/Swap.sol\":1404:1419  (y / x + x) / 2 */\n      tag_220\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_220:\n        /* \"assignment3/Swap.sol\":1400:1419  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":1343:1435  while (x < z) {... */\n      jump(tag_216)\n    tag_217:\n        /* \"assignment3/Swap.sol\":1275:1446  {... */\n      pop\n        /* \"assignment3/Swap.sol\":1264:1496  if (y > 3) {... */\n      jump(tag_221)\n    tag_213:\n        /* \"assignment3/Swap.sol\":1461:1462  0 */\n      0x00\n        /* \"assignment3/Swap.sol\":1456:1457  y */\n      dup3\n        /* \"assignment3/Swap.sol\":1456:1462  y != 0 */\n      eq\n        /* \"assignment3/Swap.sol\":1452:1496  if (y != 0) {... */\n      tag_222\n      jumpi\n        /* \"assignment3/Swap.sol\":1483:1484  1 */\n      0x01\n        /* \"assignment3/Swap.sol\":1479:1484  z = 1 */\n      swap1\n      pop\n        /* \"assignment3/Swap.sol\":1452:1496  if (y != 0) {... */\n    tag_222:\n        /* \"assignment3/Swap.sol\":1264:1496  if (y > 3) {... */\n    tag_221:\n        /* \"assignment3/Swap.sol\":1200:1503  function sqrt(uint y) internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_206:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_224:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_225:\n        /* \"#utility.yul\":177:201   */\n      tag_259\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_224\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:546   */\n    tag_19:\n        /* \"#utility.yul\":335:339   */\n      0x00\n        /* \"#utility.yul\":373:375   */\n      0x40\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":358:376   */\n      add\n        /* \"#utility.yul\":350:376   */\n      swap1\n      pop\n        /* \"#utility.yul\":386:457   */\n      tag_261\n        /* \"#utility.yul\":454:455   */\n      0x00\n        /* \"#utility.yul\":443:452   */\n      dup4\n        /* \"#utility.yul\":439:456   */\n      add\n        /* \"#utility.yul\":430:436   */\n      dup6\n        /* \"#utility.yul\":386:457   */\n      tag_225\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":467:539   */\n      tag_262\n        /* \"#utility.yul\":535:537   */\n      0x20\n        /* \"#utility.yul\":524:533   */\n      dup4\n        /* \"#utility.yul\":520:538   */\n      add\n        /* \"#utility.yul\":511:517   */\n      dup5\n        /* \"#utility.yul\":467:539   */\n      tag_225\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":214:546   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":633:750   */\n    tag_227:\n        /* \"#utility.yul\":742:743   */\n      0x00\n        /* \"#utility.yul\":739:740   */\n      dup1\n        /* \"#utility.yul\":732:744   */\n      revert\n        /* \"#utility.yul\":879:1001   */\n    tag_229:\n        /* \"#utility.yul\":952:976   */\n      tag_267\n        /* \"#utility.yul\":970:975   */\n      dup2\n        /* \"#utility.yul\":952:976   */\n      tag_224\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":945:950   */\n      dup2\n        /* \"#utility.yul\":942:977   */\n      eq\n        /* \"#utility.yul\":932:995   */\n      tag_268\n      jumpi\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":988:989   */\n      dup1\n        /* \"#utility.yul\":981:993   */\n      revert\n        /* \"#utility.yul\":932:995   */\n    tag_268:\n        /* \"#utility.yul\":879:1001   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1007:1146   */\n    tag_230:\n        /* \"#utility.yul\":1053:1058   */\n      0x00\n        /* \"#utility.yul\":1091:1097   */\n      dup2\n        /* \"#utility.yul\":1078:1098   */\n      calldataload\n        /* \"#utility.yul\":1069:1098   */\n      swap1\n      pop\n        /* \"#utility.yul\":1107:1140   */\n      tag_270\n        /* \"#utility.yul\":1134:1139   */\n      dup2\n        /* \"#utility.yul\":1107:1140   */\n      tag_229\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":1007:1146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1481   */\n    tag_22:\n        /* \"#utility.yul\":1211:1217   */\n      0x00\n        /* \"#utility.yul\":1260:1262   */\n      0x20\n        /* \"#utility.yul\":1248:1257   */\n      dup3\n        /* \"#utility.yul\":1239:1246   */\n      dup5\n        /* \"#utility.yul\":1235:1258   */\n      sub\n        /* \"#utility.yul\":1231:1263   */\n      slt\n        /* \"#utility.yul\":1228:1347   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":1266:1345   */\n      tag_273\n      tag_227\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":1228:1347   */\n    tag_272:\n        /* \"#utility.yul\":1386:1387   */\n      0x00\n        /* \"#utility.yul\":1411:1464   */\n      tag_274\n        /* \"#utility.yul\":1456:1463   */\n      dup5\n        /* \"#utility.yul\":1447:1453   */\n      dup3\n        /* \"#utility.yul\":1436:1445   */\n      dup6\n        /* \"#utility.yul\":1432:1454   */\n      add\n        /* \"#utility.yul\":1411:1464   */\n      tag_230\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":1401:1464   */\n      swap2\n      pop\n        /* \"#utility.yul\":1357:1474   */\n      pop\n        /* \"#utility.yul\":1152:1481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1709   */\n    tag_27:\n        /* \"#utility.yul\":1580:1584   */\n      0x00\n        /* \"#utility.yul\":1618:1620   */\n      0x20\n        /* \"#utility.yul\":1607:1616   */\n      dup3\n        /* \"#utility.yul\":1603:1621   */\n      add\n        /* \"#utility.yul\":1595:1621   */\n      swap1\n      pop\n        /* \"#utility.yul\":1631:1702   */\n      tag_276\n        /* \"#utility.yul\":1699:1700   */\n      0x00\n        /* \"#utility.yul\":1688:1697   */\n      dup4\n        /* \"#utility.yul\":1684:1701   */\n      add\n        /* \"#utility.yul\":1675:1681   */\n      dup5\n        /* \"#utility.yul\":1631:1702   */\n      tag_225\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":1487:1709   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1715:1841   */\n    tag_231:\n        /* \"#utility.yul\":1752:1759   */\n      0x00\n        /* \"#utility.yul\":1792:1834   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1781:1835   */\n      and\n        /* \"#utility.yul\":1770:1835   */\n      swap1\n      pop\n        /* \"#utility.yul\":1715:1841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1847:1943   */\n    tag_232:\n        /* \"#utility.yul\":1884:1891   */\n      0x00\n        /* \"#utility.yul\":1913:1937   */\n      tag_279\n        /* \"#utility.yul\":1931:1936   */\n      dup3\n        /* \"#utility.yul\":1913:1937   */\n      tag_231\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":1902:1937   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1949:2067   */\n    tag_233:\n        /* \"#utility.yul\":2036:2060   */\n      tag_281\n        /* \"#utility.yul\":2054:2059   */\n      dup2\n        /* \"#utility.yul\":2036:2060   */\n      tag_232\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":2031:2034   */\n      dup3\n        /* \"#utility.yul\":2024:2061   */\n      mstore\n        /* \"#utility.yul\":1949:2067   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2073:2295   */\n    tag_36:\n        /* \"#utility.yul\":2166:2170   */\n      0x00\n        /* \"#utility.yul\":2204:2206   */\n      0x20\n        /* \"#utility.yul\":2193:2202   */\n      dup3\n        /* \"#utility.yul\":2189:2207   */\n      add\n        /* \"#utility.yul\":2181:2207   */\n      swap1\n      pop\n        /* \"#utility.yul\":2217:2288   */\n      tag_283\n        /* \"#utility.yul\":2285:2286   */\n      0x00\n        /* \"#utility.yul\":2274:2283   */\n      dup4\n        /* \"#utility.yul\":2270:2287   */\n      add\n        /* \"#utility.yul\":2261:2267   */\n      dup5\n        /* \"#utility.yul\":2217:2288   */\n      tag_233\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":2073:2295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2301:2775   */\n    tag_42:\n        /* \"#utility.yul\":2369:2375   */\n      0x00\n        /* \"#utility.yul\":2377:2383   */\n      dup1\n        /* \"#utility.yul\":2426:2428   */\n      0x40\n        /* \"#utility.yul\":2414:2423   */\n      dup4\n        /* \"#utility.yul\":2405:2412   */\n      dup6\n        /* \"#utility.yul\":2401:2424   */\n      sub\n        /* \"#utility.yul\":2397:2429   */\n      slt\n        /* \"#utility.yul\":2394:2513   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":2432:2511   */\n      tag_286\n      tag_227\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":2394:2513   */\n    tag_285:\n        /* \"#utility.yul\":2552:2553   */\n      0x00\n        /* \"#utility.yul\":2577:2630   */\n      tag_287\n        /* \"#utility.yul\":2622:2629   */\n      dup6\n        /* \"#utility.yul\":2613:2619   */\n      dup3\n        /* \"#utility.yul\":2602:2611   */\n      dup7\n        /* \"#utility.yul\":2598:2620   */\n      add\n        /* \"#utility.yul\":2577:2630   */\n      tag_230\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":2567:2630   */\n      swap3\n      pop\n        /* \"#utility.yul\":2523:2640   */\n      pop\n        /* \"#utility.yul\":2679:2681   */\n      0x20\n        /* \"#utility.yul\":2705:2758   */\n      tag_288\n        /* \"#utility.yul\":2750:2757   */\n      dup6\n        /* \"#utility.yul\":2741:2747   */\n      dup3\n        /* \"#utility.yul\":2730:2739   */\n      dup7\n        /* \"#utility.yul\":2726:2748   */\n      add\n        /* \"#utility.yul\":2705:2758   */\n      tag_230\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":2695:2758   */\n      swap2\n      pop\n        /* \"#utility.yul\":2650:2768   */\n      pop\n        /* \"#utility.yul\":2301:2775   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2781:3113   */\n    tag_47:\n        /* \"#utility.yul\":2902:2906   */\n      0x00\n        /* \"#utility.yul\":2940:2942   */\n      0x40\n        /* \"#utility.yul\":2929:2938   */\n      dup3\n        /* \"#utility.yul\":2925:2943   */\n      add\n        /* \"#utility.yul\":2917:2943   */\n      swap1\n      pop\n        /* \"#utility.yul\":2953:3024   */\n      tag_290\n        /* \"#utility.yul\":3021:3022   */\n      0x00\n        /* \"#utility.yul\":3010:3019   */\n      dup4\n        /* \"#utility.yul\":3006:3023   */\n      add\n        /* \"#utility.yul\":2997:3003   */\n      dup6\n        /* \"#utility.yul\":2953:3024   */\n      tag_233\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":3034:3106   */\n      tag_291\n        /* \"#utility.yul\":3102:3104   */\n      0x20\n        /* \"#utility.yul\":3091:3100   */\n      dup4\n        /* \"#utility.yul\":3087:3105   */\n      add\n        /* \"#utility.yul\":3078:3084   */\n      dup5\n        /* \"#utility.yul\":3034:3106   */\n      tag_233\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":2781:3113   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3119:3241   */\n    tag_234:\n        /* \"#utility.yul\":3192:3216   */\n      tag_293\n        /* \"#utility.yul\":3210:3215   */\n      dup2\n        /* \"#utility.yul\":3192:3216   */\n      tag_232\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3182:3217   */\n      eq\n        /* \"#utility.yul\":3172:3235   */\n      tag_294\n      jumpi\n        /* \"#utility.yul\":3231:3232   */\n      0x00\n        /* \"#utility.yul\":3228:3229   */\n      dup1\n        /* \"#utility.yul\":3221:3233   */\n      revert\n        /* \"#utility.yul\":3172:3235   */\n    tag_294:\n        /* \"#utility.yul\":3119:3241   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3247:3386   */\n    tag_235:\n        /* \"#utility.yul\":3293:3298   */\n      0x00\n        /* \"#utility.yul\":3331:3337   */\n      dup2\n        /* \"#utility.yul\":3318:3338   */\n      calldataload\n        /* \"#utility.yul\":3309:3338   */\n      swap1\n      pop\n        /* \"#utility.yul\":3347:3380   */\n      tag_296\n        /* \"#utility.yul\":3374:3379   */\n      dup2\n        /* \"#utility.yul\":3347:3380   */\n      tag_234\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":3247:3386   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3392:3721   */\n    tag_53:\n        /* \"#utility.yul\":3451:3457   */\n      0x00\n        /* \"#utility.yul\":3500:3502   */\n      0x20\n        /* \"#utility.yul\":3488:3497   */\n      dup3\n        /* \"#utility.yul\":3479:3486   */\n      dup5\n        /* \"#utility.yul\":3475:3498   */\n      sub\n        /* \"#utility.yul\":3471:3503   */\n      slt\n        /* \"#utility.yul\":3468:3587   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":3506:3585   */\n      tag_299\n      tag_227\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":3468:3587   */\n    tag_298:\n        /* \"#utility.yul\":3626:3627   */\n      0x00\n        /* \"#utility.yul\":3651:3704   */\n      tag_300\n        /* \"#utility.yul\":3696:3703   */\n      dup5\n        /* \"#utility.yul\":3687:3693   */\n      dup3\n        /* \"#utility.yul\":3676:3685   */\n      dup6\n        /* \"#utility.yul\":3672:3694   */\n      add\n        /* \"#utility.yul\":3651:3704   */\n      tag_235\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":3641:3704   */\n      swap2\n      pop\n        /* \"#utility.yul\":3597:3714   */\n      pop\n        /* \"#utility.yul\":3392:3721   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3727:3896   */\n    tag_236:\n        /* \"#utility.yul\":3811:3822   */\n      0x00\n        /* \"#utility.yul\":3845:3851   */\n      dup3\n        /* \"#utility.yul\":3840:3843   */\n      dup3\n        /* \"#utility.yul\":3833:3852   */\n      mstore\n        /* \"#utility.yul\":3885:3889   */\n      0x20\n        /* \"#utility.yul\":3880:3883   */\n      dup3\n        /* \"#utility.yul\":3876:3890   */\n      add\n        /* \"#utility.yul\":3861:3890   */\n      swap1\n      pop\n        /* \"#utility.yul\":3727:3896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3902:4071   */\n    tag_237:\n        /* \"#utility.yul\":4042:4063   */\n      0x6e6f7420746f6b656e302070726f766964656400000000000000000000000000\n        /* \"#utility.yul\":4038:4039   */\n      0x00\n        /* \"#utility.yul\":4030:4036   */\n      dup3\n        /* \"#utility.yul\":4026:4040   */\n      add\n        /* \"#utility.yul\":4019:4064   */\n      mstore\n        /* \"#utility.yul\":3902:4071   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4077:4443   */\n    tag_238:\n        /* \"#utility.yul\":4219:4222   */\n      0x00\n        /* \"#utility.yul\":4240:4307   */\n      tag_304\n        /* \"#utility.yul\":4304:4306   */\n      0x13\n        /* \"#utility.yul\":4299:4302   */\n      dup4\n        /* \"#utility.yul\":4240:4307   */\n      tag_236\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":4233:4307   */\n      swap2\n      pop\n        /* \"#utility.yul\":4316:4409   */\n      tag_305\n        /* \"#utility.yul\":4405:4408   */\n      dup3\n        /* \"#utility.yul\":4316:4409   */\n      tag_237\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":4434:4436   */\n      0x20\n        /* \"#utility.yul\":4429:4432   */\n      dup3\n        /* \"#utility.yul\":4425:4437   */\n      add\n        /* \"#utility.yul\":4418:4437   */\n      swap1\n      pop\n        /* \"#utility.yul\":4077:4443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4449:4868   */\n    tag_63:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4702:4711   */\n      dup2\n        /* \"#utility.yul\":4696:4700   */\n      dup2\n        /* \"#utility.yul\":4692:4712   */\n      sub\n        /* \"#utility.yul\":4688:4689   */\n      0x00\n        /* \"#utility.yul\":4677:4686   */\n      dup4\n        /* \"#utility.yul\":4673:4690   */\n      add\n        /* \"#utility.yul\":4666:4713   */\n      mstore\n        /* \"#utility.yul\":4730:4861   */\n      tag_307\n        /* \"#utility.yul\":4856:4860   */\n      dup2\n        /* \"#utility.yul\":4730:4861   */\n      tag_238\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":4722:4861   */\n      swap1\n      pop\n        /* \"#utility.yul\":4449:4868   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4874:5054   */\n    tag_239:\n        /* \"#utility.yul\":4922:4999   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4919:4920   */\n      0x00\n        /* \"#utility.yul\":4912:5000   */\n      mstore\n        /* \"#utility.yul\":5019:5023   */\n      0x11\n        /* \"#utility.yul\":5016:5017   */\n      0x04\n        /* \"#utility.yul\":5009:5024   */\n      mstore\n        /* \"#utility.yul\":5043:5047   */\n      0x24\n        /* \"#utility.yul\":5040:5041   */\n      0x00\n        /* \"#utility.yul\":5033:5048   */\n      revert\n        /* \"#utility.yul\":5060:5470   */\n    tag_65:\n        /* \"#utility.yul\":5100:5107   */\n      0x00\n        /* \"#utility.yul\":5123:5143   */\n      tag_310\n        /* \"#utility.yul\":5141:5142   */\n      dup3\n        /* \"#utility.yul\":5123:5143   */\n      tag_224\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":5118:5143   */\n      swap2\n      pop\n        /* \"#utility.yul\":5157:5177   */\n      tag_311\n        /* \"#utility.yul\":5175:5176   */\n      dup4\n        /* \"#utility.yul\":5157:5177   */\n      tag_224\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":5152:5177   */\n      swap3\n      pop\n        /* \"#utility.yul\":5212:5213   */\n      dup3\n        /* \"#utility.yul\":5209:5210   */\n      dup3\n        /* \"#utility.yul\":5205:5214   */\n      mul\n        /* \"#utility.yul\":5234:5264   */\n      tag_312\n        /* \"#utility.yul\":5252:5263   */\n      dup2\n        /* \"#utility.yul\":5234:5264   */\n      tag_224\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":5223:5264   */\n      swap2\n      pop\n        /* \"#utility.yul\":5413:5414   */\n      dup3\n        /* \"#utility.yul\":5404:5411   */\n      dup3\n        /* \"#utility.yul\":5400:5415   */\n      div\n        /* \"#utility.yul\":5397:5398   */\n      dup5\n        /* \"#utility.yul\":5394:5416   */\n      eq\n        /* \"#utility.yul\":5374:5375   */\n      dup4\n        /* \"#utility.yul\":5367:5376   */\n      iszero\n        /* \"#utility.yul\":5347:5430   */\n      or\n        /* \"#utility.yul\":5324:5463   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":5443:5461   */\n      tag_314\n      tag_239\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":5324:5463   */\n    tag_313:\n        /* \"#utility.yul\":5108:5470   */\n      pop\n        /* \"#utility.yul\":5060:5470   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5476:5667   */\n    tag_68:\n        /* \"#utility.yul\":5516:5519   */\n      0x00\n        /* \"#utility.yul\":5535:5555   */\n      tag_316\n        /* \"#utility.yul\":5553:5554   */\n      dup3\n        /* \"#utility.yul\":5535:5555   */\n      tag_224\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":5530:5555   */\n      swap2\n      pop\n        /* \"#utility.yul\":5569:5589   */\n      tag_317\n        /* \"#utility.yul\":5587:5588   */\n      dup4\n        /* \"#utility.yul\":5569:5589   */\n      tag_224\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":5564:5589   */\n      swap3\n      pop\n        /* \"#utility.yul\":5612:5613   */\n      dup3\n        /* \"#utility.yul\":5609:5610   */\n      dup3\n        /* \"#utility.yul\":5605:5614   */\n      add\n        /* \"#utility.yul\":5598:5614   */\n      swap1\n      pop\n        /* \"#utility.yul\":5633:5636   */\n      dup1\n        /* \"#utility.yul\":5630:5631   */\n      dup3\n        /* \"#utility.yul\":5627:5637   */\n      gt\n        /* \"#utility.yul\":5624:5660   */\n      iszero\n      tag_318\n      jumpi\n        /* \"#utility.yul\":5640:5658   */\n      tag_319\n      tag_239\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":5624:5660   */\n    tag_318:\n        /* \"#utility.yul\":5476:5667   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5673:5853   */\n    tag_240:\n        /* \"#utility.yul\":5721:5798   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5718:5719   */\n      0x00\n        /* \"#utility.yul\":5711:5799   */\n      mstore\n        /* \"#utility.yul\":5818:5822   */\n      0x12\n        /* \"#utility.yul\":5815:5816   */\n      0x04\n        /* \"#utility.yul\":5808:5823   */\n      mstore\n        /* \"#utility.yul\":5842:5846   */\n      0x24\n        /* \"#utility.yul\":5839:5840   */\n      0x00\n        /* \"#utility.yul\":5832:5847   */\n      revert\n        /* \"#utility.yul\":5859:6044   */\n    tag_72:\n        /* \"#utility.yul\":5899:5900   */\n      0x00\n        /* \"#utility.yul\":5916:5936   */\n      tag_322\n        /* \"#utility.yul\":5934:5935   */\n      dup3\n        /* \"#utility.yul\":5916:5936   */\n      tag_224\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":5911:5936   */\n      swap2\n      pop\n        /* \"#utility.yul\":5950:5970   */\n      tag_323\n        /* \"#utility.yul\":5968:5969   */\n      dup4\n        /* \"#utility.yul\":5950:5970   */\n      tag_224\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":5945:5970   */\n      swap3\n      pop\n        /* \"#utility.yul\":5989:5990   */\n      dup3\n        /* \"#utility.yul\":5979:6014   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":5994:6012   */\n      tag_325\n      tag_240\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":5979:6014   */\n    tag_324:\n        /* \"#utility.yul\":6036:6037   */\n      dup3\n        /* \"#utility.yul\":6033:6034   */\n      dup3\n        /* \"#utility.yul\":6029:6038   */\n      div\n        /* \"#utility.yul\":6024:6038   */\n      swap1\n      pop\n        /* \"#utility.yul\":5859:6044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6050:6492   */\n    tag_74:\n        /* \"#utility.yul\":6199:6203   */\n      0x00\n        /* \"#utility.yul\":6237:6239   */\n      0x60\n        /* \"#utility.yul\":6226:6235   */\n      dup3\n        /* \"#utility.yul\":6222:6240   */\n      add\n        /* \"#utility.yul\":6214:6240   */\n      swap1\n      pop\n        /* \"#utility.yul\":6250:6321   */\n      tag_327\n        /* \"#utility.yul\":6318:6319   */\n      0x00\n        /* \"#utility.yul\":6307:6316   */\n      dup4\n        /* \"#utility.yul\":6303:6320   */\n      add\n        /* \"#utility.yul\":6294:6300   */\n      dup7\n        /* \"#utility.yul\":6250:6321   */\n      tag_233\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":6331:6403   */\n      tag_328\n        /* \"#utility.yul\":6399:6401   */\n      0x20\n        /* \"#utility.yul\":6388:6397   */\n      dup4\n        /* \"#utility.yul\":6384:6402   */\n      add\n        /* \"#utility.yul\":6375:6381   */\n      dup6\n        /* \"#utility.yul\":6331:6403   */\n      tag_233\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":6413:6485   */\n      tag_329\n        /* \"#utility.yul\":6481:6483   */\n      0x40\n        /* \"#utility.yul\":6470:6479   */\n      dup4\n        /* \"#utility.yul\":6466:6484   */\n      add\n        /* \"#utility.yul\":6457:6463   */\n      dup5\n        /* \"#utility.yul\":6413:6485   */\n      tag_225\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":6050:6492   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6498:6588   */\n    tag_241:\n        /* \"#utility.yul\":6532:6539   */\n      0x00\n        /* \"#utility.yul\":6575:6580   */\n      dup2\n        /* \"#utility.yul\":6568:6581   */\n      iszero\n        /* \"#utility.yul\":6561:6582   */\n      iszero\n        /* \"#utility.yul\":6550:6582   */\n      swap1\n      pop\n        /* \"#utility.yul\":6498:6588   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6594:6710   */\n    tag_242:\n        /* \"#utility.yul\":6664:6685   */\n      tag_332\n        /* \"#utility.yul\":6679:6684   */\n      dup2\n        /* \"#utility.yul\":6664:6685   */\n      tag_241\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":6657:6662   */\n      dup2\n        /* \"#utility.yul\":6654:6686   */\n      eq\n        /* \"#utility.yul\":6644:6704   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":6700:6701   */\n      0x00\n        /* \"#utility.yul\":6697:6698   */\n      dup1\n        /* \"#utility.yul\":6690:6702   */\n      revert\n        /* \"#utility.yul\":6644:6704   */\n    tag_333:\n        /* \"#utility.yul\":6594:6710   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6716:6853   */\n    tag_243:\n        /* \"#utility.yul\":6770:6775   */\n      0x00\n        /* \"#utility.yul\":6801:6807   */\n      dup2\n        /* \"#utility.yul\":6795:6808   */\n      mload\n        /* \"#utility.yul\":6786:6808   */\n      swap1\n      pop\n        /* \"#utility.yul\":6817:6847   */\n      tag_335\n        /* \"#utility.yul\":6841:6846   */\n      dup2\n        /* \"#utility.yul\":6817:6847   */\n      tag_242\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":6716:6853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7204   */\n    tag_78:\n        /* \"#utility.yul\":6926:6932   */\n      0x00\n        /* \"#utility.yul\":6975:6977   */\n      0x20\n        /* \"#utility.yul\":6963:6972   */\n      dup3\n        /* \"#utility.yul\":6954:6961   */\n      dup5\n        /* \"#utility.yul\":6950:6973   */\n      sub\n        /* \"#utility.yul\":6946:6978   */\n      slt\n        /* \"#utility.yul\":6943:7062   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":6981:7060   */\n      tag_338\n      tag_227\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":6943:7062   */\n    tag_337:\n        /* \"#utility.yul\":7101:7102   */\n      0x00\n        /* \"#utility.yul\":7126:7187   */\n      tag_339\n        /* \"#utility.yul\":7179:7186   */\n      dup5\n        /* \"#utility.yul\":7170:7176   */\n      dup3\n        /* \"#utility.yul\":7159:7168   */\n      dup6\n        /* \"#utility.yul\":7155:7177   */\n      add\n        /* \"#utility.yul\":7126:7187   */\n      tag_243\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":7116:7187   */\n      swap2\n      pop\n        /* \"#utility.yul\":7072:7197   */\n      pop\n        /* \"#utility.yul\":6859:7204   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7210:7385   */\n    tag_244:\n        /* \"#utility.yul\":7350:7377   */\n      0x6661696c656420746f207472616e7366657220746f6b656e3000000000000000\n        /* \"#utility.yul\":7346:7347   */\n      0x00\n        /* \"#utility.yul\":7338:7344   */\n      dup3\n        /* \"#utility.yul\":7334:7348   */\n      add\n        /* \"#utility.yul\":7327:7378   */\n      mstore\n        /* \"#utility.yul\":7210:7385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7391:7757   */\n    tag_245:\n        /* \"#utility.yul\":7533:7536   */\n      0x00\n        /* \"#utility.yul\":7554:7621   */\n      tag_342\n        /* \"#utility.yul\":7618:7620   */\n      0x19\n        /* \"#utility.yul\":7613:7616   */\n      dup4\n        /* \"#utility.yul\":7554:7621   */\n      tag_236\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":7547:7621   */\n      swap2\n      pop\n        /* \"#utility.yul\":7630:7723   */\n      tag_343\n        /* \"#utility.yul\":7719:7722   */\n      dup3\n        /* \"#utility.yul\":7630:7723   */\n      tag_244\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":7748:7750   */\n      0x20\n        /* \"#utility.yul\":7743:7746   */\n      dup3\n        /* \"#utility.yul\":7739:7751   */\n      add\n        /* \"#utility.yul\":7732:7751   */\n      swap1\n      pop\n        /* \"#utility.yul\":7391:7757   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7763:8182   */\n    tag_81:\n        /* \"#utility.yul\":7929:7933   */\n      0x00\n        /* \"#utility.yul\":7967:7969   */\n      0x20\n        /* \"#utility.yul\":7956:7965   */\n      dup3\n        /* \"#utility.yul\":7952:7970   */\n      add\n        /* \"#utility.yul\":7944:7970   */\n      swap1\n      pop\n        /* \"#utility.yul\":8016:8025   */\n      dup2\n        /* \"#utility.yul\":8010:8014   */\n      dup2\n        /* \"#utility.yul\":8006:8026   */\n      sub\n        /* \"#utility.yul\":8002:8003   */\n      0x00\n        /* \"#utility.yul\":7991:8000   */\n      dup4\n        /* \"#utility.yul\":7987:8004   */\n      add\n        /* \"#utility.yul\":7980:8027   */\n      mstore\n        /* \"#utility.yul\":8044:8175   */\n      tag_345\n        /* \"#utility.yul\":8170:8174   */\n      dup2\n        /* \"#utility.yul\":8044:8175   */\n      tag_245\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":8036:8175   */\n      swap1\n      pop\n        /* \"#utility.yul\":7763:8182   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8188:8520   */\n    tag_83:\n        /* \"#utility.yul\":8309:8313   */\n      0x00\n        /* \"#utility.yul\":8347:8349   */\n      0x40\n        /* \"#utility.yul\":8336:8345   */\n      dup3\n        /* \"#utility.yul\":8332:8350   */\n      add\n        /* \"#utility.yul\":8324:8350   */\n      swap1\n      pop\n        /* \"#utility.yul\":8360:8431   */\n      tag_347\n        /* \"#utility.yul\":8428:8429   */\n      0x00\n        /* \"#utility.yul\":8417:8426   */\n      dup4\n        /* \"#utility.yul\":8413:8430   */\n      add\n        /* \"#utility.yul\":8404:8410   */\n      dup6\n        /* \"#utility.yul\":8360:8431   */\n      tag_233\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":8441:8513   */\n      tag_348\n        /* \"#utility.yul\":8509:8511   */\n      0x20\n        /* \"#utility.yul\":8498:8507   */\n      dup4\n        /* \"#utility.yul\":8494:8512   */\n      add\n        /* \"#utility.yul\":8485:8491   */\n      dup5\n        /* \"#utility.yul\":8441:8513   */\n      tag_225\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":8188:8520   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8526:8701   */\n    tag_246:\n        /* \"#utility.yul\":8666:8693   */\n      0x6661696c656420746f207472616e7366657220746f6b656e3100000000000000\n        /* \"#utility.yul\":8662:8663   */\n      0x00\n        /* \"#utility.yul\":8654:8660   */\n      dup3\n        /* \"#utility.yul\":8650:8664   */\n      add\n        /* \"#utility.yul\":8643:8694   */\n      mstore\n        /* \"#utility.yul\":8526:8701   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8707:9073   */\n    tag_247:\n        /* \"#utility.yul\":8849:8852   */\n      0x00\n        /* \"#utility.yul\":8870:8937   */\n      tag_351\n        /* \"#utility.yul\":8934:8936   */\n      0x19\n        /* \"#utility.yul\":8929:8932   */\n      dup4\n        /* \"#utility.yul\":8870:8937   */\n      tag_236\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":8863:8937   */\n      swap2\n      pop\n        /* \"#utility.yul\":8946:9039   */\n      tag_352\n        /* \"#utility.yul\":9035:9038   */\n      dup3\n        /* \"#utility.yul\":8946:9039   */\n      tag_246\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":9064:9066   */\n      0x20\n        /* \"#utility.yul\":9059:9062   */\n      dup3\n        /* \"#utility.yul\":9055:9067   */\n      add\n        /* \"#utility.yul\":9048:9067   */\n      swap1\n      pop\n        /* \"#utility.yul\":8707:9073   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9079:9498   */\n    tag_89:\n        /* \"#utility.yul\":9245:9249   */\n      0x00\n        /* \"#utility.yul\":9283:9285   */\n      0x20\n        /* \"#utility.yul\":9272:9281   */\n      dup3\n        /* \"#utility.yul\":9268:9286   */\n      add\n        /* \"#utility.yul\":9260:9286   */\n      swap1\n      pop\n        /* \"#utility.yul\":9332:9341   */\n      dup2\n        /* \"#utility.yul\":9326:9330   */\n      dup2\n        /* \"#utility.yul\":9322:9342   */\n      sub\n        /* \"#utility.yul\":9318:9319   */\n      0x00\n        /* \"#utility.yul\":9307:9316   */\n      dup4\n        /* \"#utility.yul\":9303:9320   */\n      add\n        /* \"#utility.yul\":9296:9343   */\n      mstore\n        /* \"#utility.yul\":9360:9491   */\n      tag_354\n        /* \"#utility.yul\":9486:9490   */\n      dup2\n        /* \"#utility.yul\":9360:9491   */\n      tag_247\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":9352:9491   */\n      swap1\n      pop\n        /* \"#utility.yul\":9079:9498   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9504:9698   */\n    tag_92:\n        /* \"#utility.yul\":9544:9548   */\n      0x00\n        /* \"#utility.yul\":9564:9584   */\n      tag_356\n        /* \"#utility.yul\":9582:9583   */\n      dup3\n        /* \"#utility.yul\":9564:9584   */\n      tag_224\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":9559:9584   */\n      swap2\n      pop\n        /* \"#utility.yul\":9598:9618   */\n      tag_357\n        /* \"#utility.yul\":9616:9617   */\n      dup4\n        /* \"#utility.yul\":9598:9618   */\n      tag_224\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":9593:9618   */\n      swap3\n      pop\n        /* \"#utility.yul\":9642:9643   */\n      dup3\n        /* \"#utility.yul\":9639:9640   */\n      dup3\n        /* \"#utility.yul\":9635:9644   */\n      sub\n        /* \"#utility.yul\":9627:9644   */\n      swap1\n      pop\n        /* \"#utility.yul\":9666:9667   */\n      dup2\n        /* \"#utility.yul\":9660:9664   */\n      dup2\n        /* \"#utility.yul\":9657:9668   */\n      gt\n        /* \"#utility.yul\":9654:9691   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":9671:9689   */\n      tag_359\n      tag_239\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":9654:9691   */\n    tag_358:\n        /* \"#utility.yul\":9504:9698   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9704:9873   */\n    tag_248:\n        /* \"#utility.yul\":9844:9865   */\n      0x706f6f6c206e6f7420696e6974696c697a656400000000000000000000000000\n        /* \"#utility.yul\":9840:9841   */\n      0x00\n        /* \"#utility.yul\":9832:9838   */\n      dup3\n        /* \"#utility.yul\":9828:9842   */\n      add\n        /* \"#utility.yul\":9821:9866   */\n      mstore\n        /* \"#utility.yul\":9704:9873   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9879:10245   */\n    tag_249:\n        /* \"#utility.yul\":10021:10024   */\n      0x00\n        /* \"#utility.yul\":10042:10109   */\n      tag_362\n        /* \"#utility.yul\":10106:10108   */\n      0x13\n        /* \"#utility.yul\":10101:10104   */\n      dup4\n        /* \"#utility.yul\":10042:10109   */\n      tag_236\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":10035:10109   */\n      swap2\n      pop\n        /* \"#utility.yul\":10118:10211   */\n      tag_363\n        /* \"#utility.yul\":10207:10210   */\n      dup3\n        /* \"#utility.yul\":10118:10211   */\n      tag_248\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":10236:10238   */\n      0x20\n        /* \"#utility.yul\":10231:10234   */\n      dup3\n        /* \"#utility.yul\":10227:10239   */\n      add\n        /* \"#utility.yul\":10220:10239   */\n      swap1\n      pop\n        /* \"#utility.yul\":9879:10245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10251:10670   */\n    tag_97:\n        /* \"#utility.yul\":10417:10421   */\n      0x00\n        /* \"#utility.yul\":10455:10457   */\n      0x20\n        /* \"#utility.yul\":10444:10453   */\n      dup3\n        /* \"#utility.yul\":10440:10458   */\n      add\n        /* \"#utility.yul\":10432:10458   */\n      swap1\n      pop\n        /* \"#utility.yul\":10504:10513   */\n      dup2\n        /* \"#utility.yul\":10498:10502   */\n      dup2\n        /* \"#utility.yul\":10494:10514   */\n      sub\n        /* \"#utility.yul\":10490:10491   */\n      0x00\n        /* \"#utility.yul\":10479:10488   */\n      dup4\n        /* \"#utility.yul\":10475:10492   */\n      add\n        /* \"#utility.yul\":10468:10515   */\n      mstore\n        /* \"#utility.yul\":10532:10663   */\n      tag_365\n        /* \"#utility.yul\":10658:10662   */\n      dup2\n        /* \"#utility.yul\":10532:10663   */\n      tag_249\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":10524:10663   */\n      swap1\n      pop\n        /* \"#utility.yul\":10251:10670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10676:10854   */\n    tag_250:\n        /* \"#utility.yul\":10816:10846   */\n      0x6e6f7420656e6f75676820736861726520746f20776974686472617700000000\n        /* \"#utility.yul\":10812:10813   */\n      0x00\n        /* \"#utility.yul\":10804:10810   */\n      dup3\n        /* \"#utility.yul\":10800:10814   */\n      add\n        /* \"#utility.yul\":10793:10847   */\n      mstore\n        /* \"#utility.yul\":10676:10854   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10860:11226   */\n    tag_251:\n        /* \"#utility.yul\":11002:11005   */\n      0x00\n        /* \"#utility.yul\":11023:11090   */\n      tag_368\n        /* \"#utility.yul\":11087:11089   */\n      0x1c\n        /* \"#utility.yul\":11082:11085   */\n      dup4\n        /* \"#utility.yul\":11023:11090   */\n      tag_236\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":11016:11090   */\n      swap2\n      pop\n        /* \"#utility.yul\":11099:11192   */\n      tag_369\n        /* \"#utility.yul\":11188:11191   */\n      dup3\n        /* \"#utility.yul\":11099:11192   */\n      tag_250\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":11217:11219   */\n      0x20\n        /* \"#utility.yul\":11212:11215   */\n      dup3\n        /* \"#utility.yul\":11208:11220   */\n      add\n        /* \"#utility.yul\":11201:11220   */\n      swap1\n      pop\n        /* \"#utility.yul\":10860:11226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11232:11651   */\n    tag_128:\n        /* \"#utility.yul\":11398:11402   */\n      0x00\n        /* \"#utility.yul\":11436:11438   */\n      0x20\n        /* \"#utility.yul\":11425:11434   */\n      dup3\n        /* \"#utility.yul\":11421:11439   */\n      add\n        /* \"#utility.yul\":11413:11439   */\n      swap1\n      pop\n        /* \"#utility.yul\":11485:11494   */\n      dup2\n        /* \"#utility.yul\":11479:11483   */\n      dup2\n        /* \"#utility.yul\":11475:11495   */\n      sub\n        /* \"#utility.yul\":11471:11472   */\n      0x00\n        /* \"#utility.yul\":11460:11469   */\n      dup4\n        /* \"#utility.yul\":11456:11473   */\n      add\n        /* \"#utility.yul\":11449:11496   */\n      mstore\n        /* \"#utility.yul\":11513:11644   */\n      tag_371\n        /* \"#utility.yul\":11639:11643   */\n      dup2\n        /* \"#utility.yul\":11513:11644   */\n      tag_251\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":11505:11644   */\n      swap1\n      pop\n        /* \"#utility.yul\":11232:11651   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11657:11835   */\n    tag_252:\n        /* \"#utility.yul\":11797:11827   */\n      0x696e6974202d20616c726561647920686173206c697175696469747900000000\n        /* \"#utility.yul\":11793:11794   */\n      0x00\n        /* \"#utility.yul\":11785:11791   */\n      dup3\n        /* \"#utility.yul\":11781:11795   */\n      add\n        /* \"#utility.yul\":11774:11828   */\n      mstore\n        /* \"#utility.yul\":11657:11835   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11841:12207   */\n    tag_253:\n        /* \"#utility.yul\":11983:11986   */\n      0x00\n        /* \"#utility.yul\":12004:12071   */\n      tag_374\n        /* \"#utility.yul\":12068:12070   */\n      0x1c\n        /* \"#utility.yul\":12063:12066   */\n      dup4\n        /* \"#utility.yul\":12004:12071   */\n      tag_236\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":11997:12071   */\n      swap2\n      pop\n        /* \"#utility.yul\":12080:12173   */\n      tag_375\n        /* \"#utility.yul\":12169:12172   */\n      dup3\n        /* \"#utility.yul\":12080:12173   */\n      tag_252\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":12198:12200   */\n      0x20\n        /* \"#utility.yul\":12193:12196   */\n      dup3\n        /* \"#utility.yul\":12189:12201   */\n      add\n        /* \"#utility.yul\":12182:12201   */\n      swap1\n      pop\n        /* \"#utility.yul\":11841:12207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12213:12632   */\n    tag_155:\n        /* \"#utility.yul\":12379:12383   */\n      0x00\n        /* \"#utility.yul\":12417:12419   */\n      0x20\n        /* \"#utility.yul\":12406:12415   */\n      dup3\n        /* \"#utility.yul\":12402:12420   */\n      add\n        /* \"#utility.yul\":12394:12420   */\n      swap1\n      pop\n        /* \"#utility.yul\":12466:12475   */\n      dup2\n        /* \"#utility.yul\":12460:12464   */\n      dup2\n        /* \"#utility.yul\":12456:12476   */\n      sub\n        /* \"#utility.yul\":12452:12453   */\n      0x00\n        /* \"#utility.yul\":12441:12450   */\n      dup4\n        /* \"#utility.yul\":12437:12454   */\n      add\n        /* \"#utility.yul\":12430:12477   */\n      mstore\n        /* \"#utility.yul\":12494:12625   */\n      tag_377\n        /* \"#utility.yul\":12620:12624   */\n      dup2\n        /* \"#utility.yul\":12494:12625   */\n      tag_253\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":12486:12625   */\n      swap1\n      pop\n        /* \"#utility.yul\":12213:12632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12638:12817   */\n    tag_254:\n        /* \"#utility.yul\":12778:12809   */\n      0x696e6974202d20626f746820746f6b656e7320617265206e6565646564000000\n        /* \"#utility.yul\":12774:12775   */\n      0x00\n        /* \"#utility.yul\":12766:12772   */\n      dup3\n        /* \"#utility.yul\":12762:12776   */\n      add\n        /* \"#utility.yul\":12755:12810   */\n      mstore\n        /* \"#utility.yul\":12638:12817   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12823:13189   */\n    tag_255:\n        /* \"#utility.yul\":12965:12968   */\n      0x00\n        /* \"#utility.yul\":12986:13053   */\n      tag_380\n        /* \"#utility.yul\":13050:13052   */\n      0x1d\n        /* \"#utility.yul\":13045:13048   */\n      dup4\n        /* \"#utility.yul\":12986:13053   */\n      tag_236\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":12979:13053   */\n      swap2\n      pop\n        /* \"#utility.yul\":13062:13155   */\n      tag_381\n        /* \"#utility.yul\":13151:13154   */\n      dup3\n        /* \"#utility.yul\":13062:13155   */\n      tag_254\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":13180:13182   */\n      0x20\n        /* \"#utility.yul\":13175:13178   */\n      dup3\n        /* \"#utility.yul\":13171:13183   */\n      add\n        /* \"#utility.yul\":13164:13183   */\n      swap1\n      pop\n        /* \"#utility.yul\":12823:13189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13195:13614   */\n    tag_159:\n        /* \"#utility.yul\":13361:13365   */\n      0x00\n        /* \"#utility.yul\":13399:13401   */\n      0x20\n        /* \"#utility.yul\":13388:13397   */\n      dup3\n        /* \"#utility.yul\":13384:13402   */\n      add\n        /* \"#utility.yul\":13376:13402   */\n      swap1\n      pop\n        /* \"#utility.yul\":13448:13457   */\n      dup2\n        /* \"#utility.yul\":13442:13446   */\n      dup2\n        /* \"#utility.yul\":13438:13458   */\n      sub\n        /* \"#utility.yul\":13434:13435   */\n      0x00\n        /* \"#utility.yul\":13423:13432   */\n      dup4\n        /* \"#utility.yul\":13419:13436   */\n      add\n        /* \"#utility.yul\":13412:13459   */\n      mstore\n        /* \"#utility.yul\":13476:13607   */\n      tag_383\n        /* \"#utility.yul\":13602:13606   */\n      dup2\n        /* \"#utility.yul\":13476:13607   */\n      tag_255\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":13468:13607   */\n      swap1\n      pop\n        /* \"#utility.yul\":13195:13614   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220862114873122a9cbab9e2ff4adaae3d7ee9d2174e1a94f4578dec5692a2aca2464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1389": {
									"entryPoint": null,
									"id": 1389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_429": {
									"entryPoint": null,
									"id": 429,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_525": {
									"entryPoint": 324,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 704,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:13",
										"nodeType": "YulBlock",
										"src": "0:1707:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "939:413:13",
													"nodeType": "YulBlock",
													"src": "939:413:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:13",
																"nodeType": "YulBlock",
																"src": "985:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:13"
																			},
																			"nativeSrc": "987:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:13"
																		},
																		"nativeSrc": "987:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:13"
																		},
																		"nativeSrc": "956:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:13",
																		"nodeType": "YulLiteral",
																		"src": "981:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:13"
																},
																"nativeSrc": "952:32:13",
																"nodeType": "YulFunctionCall",
																"src": "952:32:13"
															},
															"nativeSrc": "949:119:13",
															"nodeType": "YulIf",
															"src": "949:119:13"
														},
														{
															"nativeSrc": "1078:128:13",
															"nodeType": "YulBlock",
															"src": "1078:128:13",
															"statements": [
																{
																	"nativeSrc": "1093:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:13"
																				},
																				"nativeSrc": "1164:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:13"
																		},
																		"nativeSrc": "1132:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:13",
															"nodeType": "YulBlock",
															"src": "1216:129:13",
															"statements": [
																{
																	"nativeSrc": "1231:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:13"
																				},
																				"nativeSrc": "1303:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:13"
																		},
																		"nativeSrc": "1271:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:13",
														"nodeType": "YulTypedName",
														"src": "901:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:13",
														"nodeType": "YulTypedName",
														"src": "912:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:13",
														"nodeType": "YulTypedName",
														"src": "924:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:13",
														"nodeType": "YulTypedName",
														"src": "932:6:13",
														"type": ""
													}
												],
												"src": "845:507:13"
											},
											{
												"body": {
													"nativeSrc": "1423:53:13",
													"nodeType": "YulBlock",
													"src": "1423:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:13"
																		},
																		"nativeSrc": "1445:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:13"
																},
																"nativeSrc": "1433:37:13",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:13"
															},
															"nativeSrc": "1433:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:13",
														"nodeType": "YulTypedName",
														"src": "1411:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:13",
														"nodeType": "YulTypedName",
														"src": "1418:3:13",
														"type": ""
													}
												],
												"src": "1358:118:13"
											},
											{
												"body": {
													"nativeSrc": "1580:124:13",
													"nodeType": "YulBlock",
													"src": "1580:124:13",
													"statements": [
														{
															"nativeSrc": "1590:26:13",
															"nodeType": "YulAssignment",
															"src": "1590:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:13"
																},
																"nativeSrc": "1598:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:13"
																		},
																		"nativeSrc": "1679:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:13"
																},
																"nativeSrc": "1626:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:13"
															},
															"nativeSrc": "1626:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:13",
														"nodeType": "YulTypedName",
														"src": "1552:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:13",
														"nodeType": "YulTypedName",
														"src": "1564:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:13",
														"nodeType": "YulTypedName",
														"src": "1575:4:13",
														"type": ""
													}
												],
												"src": "1482:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162001c5038038062001c5083398181016040528101906200003691906200026a565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620002c0565b60405180910390fd5b620000bb816200014460201b60201c565b508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620002db565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620002348262000209565b9050919050565b620002468162000228565b811462000251575f80fd5b50565b5f8151905062000264816200023b565b92915050565b5f806040838503121562000283576200028262000205565b5b5f620002928582860162000254565b9250506020620002a58582860162000254565b9150509250929050565b620002ba8162000228565b82525050565b5f602082019050620002d55f830184620002af565b92915050565b61196780620002e95f395ff3fe608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80639c8f9f231161006f5780639c8f9f2314610153578063a5843f081461016f578063aa6ca8081461018b578063ad3bd45c146101aa578063f04da65b146101c6578063f2fde38b146101f6576100b2565b80630902f1ac146100b657806326ef80c9146100d55780633a98ef39146100f157806351c6590a1461010f578063715018a61461012b5780638da5cb5b14610135575b5f80fd5b6100be610212565b6040516100cc9291906112b1565b60405180910390f35b6100ef60048036038101906100ea9190611306565b610222565b005b6100f96104a0565b6040516101069190611331565b60405180910390f35b61012960048036038101906101249190611306565b6104a6565b005b61013361078f565b005b61013d6107a2565b60405161014a9190611389565b60405180910390f35b61016d60048036038101906101689190611306565b6107c9565b005b610189600480360381019061018491906113a2565b610adb565b005b610193610d3d565b6040516101a19291906113e0565b60405180910390f35b6101c460048036038101906101bf9190611306565b610d8b565b005b6101e060048036038101906101db9190611431565b611009565b6040516101ed9190611331565b60405180910390f35b610210600480360381019061020b9190611431565b61104f565b005b5f80600354600454915091509091565b5f8111610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b906114b6565b60405180910390fd5b5f6103e5826102739190611501565b6103e86003546102839190611501565b61028d9190611542565b6103e56004548461029e9190611501565b6102a89190611501565b6102b291906115a2565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610312939291906115d2565b6020604051808303815f875af115801561032e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610352919061163c565b610391576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610388906116b1565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103ed9291906116cf565b6020604051808303815f875af1158015610409573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061042d919061163c565b61046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390611740565b60405180910390fd5b8160035f82825461047d9190611542565b925050819055508060045f828254610495919061175e565b925050819055505050565b60065481565b5f600354141580156104ba57505f60045414155b6104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f0906117db565b60405180910390fd5b5f6003546004548361050b9190611501565b61051591906115a2565b90505f600354836006546105299190611501565b61053391906115a2565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610593939291906115d2565b6020604051808303815f875af11580156105af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d3919061163c565b610612576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610609906116b1565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610670939291906115d2565b6020604051808303815f875af115801561068c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b0919061163c565b6106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611740565b60405180910390fd5b8260035f8282546107009190611542565b925050819055508160045f8282546107189190611542565b925050819055508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461076b9190611542565b925050819055508060065f8282546107839190611542565b92505081905550505050565b6107976110d3565b6107a05f61115a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090611843565b60405180910390fd5b5f6006548260035461085b9190611501565b61086591906115a2565b90505f600654836004546108799190611501565b61088391906115a2565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016108e19291906116cf565b6020604051808303815f875af11580156108fd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610921919061163c565b610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610957906116b1565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109bc9291906116cf565b6020604051808303815f875af11580156109d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fc919061163c565b610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3290611740565b60405180910390fd5b8160035f828254610a4c919061175e565b925050819055508060045f828254610a64919061175e565b925050819055508260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ab7919061175e565b925050819055508260065f828254610acf919061175e565b92505081905550505050565b610ae36110d3565b5f600354148015610af557505f600454145b610b34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2b906118ab565b60405180910390fd5b5f82118015610b4257505f81115b610b81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7890611913565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bdf939291906115d2565b6020604051808303815f875af1158015610bfb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1f919061163c565b610c27575f80fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c85939291906115d2565b6020604051808303815f875af1158015610ca1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc5919061163c565b610ccd575f80fd5b8160038190555080600481905550610cef8183610cea9190611501565b61121b565b60068190555060065460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915091509091565b5f8111610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc4906114b6565b60405180910390fd5b5f6103e582610ddc9190611501565b6103e8600454610dec9190611501565b610df69190611542565b6103e560035484610e079190611501565b610e119190611501565b610e1b91906115a2565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e7b939291906115d2565b6020604051808303815f875af1158015610e97573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ebb919061163c565b610efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef190611740565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f569291906116cf565b6020604051808303815f875af1158015610f72573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f96919061163c565b610fd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcc906116b1565b60405180910390fd5b8060035f828254610fe6919061175e565b925050819055508160045f828254610ffe9190611542565b925050819055505050565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6110576110d3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110c7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110be9190611389565b60405180910390fd5b6110d08161115a565b50565b6110db611292565b73ffffffffffffffffffffffffffffffffffffffff166110f96107a2565b73ffffffffffffffffffffffffffffffffffffffff16146111585761111c611292565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161114f9190611389565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6003821115611280578190505f600160028461123891906115a2565b6112429190611542565b90505b8181101561127a57809150600281828561125f91906115a2565b6112699190611542565b61127391906115a2565b9050611245565b5061128d565b5f821461128c57600190505b5b919050565b5f33905090565b5f819050919050565b6112ab81611299565b82525050565b5f6040820190506112c45f8301856112a2565b6112d160208301846112a2565b9392505050565b5f80fd5b6112e581611299565b81146112ef575f80fd5b50565b5f81359050611300816112dc565b92915050565b5f6020828403121561131b5761131a6112d8565b5b5f611328848285016112f2565b91505092915050565b5f6020820190506113445f8301846112a2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113738261134a565b9050919050565b61138381611369565b82525050565b5f60208201905061139c5f83018461137a565b92915050565b5f80604083850312156113b8576113b76112d8565b5b5f6113c5858286016112f2565b92505060206113d6858286016112f2565b9150509250929050565b5f6040820190506113f35f83018561137a565b611400602083018461137a565b9392505050565b61141081611369565b811461141a575f80fd5b50565b5f8135905061142b81611407565b92915050565b5f60208284031215611446576114456112d8565b5b5f6114538482850161141d565b91505092915050565b5f82825260208201905092915050565b7f6e6f7420746f6b656e302070726f7669646564000000000000000000000000005f82015250565b5f6114a060138361145c565b91506114ab8261146c565b602082019050919050565b5f6020820190508181035f8301526114cd81611494565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61150b82611299565b915061151683611299565b925082820261152481611299565b9150828204841483151761153b5761153a6114d4565b5b5092915050565b5f61154c82611299565b915061155783611299565b925082820190508082111561156f5761156e6114d4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6115ac82611299565b91506115b783611299565b9250826115c7576115c6611575565b5b828204905092915050565b5f6060820190506115e55f83018661137a565b6115f2602083018561137a565b6115ff60408301846112a2565b949350505050565b5f8115159050919050565b61161b81611607565b8114611625575f80fd5b50565b5f8151905061163681611612565b92915050565b5f60208284031215611651576116506112d8565b5b5f61165e84828501611628565b91505092915050565b7f6661696c656420746f207472616e7366657220746f6b656e30000000000000005f82015250565b5f61169b60198361145c565b91506116a682611667565b602082019050919050565b5f6020820190508181035f8301526116c88161168f565b9050919050565b5f6040820190506116e25f83018561137a565b6116ef60208301846112a2565b9392505050565b7f6661696c656420746f207472616e7366657220746f6b656e31000000000000005f82015250565b5f61172a60198361145c565b9150611735826116f6565b602082019050919050565b5f6020820190508181035f8301526117578161171e565b9050919050565b5f61176882611299565b915061177383611299565b925082820390508181111561178b5761178a6114d4565b5b92915050565b7f706f6f6c206e6f7420696e6974696c697a6564000000000000000000000000005f82015250565b5f6117c560138361145c565b91506117d082611791565b602082019050919050565b5f6020820190508181035f8301526117f2816117b9565b9050919050565b7f6e6f7420656e6f75676820736861726520746f207769746864726177000000005f82015250565b5f61182d601c8361145c565b9150611838826117f9565b602082019050919050565b5f6020820190508181035f83015261185a81611821565b9050919050565b7f696e6974202d20616c726561647920686173206c6971756964697479000000005f82015250565b5f611895601c8361145c565b91506118a082611861565b602082019050919050565b5f6020820190508181035f8301526118c281611889565b9050919050565b7f696e6974202d20626f746820746f6b656e7320617265206e65656465640000005f82015250565b5f6118fd601d8361145c565b9150611908826118c9565b602082019050919050565b5f6020820190508181035f83015261192a816118f1565b905091905056fea2646970667358221220862114873122a9cbab9e2ff4adaae3d7ee9d2174e1a94f4578dec5692a2aca2464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C50 CODESIZE SUB DUP1 PUSH3 0x1C50 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x26A JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x2C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0x144 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x2DB JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x234 DUP3 PUSH3 0x209 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x246 DUP2 PUSH3 0x228 JUMP JUMPDEST DUP2 EQ PUSH3 0x251 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x264 DUP2 PUSH3 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x283 JUMPI PUSH3 0x282 PUSH3 0x205 JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x292 DUP6 DUP3 DUP7 ADD PUSH3 0x254 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x2A5 DUP6 DUP3 DUP7 ADD PUSH3 0x254 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH3 0x2BA DUP2 PUSH3 0x228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x2D5 PUSH0 DUP4 ADD DUP5 PUSH3 0x2AF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1967 DUP1 PUSH3 0x2E9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xA5843F08 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xAD3BD45C EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xF04DA65B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F6 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x26EF80C9 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP3 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP3 SWAP2 SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x104F JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 SLOAD DUP5 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x388 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x409 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI POP PUSH0 PUSH1 0x4 SLOAD EQ ISZERO JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP4 PUSH1 0x6 SLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x7A0 PUSH0 PUSH2 0x115A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 SLOAD DUP3 PUSH1 0x3 SLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP4 PUSH1 0x4 SLOAD PUSH2 0x879 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BC SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA64 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xAE3 PUSH2 0x10D3 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD EQ DUP1 ISZERO PUSH2 0xAF5 JUMPI POP PUSH0 PUSH1 0x4 SLOAD EQ JUMPDEST PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xB42 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xC27 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC85 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCA1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC5 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xCCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0xCEF DUP2 DUP4 PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xDCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x3 SLOAD DUP5 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xE1B SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE97 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF1 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF72 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF96 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xFD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFE6 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1057 PUSH2 0x10D3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D0 DUP2 PUSH2 0x115A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10DB PUSH2 0x1292 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F9 PUSH2 0x7A2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1158 JUMPI PUSH2 0x111C PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP2 SWAP1 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1280 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x127A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1273 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1245 JUMP JUMPDEST POP PUSH2 0x128D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x128C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AB DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12C4 PUSH0 DUP4 ADD DUP6 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x12D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12E5 DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP2 EQ PUSH2 0x12EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1300 DUP2 PUSH2 0x12DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1328 DUP5 DUP3 DUP6 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1344 PUSH0 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1373 DUP3 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139C PUSH0 DUP4 ADD DUP5 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C5 DUP6 DUP3 DUP7 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D6 DUP6 DUP3 DUP7 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13F3 PUSH0 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x1400 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x137A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP2 EQ PUSH2 0x141A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142B DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH2 0x1445 PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1453 DUP5 DUP3 DUP6 ADD PUSH2 0x141D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420746F6B656E302070726F766964656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A0 PUSH1 0x13 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x14AB DUP3 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CD DUP2 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x150B DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x1516 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1524 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x153B JUMPI PUSH2 0x153A PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x154C DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x1557 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x156F JUMPI PUSH2 0x156E PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15AC DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B7 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15C7 JUMPI PUSH2 0x15C6 PUSH2 0x1575 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15E5 PUSH0 DUP4 ADD DUP7 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x15F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x15FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161B DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP2 EQ PUSH2 0x1625 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1636 DUP2 PUSH2 0x1612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH2 0x1650 PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165E DUP5 DUP3 DUP6 ADD PUSH2 0x1628 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6661696C656420746F207472616E7366657220746F6B656E3000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x169B PUSH1 0x19 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x16A6 DUP3 PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C8 DUP2 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16E2 PUSH0 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x16EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6661696C656420746F207472616E7366657220746F6B656E3100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x172A PUSH1 0x19 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1735 DUP3 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1757 DUP2 PUSH2 0x171E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1768 DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x1773 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x178B JUMPI PUSH2 0x178A PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x706F6F6C206E6F7420696E6974696C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17C5 PUSH1 0x13 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x17D0 DUP3 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F2 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6F75676820736861726520746F20776974686472617700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x182D PUSH1 0x1C DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1838 DUP3 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x185A DUP2 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E6974202D20616C726561647920686173206C697175696469747900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 PUSH1 0x1C DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x18A0 DUP3 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C2 DUP2 PUSH2 0x1889 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E6974202D20626F746820746F6B656E7320617265206E6565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18FD PUSH1 0x1D DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1908 DUP3 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x192A DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x21 EQ DUP8 BALANCE 0x22 0xA9 0xCB 0xAB SWAP15 0x2F DELEGATECALL 0xAD 0xAA 0xE3 0xD7 0xEE SWAP14 0x21 PUSH21 0xE1A94F4578DEC5692A2ACA2464736F6C6343000818 STOP CALLER ",
							"sourceMap": "180:4043:10:-:0;;;386:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;205:10;1297:1:2;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;448:5:10;439:6;;:14;;;;;;;;;;;;;;;;;;473:5;464:6;;:14;;;;;;;;;;;;;;;;;;386:100;;180:4043;;2912:187:2;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;180:4043:10:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_463": {
									"entryPoint": 4307,
									"id": 463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 4754,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_525": {
									"entryPoint": 4442,
									"id": 525,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1650": {
									"entryPoint": 1190,
									"id": 1650,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getReserves_1541": {
									"entryPoint": 530,
									"id": 1541,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@getShares_1565": {
									"entryPoint": 4105,
									"id": 1565,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokens_1553": {
									"entryPoint": 3389,
									"id": 1553,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@init_1475": {
									"entryPoint": 2779,
									"id": 1475,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@owner_446": {
									"entryPoint": 1954,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_1726": {
									"entryPoint": 1993,
									"id": 1726,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_477": {
									"entryPoint": 1935,
									"id": 477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_1529": {
									"entryPoint": 4635,
									"id": 1529,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@token0To1_1794": {
									"entryPoint": 546,
									"id": 1794,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@token1To0_1862": {
									"entryPoint": 3467,
									"id": 1862,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@totalShares_1373": {
									"entryPoint": 1184,
									"id": 1373,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_505": {
									"entryPoint": 4175,
									"id": 505,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5692,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5775,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5918,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5001,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5586,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5839,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6211,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6107,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5302,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4785,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5538,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4969,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 5493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4824,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250": {
									"entryPoint": 5735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27": {
									"entryPoint": 6137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7": {
									"entryPoint": 6033,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f": {
									"entryPoint": 5878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8": {
									"entryPoint": 5228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4828,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13617:13",
										"nodeType": "YulBlock",
										"src": "0:13617:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:13",
													"nodeType": "YulBlock",
													"src": "52:32:13",
													"statements": [
														{
															"nativeSrc": "62:16:13",
															"nodeType": "YulAssignment",
															"src": "62:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:13",
																"nodeType": "YulIdentifier",
																"src": "73:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:13",
														"nodeType": "YulTypedName",
														"src": "34:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:13",
														"nodeType": "YulTypedName",
														"src": "44:7:13",
														"type": ""
													}
												],
												"src": "7:77:13"
											},
											{
												"body": {
													"nativeSrc": "155:53:13",
													"nodeType": "YulBlock",
													"src": "155:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:13"
																		},
																		"nativeSrc": "177:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:13"
																},
																"nativeSrc": "165:37:13",
																"nodeType": "YulFunctionCall",
																"src": "165:37:13"
															},
															"nativeSrc": "165:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:13",
														"nodeType": "YulTypedName",
														"src": "143:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:13",
														"nodeType": "YulTypedName",
														"src": "150:3:13",
														"type": ""
													}
												],
												"src": "90:118:13"
											},
											{
												"body": {
													"nativeSrc": "340:206:13",
													"nodeType": "YulBlock",
													"src": "340:206:13",
													"statements": [
														{
															"nativeSrc": "350:26:13",
															"nodeType": "YulAssignment",
															"src": "350:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "373:2:13",
																		"nodeType": "YulLiteral",
																		"src": "373:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "358:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:13"
																},
																"nativeSrc": "358:18:13",
																"nodeType": "YulFunctionCall",
																"src": "358:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "350:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "350:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "430:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "430:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "443:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "443:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "454:1:13",
																				"nodeType": "YulLiteral",
																				"src": "454:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "439:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "439:3:13"
																		},
																		"nativeSrc": "439:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "439:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "386:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "386:43:13"
																},
																"nativeSrc": "386:71:13",
																"nodeType": "YulFunctionCall",
																"src": "386:71:13"
															},
															"nativeSrc": "386:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "386:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "511:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "511:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "524:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "524:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "535:2:13",
																				"nodeType": "YulLiteral",
																				"src": "535:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "520:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:13"
																		},
																		"nativeSrc": "520:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "520:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "467:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "467:43:13"
																},
																"nativeSrc": "467:72:13",
																"nodeType": "YulFunctionCall",
																"src": "467:72:13"
															},
															"nativeSrc": "467:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "467:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "214:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "304:9:13",
														"nodeType": "YulTypedName",
														"src": "304:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "316:6:13",
														"nodeType": "YulTypedName",
														"src": "316:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "324:6:13",
														"nodeType": "YulTypedName",
														"src": "324:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "335:4:13",
														"nodeType": "YulTypedName",
														"src": "335:4:13",
														"type": ""
													}
												],
												"src": "214:332:13"
											},
											{
												"body": {
													"nativeSrc": "592:35:13",
													"nodeType": "YulBlock",
													"src": "592:35:13",
													"statements": [
														{
															"nativeSrc": "602:19:13",
															"nodeType": "YulAssignment",
															"src": "602:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "618:2:13",
																		"nodeType": "YulLiteral",
																		"src": "618:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "612:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "612:5:13"
																},
																"nativeSrc": "612:9:13",
																"nodeType": "YulFunctionCall",
																"src": "612:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "602:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "602:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "552:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "585:6:13",
														"nodeType": "YulTypedName",
														"src": "585:6:13",
														"type": ""
													}
												],
												"src": "552:75:13"
											},
											{
												"body": {
													"nativeSrc": "722:28:13",
													"nodeType": "YulBlock",
													"src": "722:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "739:1:13",
																		"nodeType": "YulLiteral",
																		"src": "739:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "742:1:13",
																		"nodeType": "YulLiteral",
																		"src": "742:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "732:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "732:6:13"
																},
																"nativeSrc": "732:12:13",
																"nodeType": "YulFunctionCall",
																"src": "732:12:13"
															},
															"nativeSrc": "732:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "732:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "633:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "633:117:13"
											},
											{
												"body": {
													"nativeSrc": "845:28:13",
													"nodeType": "YulBlock",
													"src": "845:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "862:1:13",
																		"nodeType": "YulLiteral",
																		"src": "862:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:1:13",
																		"nodeType": "YulLiteral",
																		"src": "865:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "855:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:13"
																},
																"nativeSrc": "855:12:13",
																"nodeType": "YulFunctionCall",
																"src": "855:12:13"
															},
															"nativeSrc": "855:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "855:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "756:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "756:117:13"
											},
											{
												"body": {
													"nativeSrc": "922:79:13",
													"nodeType": "YulBlock",
													"src": "922:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "979:16:13",
																"nodeType": "YulBlock",
																"src": "979:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "988:1:13",
																					"nodeType": "YulLiteral",
																					"src": "988:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "991:1:13",
																					"nodeType": "YulLiteral",
																					"src": "991:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "981:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:13"
																			},
																			"nativeSrc": "981:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "981:12:13"
																		},
																		"nativeSrc": "981:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "981:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "945:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "945:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "970:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "970:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "952:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "952:17:13"
																				},
																				"nativeSrc": "952:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "952:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "942:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "942:2:13"
																		},
																		"nativeSrc": "942:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "942:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "935:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "935:6:13"
																},
																"nativeSrc": "935:43:13",
																"nodeType": "YulFunctionCall",
																"src": "935:43:13"
															},
															"nativeSrc": "932:63:13",
															"nodeType": "YulIf",
															"src": "932:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "879:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "915:5:13",
														"nodeType": "YulTypedName",
														"src": "915:5:13",
														"type": ""
													}
												],
												"src": "879:122:13"
											},
											{
												"body": {
													"nativeSrc": "1059:87:13",
													"nodeType": "YulBlock",
													"src": "1059:87:13",
													"statements": [
														{
															"nativeSrc": "1069:29:13",
															"nodeType": "YulAssignment",
															"src": "1069:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1091:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1091:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1078:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "1078:12:13"
																},
																"nativeSrc": "1078:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1078:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1069:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1069:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1134:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1134:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1107:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1107:26:13"
																},
																"nativeSrc": "1107:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1107:33:13"
															},
															"nativeSrc": "1107:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1107:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1007:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1037:6:13",
														"nodeType": "YulTypedName",
														"src": "1037:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1045:3:13",
														"nodeType": "YulTypedName",
														"src": "1045:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1053:5:13",
														"nodeType": "YulTypedName",
														"src": "1053:5:13",
														"type": ""
													}
												],
												"src": "1007:139:13"
											},
											{
												"body": {
													"nativeSrc": "1218:263:13",
													"nodeType": "YulBlock",
													"src": "1218:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1264:83:13",
																"nodeType": "YulBlock",
																"src": "1264:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1266:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1266:77:13"
																			},
																			"nativeSrc": "1266:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1266:79:13"
																		},
																		"nativeSrc": "1266:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1266:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1239:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1239:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1248:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1248:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1235:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1235:3:13"
																		},
																		"nativeSrc": "1235:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1235:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1260:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1260:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1231:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:13"
																},
																"nativeSrc": "1231:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1231:32:13"
															},
															"nativeSrc": "1228:119:13",
															"nodeType": "YulIf",
															"src": "1228:119:13"
														},
														{
															"nativeSrc": "1357:117:13",
															"nodeType": "YulBlock",
															"src": "1357:117:13",
															"statements": [
																{
																	"nativeSrc": "1372:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1372:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1386:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1386:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1376:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1376:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1401:63:13",
																	"nodeType": "YulAssignment",
																	"src": "1401:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1436:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1436:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1447:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1447:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1432:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1432:3:13"
																				},
																				"nativeSrc": "1432:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1432:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1456:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1456:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1411:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "1411:20:13"
																		},
																		"nativeSrc": "1411:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1411:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1401:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1401:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1152:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1188:9:13",
														"nodeType": "YulTypedName",
														"src": "1188:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1199:7:13",
														"nodeType": "YulTypedName",
														"src": "1199:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1211:6:13",
														"nodeType": "YulTypedName",
														"src": "1211:6:13",
														"type": ""
													}
												],
												"src": "1152:329:13"
											},
											{
												"body": {
													"nativeSrc": "1585:124:13",
													"nodeType": "YulBlock",
													"src": "1585:124:13",
													"statements": [
														{
															"nativeSrc": "1595:26:13",
															"nodeType": "YulAssignment",
															"src": "1595:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1607:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1607:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1618:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1618:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1603:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1603:3:13"
																},
																"nativeSrc": "1603:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1603:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1595:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1595:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1675:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1675:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1688:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1688:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1699:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1699:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1684:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1684:3:13"
																		},
																		"nativeSrc": "1684:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1684:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1631:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "1631:43:13"
																},
																"nativeSrc": "1631:71:13",
																"nodeType": "YulFunctionCall",
																"src": "1631:71:13"
															},
															"nativeSrc": "1631:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "1631:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1487:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1557:9:13",
														"nodeType": "YulTypedName",
														"src": "1557:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1569:6:13",
														"nodeType": "YulTypedName",
														"src": "1569:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1580:4:13",
														"nodeType": "YulTypedName",
														"src": "1580:4:13",
														"type": ""
													}
												],
												"src": "1487:222:13"
											},
											{
												"body": {
													"nativeSrc": "1760:81:13",
													"nodeType": "YulBlock",
													"src": "1760:81:13",
													"statements": [
														{
															"nativeSrc": "1770:65:13",
															"nodeType": "YulAssignment",
															"src": "1770:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1792:42:13",
																		"nodeType": "YulLiteral",
																		"src": "1792:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1781:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1781:3:13"
																},
																"nativeSrc": "1781:54:13",
																"nodeType": "YulFunctionCall",
																"src": "1781:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1770:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1770:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1715:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1742:5:13",
														"nodeType": "YulTypedName",
														"src": "1742:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1752:7:13",
														"nodeType": "YulTypedName",
														"src": "1752:7:13",
														"type": ""
													}
												],
												"src": "1715:126:13"
											},
											{
												"body": {
													"nativeSrc": "1892:51:13",
													"nodeType": "YulBlock",
													"src": "1892:51:13",
													"statements": [
														{
															"nativeSrc": "1902:35:13",
															"nodeType": "YulAssignment",
															"src": "1902:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1931:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1931:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1913:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "1913:17:13"
																},
																"nativeSrc": "1913:24:13",
																"nodeType": "YulFunctionCall",
																"src": "1913:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1902:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1902:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1847:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1874:5:13",
														"nodeType": "YulTypedName",
														"src": "1874:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1884:7:13",
														"nodeType": "YulTypedName",
														"src": "1884:7:13",
														"type": ""
													}
												],
												"src": "1847:96:13"
											},
											{
												"body": {
													"nativeSrc": "2014:53:13",
													"nodeType": "YulBlock",
													"src": "2014:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2031:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2054:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2054:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2036:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "2036:17:13"
																		},
																		"nativeSrc": "2036:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2036:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2024:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2024:6:13"
																},
																"nativeSrc": "2024:37:13",
																"nodeType": "YulFunctionCall",
																"src": "2024:37:13"
															},
															"nativeSrc": "2024:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "2024:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1949:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2002:5:13",
														"nodeType": "YulTypedName",
														"src": "2002:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2009:3:13",
														"nodeType": "YulTypedName",
														"src": "2009:3:13",
														"type": ""
													}
												],
												"src": "1949:118:13"
											},
											{
												"body": {
													"nativeSrc": "2171:124:13",
													"nodeType": "YulBlock",
													"src": "2171:124:13",
													"statements": [
														{
															"nativeSrc": "2181:26:13",
															"nodeType": "YulAssignment",
															"src": "2181:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2193:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2193:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2204:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2204:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2189:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2189:3:13"
																},
																"nativeSrc": "2189:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2189:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2181:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2181:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2261:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2261:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2274:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2274:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2285:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2285:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2270:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2270:3:13"
																		},
																		"nativeSrc": "2270:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2270:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2217:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2217:43:13"
																},
																"nativeSrc": "2217:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2217:71:13"
															},
															"nativeSrc": "2217:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2217:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2073:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2143:9:13",
														"nodeType": "YulTypedName",
														"src": "2143:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2155:6:13",
														"nodeType": "YulTypedName",
														"src": "2155:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2166:4:13",
														"nodeType": "YulTypedName",
														"src": "2166:4:13",
														"type": ""
													}
												],
												"src": "2073:222:13"
											},
											{
												"body": {
													"nativeSrc": "2384:391:13",
													"nodeType": "YulBlock",
													"src": "2384:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2430:83:13",
																"nodeType": "YulBlock",
																"src": "2430:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2432:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2432:77:13"
																			},
																			"nativeSrc": "2432:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2432:79:13"
																		},
																		"nativeSrc": "2432:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2432:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2405:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2405:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2414:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2414:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2401:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2401:3:13"
																		},
																		"nativeSrc": "2401:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2401:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2426:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2426:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2397:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2397:3:13"
																},
																"nativeSrc": "2397:32:13",
																"nodeType": "YulFunctionCall",
																"src": "2397:32:13"
															},
															"nativeSrc": "2394:119:13",
															"nodeType": "YulIf",
															"src": "2394:119:13"
														},
														{
															"nativeSrc": "2523:117:13",
															"nodeType": "YulBlock",
															"src": "2523:117:13",
															"statements": [
																{
																	"nativeSrc": "2538:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2538:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2552:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2552:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2542:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2542:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2567:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2567:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2602:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2602:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2613:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2613:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2598:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2598:3:13"
																				},
																				"nativeSrc": "2598:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2598:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2622:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2622:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2577:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2577:20:13"
																		},
																		"nativeSrc": "2577:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2577:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2567:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2567:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2650:118:13",
															"nodeType": "YulBlock",
															"src": "2650:118:13",
															"statements": [
																{
																	"nativeSrc": "2665:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2665:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2679:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2679:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2669:6:13",
																			"nodeType": "YulTypedName",
																			"src": "2669:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2695:63:13",
																	"nodeType": "YulAssignment",
																	"src": "2695:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2730:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "2730:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2741:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2741:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2726:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2726:3:13"
																				},
																				"nativeSrc": "2726:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2726:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2750:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "2750:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2705:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "2705:20:13"
																		},
																		"nativeSrc": "2705:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2705:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2695:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "2695:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2301:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2346:9:13",
														"nodeType": "YulTypedName",
														"src": "2346:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2357:7:13",
														"nodeType": "YulTypedName",
														"src": "2357:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2369:6:13",
														"nodeType": "YulTypedName",
														"src": "2369:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2377:6:13",
														"nodeType": "YulTypedName",
														"src": "2377:6:13",
														"type": ""
													}
												],
												"src": "2301:474:13"
											},
											{
												"body": {
													"nativeSrc": "2907:206:13",
													"nodeType": "YulBlock",
													"src": "2907:206:13",
													"statements": [
														{
															"nativeSrc": "2917:26:13",
															"nodeType": "YulAssignment",
															"src": "2917:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2929:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2929:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2940:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2940:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2925:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2925:3:13"
																},
																"nativeSrc": "2925:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2925:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2917:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2917:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2997:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2997:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3010:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3010:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3021:1:13",
																				"nodeType": "YulLiteral",
																				"src": "3021:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3006:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3006:3:13"
																		},
																		"nativeSrc": "3006:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2953:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "2953:43:13"
																},
																"nativeSrc": "2953:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2953:71:13"
															},
															"nativeSrc": "2953:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "2953:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3078:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3078:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3091:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3091:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3102:2:13",
																				"nodeType": "YulLiteral",
																				"src": "3102:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3087:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3087:3:13"
																		},
																		"nativeSrc": "3087:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3087:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3034:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "3034:43:13"
																},
																"nativeSrc": "3034:72:13",
																"nodeType": "YulFunctionCall",
																"src": "3034:72:13"
															},
															"nativeSrc": "3034:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "3034:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "2781:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2871:9:13",
														"nodeType": "YulTypedName",
														"src": "2871:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2883:6:13",
														"nodeType": "YulTypedName",
														"src": "2883:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2891:6:13",
														"nodeType": "YulTypedName",
														"src": "2891:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2902:4:13",
														"nodeType": "YulTypedName",
														"src": "2902:4:13",
														"type": ""
													}
												],
												"src": "2781:332:13"
											},
											{
												"body": {
													"nativeSrc": "3162:79:13",
													"nodeType": "YulBlock",
													"src": "3162:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3219:16:13",
																"nodeType": "YulBlock",
																"src": "3219:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3228:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3228:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3231:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3231:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3221:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3221:6:13"
																			},
																			"nativeSrc": "3221:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3221:12:13"
																		},
																		"nativeSrc": "3221:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3221:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3185:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3185:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3210:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3210:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3192:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3192:17:13"
																				},
																				"nativeSrc": "3192:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3192:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3182:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3182:2:13"
																		},
																		"nativeSrc": "3182:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3182:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3175:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3175:6:13"
																},
																"nativeSrc": "3175:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3175:43:13"
															},
															"nativeSrc": "3172:63:13",
															"nodeType": "YulIf",
															"src": "3172:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3119:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3155:5:13",
														"nodeType": "YulTypedName",
														"src": "3155:5:13",
														"type": ""
													}
												],
												"src": "3119:122:13"
											},
											{
												"body": {
													"nativeSrc": "3299:87:13",
													"nodeType": "YulBlock",
													"src": "3299:87:13",
													"statements": [
														{
															"nativeSrc": "3309:29:13",
															"nodeType": "YulAssignment",
															"src": "3309:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3331:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3331:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3318:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3318:12:13"
																},
																"nativeSrc": "3318:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3318:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3309:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3309:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3374:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3374:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3347:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3347:26:13"
																},
																"nativeSrc": "3347:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3347:33:13"
															},
															"nativeSrc": "3347:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3347:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3247:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3277:6:13",
														"nodeType": "YulTypedName",
														"src": "3277:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3285:3:13",
														"nodeType": "YulTypedName",
														"src": "3285:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3293:5:13",
														"nodeType": "YulTypedName",
														"src": "3293:5:13",
														"type": ""
													}
												],
												"src": "3247:139:13"
											},
											{
												"body": {
													"nativeSrc": "3458:263:13",
													"nodeType": "YulBlock",
													"src": "3458:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3504:83:13",
																"nodeType": "YulBlock",
																"src": "3504:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3506:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3506:77:13"
																			},
																			"nativeSrc": "3506:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3506:79:13"
																		},
																		"nativeSrc": "3506:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3506:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3479:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3479:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3488:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3488:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3475:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:13"
																		},
																		"nativeSrc": "3475:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3500:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3500:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3471:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3471:3:13"
																},
																"nativeSrc": "3471:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3471:32:13"
															},
															"nativeSrc": "3468:119:13",
															"nodeType": "YulIf",
															"src": "3468:119:13"
														},
														{
															"nativeSrc": "3597:117:13",
															"nodeType": "YulBlock",
															"src": "3597:117:13",
															"statements": [
																{
																	"nativeSrc": "3612:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3612:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3626:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3626:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3616:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3616:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3641:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3641:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3676:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3676:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3687:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3687:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3672:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3672:3:13"
																				},
																				"nativeSrc": "3672:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3672:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3696:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3696:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3651:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3651:20:13"
																		},
																		"nativeSrc": "3651:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3651:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3641:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3641:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3392:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3428:9:13",
														"nodeType": "YulTypedName",
														"src": "3428:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3439:7:13",
														"nodeType": "YulTypedName",
														"src": "3439:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3451:6:13",
														"nodeType": "YulTypedName",
														"src": "3451:6:13",
														"type": ""
													}
												],
												"src": "3392:329:13"
											},
											{
												"body": {
													"nativeSrc": "3823:73:13",
													"nodeType": "YulBlock",
													"src": "3823:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3840:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3840:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3845:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3845:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3833:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3833:6:13"
																},
																"nativeSrc": "3833:19:13",
																"nodeType": "YulFunctionCall",
																"src": "3833:19:13"
															},
															"nativeSrc": "3833:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "3833:19:13"
														},
														{
															"nativeSrc": "3861:29:13",
															"nodeType": "YulAssignment",
															"src": "3861:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3880:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3880:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3885:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3885:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3876:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3876:3:13"
																},
																"nativeSrc": "3876:14:13",
																"nodeType": "YulFunctionCall",
																"src": "3876:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "3861:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "3861:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "3727:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3795:3:13",
														"nodeType": "YulTypedName",
														"src": "3795:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3800:6:13",
														"nodeType": "YulTypedName",
														"src": "3800:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "3811:11:13",
														"nodeType": "YulTypedName",
														"src": "3811:11:13",
														"type": ""
													}
												],
												"src": "3727:169:13"
											},
											{
												"body": {
													"nativeSrc": "4008:63:13",
													"nodeType": "YulBlock",
													"src": "4008:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4030:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4038:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4038:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4026:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4026:3:13"
																		},
																		"nativeSrc": "4026:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4026:14:13"
																	},
																	{
																		"hexValue": "6e6f7420746f6b656e302070726f7669646564",
																		"kind": "string",
																		"nativeSrc": "4042:21:13",
																		"nodeType": "YulLiteral",
																		"src": "4042:21:13",
																		"type": "",
																		"value": "not token0 provided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4019:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4019:6:13"
																},
																"nativeSrc": "4019:45:13",
																"nodeType": "YulFunctionCall",
																"src": "4019:45:13"
															},
															"nativeSrc": "4019:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "4019:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8",
												"nativeSrc": "3902:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4000:6:13",
														"nodeType": "YulTypedName",
														"src": "4000:6:13",
														"type": ""
													}
												],
												"src": "3902:169:13"
											},
											{
												"body": {
													"nativeSrc": "4223:220:13",
													"nodeType": "YulBlock",
													"src": "4223:220:13",
													"statements": [
														{
															"nativeSrc": "4233:74:13",
															"nodeType": "YulAssignment",
															"src": "4233:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4299:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4299:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4304:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4304:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4240:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "4240:58:13"
																},
																"nativeSrc": "4240:67:13",
																"nodeType": "YulFunctionCall",
																"src": "4240:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4233:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4233:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4405:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4405:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8",
																	"nativeSrc": "4316:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "4316:88:13"
																},
																"nativeSrc": "4316:93:13",
																"nodeType": "YulFunctionCall",
																"src": "4316:93:13"
															},
															"nativeSrc": "4316:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "4316:93:13"
														},
														{
															"nativeSrc": "4418:19:13",
															"nodeType": "YulAssignment",
															"src": "4418:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4429:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4429:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4434:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4434:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4425:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4425:3:13"
																},
																"nativeSrc": "4425:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4425:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4418:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4418:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4077:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4211:3:13",
														"nodeType": "YulTypedName",
														"src": "4211:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4219:3:13",
														"nodeType": "YulTypedName",
														"src": "4219:3:13",
														"type": ""
													}
												],
												"src": "4077:366:13"
											},
											{
												"body": {
													"nativeSrc": "4620:248:13",
													"nodeType": "YulBlock",
													"src": "4620:248:13",
													"statements": [
														{
															"nativeSrc": "4630:26:13",
															"nodeType": "YulAssignment",
															"src": "4630:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:13"
																},
																"nativeSrc": "4638:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4677:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4677:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4688:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4688:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4673:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4673:3:13"
																		},
																		"nativeSrc": "4673:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4673:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4696:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "4696:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4702:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4702:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4692:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:13"
																		},
																		"nativeSrc": "4692:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4692:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4666:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4666:6:13"
																},
																"nativeSrc": "4666:47:13",
																"nodeType": "YulFunctionCall",
																"src": "4666:47:13"
															},
															"nativeSrc": "4666:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "4666:47:13"
														},
														{
															"nativeSrc": "4722:139:13",
															"nodeType": "YulAssignment",
															"src": "4722:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4856:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4856:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4730:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "4730:124:13"
																},
																"nativeSrc": "4730:131:13",
																"nodeType": "YulFunctionCall",
																"src": "4730:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4722:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4722:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4449:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4600:9:13",
														"nodeType": "YulTypedName",
														"src": "4600:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:13",
														"nodeType": "YulTypedName",
														"src": "4615:4:13",
														"type": ""
													}
												],
												"src": "4449:419:13"
											},
											{
												"body": {
													"nativeSrc": "4902:152:13",
													"nodeType": "YulBlock",
													"src": "4902:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4919:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4919:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4922:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4922:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4912:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4912:6:13"
																},
																"nativeSrc": "4912:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4912:88:13"
															},
															"nativeSrc": "4912:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4912:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5016:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5016:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5019:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5019:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5009:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5009:6:13"
																},
																"nativeSrc": "5009:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5009:15:13"
															},
															"nativeSrc": "5009:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5009:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5040:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5040:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5043:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5043:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5033:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5033:6:13"
																},
																"nativeSrc": "5033:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5033:15:13"
															},
															"nativeSrc": "5033:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5033:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "4874:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4874:180:13"
											},
											{
												"body": {
													"nativeSrc": "5108:362:13",
													"nodeType": "YulBlock",
													"src": "5108:362:13",
													"statements": [
														{
															"nativeSrc": "5118:25:13",
															"nodeType": "YulAssignment",
															"src": "5118:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5141:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5141:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5123:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5123:17:13"
																},
																"nativeSrc": "5123:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5123:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5118:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5118:1:13"
																}
															]
														},
														{
															"nativeSrc": "5152:25:13",
															"nodeType": "YulAssignment",
															"src": "5152:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5175:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5175:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5157:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5157:17:13"
																},
																"nativeSrc": "5157:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5157:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5152:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5152:1:13"
																}
															]
														},
														{
															"nativeSrc": "5186:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5186:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5209:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5209:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5212:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5212:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5205:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5205:3:13"
																},
																"nativeSrc": "5205:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5205:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "5190:11:13",
																	"nodeType": "YulTypedName",
																	"src": "5190:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5223:41:13",
															"nodeType": "YulAssignment",
															"src": "5223:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "5252:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "5252:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5234:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5234:17:13"
																},
																"nativeSrc": "5234:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5234:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "5223:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5223:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5441:22:13",
																"nodeType": "YulBlock",
																"src": "5441:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5443:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5443:16:13"
																			},
																			"nativeSrc": "5443:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5443:18:13"
																		},
																		"nativeSrc": "5443:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5443:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "5374:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5374:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5367:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "5367:6:13"
																				},
																				"nativeSrc": "5367:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5367:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "5397:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "5397:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "5404:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "5404:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "5413:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "5413:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "5400:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "5400:3:13"
																						},
																						"nativeSrc": "5400:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "5400:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "5394:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5394:2:13"
																				},
																				"nativeSrc": "5394:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5394:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "5347:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5347:2:13"
																		},
																		"nativeSrc": "5347:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5347:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5327:6:13"
																},
																"nativeSrc": "5327:113:13",
																"nodeType": "YulFunctionCall",
																"src": "5327:113:13"
															},
															"nativeSrc": "5324:139:13",
															"nodeType": "YulIf",
															"src": "5324:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "5060:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5091:1:13",
														"nodeType": "YulTypedName",
														"src": "5091:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5094:1:13",
														"nodeType": "YulTypedName",
														"src": "5094:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "5100:7:13",
														"nodeType": "YulTypedName",
														"src": "5100:7:13",
														"type": ""
													}
												],
												"src": "5060:410:13"
											},
											{
												"body": {
													"nativeSrc": "5520:147:13",
													"nodeType": "YulBlock",
													"src": "5520:147:13",
													"statements": [
														{
															"nativeSrc": "5530:25:13",
															"nodeType": "YulAssignment",
															"src": "5530:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5553:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5553:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5535:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5535:17:13"
																},
																"nativeSrc": "5535:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5535:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5530:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5530:1:13"
																}
															]
														},
														{
															"nativeSrc": "5564:25:13",
															"nodeType": "YulAssignment",
															"src": "5564:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5587:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5587:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5569:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5569:17:13"
																},
																"nativeSrc": "5569:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5569:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5564:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5564:1:13"
																}
															]
														},
														{
															"nativeSrc": "5598:16:13",
															"nodeType": "YulAssignment",
															"src": "5598:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5609:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5609:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "5612:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5612:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5605:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5605:3:13"
																},
																"nativeSrc": "5605:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5605:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "5598:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5598:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5638:22:13",
																"nodeType": "YulBlock",
																"src": "5638:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "5640:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5640:16:13"
																			},
																			"nativeSrc": "5640:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5640:18:13"
																		},
																		"nativeSrc": "5640:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5640:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5630:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5630:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "5633:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5633:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5627:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5627:2:13"
																},
																"nativeSrc": "5627:10:13",
																"nodeType": "YulFunctionCall",
																"src": "5627:10:13"
															},
															"nativeSrc": "5624:36:13",
															"nodeType": "YulIf",
															"src": "5624:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "5476:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5507:1:13",
														"nodeType": "YulTypedName",
														"src": "5507:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5510:1:13",
														"nodeType": "YulTypedName",
														"src": "5510:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "5516:3:13",
														"nodeType": "YulTypedName",
														"src": "5516:3:13",
														"type": ""
													}
												],
												"src": "5476:191:13"
											},
											{
												"body": {
													"nativeSrc": "5701:152:13",
													"nodeType": "YulBlock",
													"src": "5701:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5718:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5718:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5721:77:13",
																		"nodeType": "YulLiteral",
																		"src": "5721:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5711:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5711:6:13"
																},
																"nativeSrc": "5711:88:13",
																"nodeType": "YulFunctionCall",
																"src": "5711:88:13"
															},
															"nativeSrc": "5711:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "5711:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5815:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5815:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5818:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5818:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5808:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:13"
																},
																"nativeSrc": "5808:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5808:15:13"
															},
															"nativeSrc": "5808:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5808:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5839:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5839:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5842:4:13",
																		"nodeType": "YulLiteral",
																		"src": "5842:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5832:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5832:6:13"
																},
																"nativeSrc": "5832:15:13",
																"nodeType": "YulFunctionCall",
																"src": "5832:15:13"
															},
															"nativeSrc": "5832:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "5832:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "5673:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "5673:180:13"
											},
											{
												"body": {
													"nativeSrc": "5901:143:13",
													"nodeType": "YulBlock",
													"src": "5901:143:13",
													"statements": [
														{
															"nativeSrc": "5911:25:13",
															"nodeType": "YulAssignment",
															"src": "5911:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "5934:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5934:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5916:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5916:17:13"
																},
																"nativeSrc": "5916:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5916:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "5911:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5911:1:13"
																}
															]
														},
														{
															"nativeSrc": "5945:25:13",
															"nodeType": "YulAssignment",
															"src": "5945:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5968:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5968:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5950:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5950:17:13"
																},
																"nativeSrc": "5950:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5950:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "5945:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "5945:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5992:22:13",
																"nodeType": "YulBlock",
																"src": "5992:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "5994:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "5994:16:13"
																			},
																			"nativeSrc": "5994:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5994:18:13"
																		},
																		"nativeSrc": "5994:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5994:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "5989:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "5989:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5982:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5982:6:13"
																},
																"nativeSrc": "5982:9:13",
																"nodeType": "YulFunctionCall",
																"src": "5982:9:13"
															},
															"nativeSrc": "5979:35:13",
															"nodeType": "YulIf",
															"src": "5979:35:13"
														},
														{
															"nativeSrc": "6024:14:13",
															"nodeType": "YulAssignment",
															"src": "6024:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6033:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6033:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6036:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "6036:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6029:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6029:3:13"
																},
																"nativeSrc": "6029:9:13",
																"nodeType": "YulFunctionCall",
																"src": "6029:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6024:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "6024:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "5859:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "5890:1:13",
														"nodeType": "YulTypedName",
														"src": "5890:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "5893:1:13",
														"nodeType": "YulTypedName",
														"src": "5893:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "5899:1:13",
														"nodeType": "YulTypedName",
														"src": "5899:1:13",
														"type": ""
													}
												],
												"src": "5859:185:13"
											},
											{
												"body": {
													"nativeSrc": "6204:288:13",
													"nodeType": "YulBlock",
													"src": "6204:288:13",
													"statements": [
														{
															"nativeSrc": "6214:26:13",
															"nodeType": "YulAssignment",
															"src": "6214:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6226:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6226:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6237:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6237:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6222:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6222:3:13"
																},
																"nativeSrc": "6222:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6222:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6214:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6214:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6294:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6294:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6307:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6307:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6318:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6318:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6303:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6303:3:13"
																		},
																		"nativeSrc": "6303:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6303:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6250:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6250:43:13"
																},
																"nativeSrc": "6250:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6250:71:13"
															},
															"nativeSrc": "6250:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6250:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6375:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6375:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6388:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6388:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6399:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6399:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6384:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6384:3:13"
																		},
																		"nativeSrc": "6384:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6384:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6331:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6331:43:13"
																},
																"nativeSrc": "6331:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6331:72:13"
															},
															"nativeSrc": "6331:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6331:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6457:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6457:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6470:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6470:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6481:2:13",
																				"nodeType": "YulLiteral",
																				"src": "6481:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:13"
																		},
																		"nativeSrc": "6466:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6466:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6413:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6413:43:13"
																},
																"nativeSrc": "6413:72:13",
																"nodeType": "YulFunctionCall",
																"src": "6413:72:13"
															},
															"nativeSrc": "6413:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "6413:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6050:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6160:9:13",
														"nodeType": "YulTypedName",
														"src": "6160:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6172:6:13",
														"nodeType": "YulTypedName",
														"src": "6172:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6180:6:13",
														"nodeType": "YulTypedName",
														"src": "6180:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6188:6:13",
														"nodeType": "YulTypedName",
														"src": "6188:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6199:4:13",
														"nodeType": "YulTypedName",
														"src": "6199:4:13",
														"type": ""
													}
												],
												"src": "6050:442:13"
											},
											{
												"body": {
													"nativeSrc": "6540:48:13",
													"nodeType": "YulBlock",
													"src": "6540:48:13",
													"statements": [
														{
															"nativeSrc": "6550:32:13",
															"nodeType": "YulAssignment",
															"src": "6550:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6575:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6575:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6568:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6568:6:13"
																		},
																		"nativeSrc": "6568:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6568:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6561:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:13"
																},
																"nativeSrc": "6561:21:13",
																"nodeType": "YulFunctionCall",
																"src": "6561:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6550:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6550:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6498:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6522:5:13",
														"nodeType": "YulTypedName",
														"src": "6522:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6532:7:13",
														"nodeType": "YulTypedName",
														"src": "6532:7:13",
														"type": ""
													}
												],
												"src": "6498:90:13"
											},
											{
												"body": {
													"nativeSrc": "6634:76:13",
													"nodeType": "YulBlock",
													"src": "6634:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6688:16:13",
																"nodeType": "YulBlock",
																"src": "6688:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6697:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6697:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6700:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6700:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6690:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6690:6:13"
																			},
																			"nativeSrc": "6690:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6690:12:13"
																		},
																		"nativeSrc": "6690:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6690:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6657:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6657:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6679:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6679:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6664:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "6664:14:13"
																				},
																				"nativeSrc": "6664:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6664:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6654:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6654:2:13"
																		},
																		"nativeSrc": "6654:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6654:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6647:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6647:6:13"
																},
																"nativeSrc": "6647:40:13",
																"nodeType": "YulFunctionCall",
																"src": "6647:40:13"
															},
															"nativeSrc": "6644:60:13",
															"nodeType": "YulIf",
															"src": "6644:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6594:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6627:5:13",
														"nodeType": "YulTypedName",
														"src": "6627:5:13",
														"type": ""
													}
												],
												"src": "6594:116:13"
											},
											{
												"body": {
													"nativeSrc": "6776:77:13",
													"nodeType": "YulBlock",
													"src": "6776:77:13",
													"statements": [
														{
															"nativeSrc": "6786:22:13",
															"nodeType": "YulAssignment",
															"src": "6786:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6801:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6801:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6795:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6795:5:13"
																},
																"nativeSrc": "6795:13:13",
																"nodeType": "YulFunctionCall",
																"src": "6795:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6786:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "6786:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6841:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6841:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6817:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "6817:23:13"
																},
																"nativeSrc": "6817:30:13",
																"nodeType": "YulFunctionCall",
																"src": "6817:30:13"
															},
															"nativeSrc": "6817:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "6817:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "6716:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6754:6:13",
														"nodeType": "YulTypedName",
														"src": "6754:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6762:3:13",
														"nodeType": "YulTypedName",
														"src": "6762:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6770:5:13",
														"nodeType": "YulTypedName",
														"src": "6770:5:13",
														"type": ""
													}
												],
												"src": "6716:137:13"
											},
											{
												"body": {
													"nativeSrc": "6933:271:13",
													"nodeType": "YulBlock",
													"src": "6933:271:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6979:83:13",
																"nodeType": "YulBlock",
																"src": "6979:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6981:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6981:77:13"
																			},
																			"nativeSrc": "6981:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6981:79:13"
																		},
																		"nativeSrc": "6981:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6981:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6954:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6954:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6963:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6963:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6950:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6950:3:13"
																		},
																		"nativeSrc": "6950:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6950:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6975:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6975:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6946:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6946:3:13"
																},
																"nativeSrc": "6946:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6946:32:13"
															},
															"nativeSrc": "6943:119:13",
															"nodeType": "YulIf",
															"src": "6943:119:13"
														},
														{
															"nativeSrc": "7072:125:13",
															"nodeType": "YulBlock",
															"src": "7072:125:13",
															"statements": [
																{
																	"nativeSrc": "7087:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7087:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7101:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7101:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7091:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7091:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7116:71:13",
																	"nodeType": "YulAssignment",
																	"src": "7116:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7159:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7159:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7170:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7170:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7155:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7155:3:13"
																				},
																				"nativeSrc": "7155:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7155:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7179:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7179:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7126:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "7126:28:13"
																		},
																		"nativeSrc": "7126:61:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7126:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7116:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7116:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "6859:345:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6903:9:13",
														"nodeType": "YulTypedName",
														"src": "6903:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6914:7:13",
														"nodeType": "YulTypedName",
														"src": "6914:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6926:6:13",
														"nodeType": "YulTypedName",
														"src": "6926:6:13",
														"type": ""
													}
												],
												"src": "6859:345:13"
											},
											{
												"body": {
													"nativeSrc": "7316:69:13",
													"nodeType": "YulBlock",
													"src": "7316:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7338:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7338:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7346:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7346:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7334:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7334:3:13"
																		},
																		"nativeSrc": "7334:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7334:14:13"
																	},
																	{
																		"hexValue": "6661696c656420746f207472616e7366657220746f6b656e30",
																		"kind": "string",
																		"nativeSrc": "7350:27:13",
																		"nodeType": "YulLiteral",
																		"src": "7350:27:13",
																		"type": "",
																		"value": "failed to transfer token0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7327:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7327:6:13"
																},
																"nativeSrc": "7327:51:13",
																"nodeType": "YulFunctionCall",
																"src": "7327:51:13"
															},
															"nativeSrc": "7327:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "7327:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
												"nativeSrc": "7210:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7308:6:13",
														"nodeType": "YulTypedName",
														"src": "7308:6:13",
														"type": ""
													}
												],
												"src": "7210:175:13"
											},
											{
												"body": {
													"nativeSrc": "7537:220:13",
													"nodeType": "YulBlock",
													"src": "7537:220:13",
													"statements": [
														{
															"nativeSrc": "7547:74:13",
															"nodeType": "YulAssignment",
															"src": "7547:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7613:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7613:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7618:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7618:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7554:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "7554:58:13"
																},
																"nativeSrc": "7554:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7554:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7547:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7547:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7719:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7719:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																	"nativeSrc": "7630:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "7630:88:13"
																},
																"nativeSrc": "7630:93:13",
																"nodeType": "YulFunctionCall",
																"src": "7630:93:13"
															},
															"nativeSrc": "7630:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "7630:93:13"
														},
														{
															"nativeSrc": "7732:19:13",
															"nodeType": "YulAssignment",
															"src": "7732:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7743:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7743:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7748:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7748:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7739:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7739:3:13"
																},
																"nativeSrc": "7739:12:13",
																"nodeType": "YulFunctionCall",
																"src": "7739:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7732:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7732:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7391:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7525:3:13",
														"nodeType": "YulTypedName",
														"src": "7525:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7533:3:13",
														"nodeType": "YulTypedName",
														"src": "7533:3:13",
														"type": ""
													}
												],
												"src": "7391:366:13"
											},
											{
												"body": {
													"nativeSrc": "7934:248:13",
													"nodeType": "YulBlock",
													"src": "7934:248:13",
													"statements": [
														{
															"nativeSrc": "7944:26:13",
															"nodeType": "YulAssignment",
															"src": "7944:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7956:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7956:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7967:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7967:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7952:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7952:3:13"
																},
																"nativeSrc": "7952:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7952:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7944:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7944:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7991:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7991:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8002:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8002:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7987:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7987:3:13"
																		},
																		"nativeSrc": "7987:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7987:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8010:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "8010:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8016:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8016:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8006:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8006:3:13"
																		},
																		"nativeSrc": "8006:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8006:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7980:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7980:6:13"
																},
																"nativeSrc": "7980:47:13",
																"nodeType": "YulFunctionCall",
																"src": "7980:47:13"
															},
															"nativeSrc": "7980:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "7980:47:13"
														},
														{
															"nativeSrc": "8036:139:13",
															"nodeType": "YulAssignment",
															"src": "8036:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8170:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8170:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8044:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "8044:124:13"
																},
																"nativeSrc": "8044:131:13",
																"nodeType": "YulFunctionCall",
																"src": "8044:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8036:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8036:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7763:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7914:9:13",
														"nodeType": "YulTypedName",
														"src": "7914:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7929:4:13",
														"nodeType": "YulTypedName",
														"src": "7929:4:13",
														"type": ""
													}
												],
												"src": "7763:419:13"
											},
											{
												"body": {
													"nativeSrc": "8314:206:13",
													"nodeType": "YulBlock",
													"src": "8314:206:13",
													"statements": [
														{
															"nativeSrc": "8324:26:13",
															"nodeType": "YulAssignment",
															"src": "8324:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8336:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8336:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8347:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8347:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8332:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8332:3:13"
																},
																"nativeSrc": "8332:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8332:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8324:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8324:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8404:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8404:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8417:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8417:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8428:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8428:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8413:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8413:3:13"
																		},
																		"nativeSrc": "8413:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8413:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8360:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8360:43:13"
																},
																"nativeSrc": "8360:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8360:71:13"
															},
															"nativeSrc": "8360:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8360:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8485:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8485:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8498:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8498:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8509:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8509:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8494:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8494:3:13"
																		},
																		"nativeSrc": "8494:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8494:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8441:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8441:43:13"
																},
																"nativeSrc": "8441:72:13",
																"nodeType": "YulFunctionCall",
																"src": "8441:72:13"
															},
															"nativeSrc": "8441:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "8441:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8188:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8278:9:13",
														"nodeType": "YulTypedName",
														"src": "8278:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8290:6:13",
														"nodeType": "YulTypedName",
														"src": "8290:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8298:6:13",
														"nodeType": "YulTypedName",
														"src": "8298:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8309:4:13",
														"nodeType": "YulTypedName",
														"src": "8309:4:13",
														"type": ""
													}
												],
												"src": "8188:332:13"
											},
											{
												"body": {
													"nativeSrc": "8632:69:13",
													"nodeType": "YulBlock",
													"src": "8632:69:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8654:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8654:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8662:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8662:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8650:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8650:3:13"
																		},
																		"nativeSrc": "8650:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8650:14:13"
																	},
																	{
																		"hexValue": "6661696c656420746f207472616e7366657220746f6b656e31",
																		"kind": "string",
																		"nativeSrc": "8666:27:13",
																		"nodeType": "YulLiteral",
																		"src": "8666:27:13",
																		"type": "",
																		"value": "failed to transfer token1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8643:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8643:6:13"
																},
																"nativeSrc": "8643:51:13",
																"nodeType": "YulFunctionCall",
																"src": "8643:51:13"
															},
															"nativeSrc": "8643:51:13",
															"nodeType": "YulExpressionStatement",
															"src": "8643:51:13"
														}
													]
												},
												"name": "store_literal_in_memory_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
												"nativeSrc": "8526:175:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8624:6:13",
														"nodeType": "YulTypedName",
														"src": "8624:6:13",
														"type": ""
													}
												],
												"src": "8526:175:13"
											},
											{
												"body": {
													"nativeSrc": "8853:220:13",
													"nodeType": "YulBlock",
													"src": "8853:220:13",
													"statements": [
														{
															"nativeSrc": "8863:74:13",
															"nodeType": "YulAssignment",
															"src": "8863:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8929:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8929:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8934:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8934:2:13",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8870:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "8870:58:13"
																},
																"nativeSrc": "8870:67:13",
																"nodeType": "YulFunctionCall",
																"src": "8870:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8863:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8863:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9035:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9035:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																	"nativeSrc": "8946:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "8946:88:13"
																},
																"nativeSrc": "8946:93:13",
																"nodeType": "YulFunctionCall",
																"src": "8946:93:13"
															},
															"nativeSrc": "8946:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "8946:93:13"
														},
														{
															"nativeSrc": "9048:19:13",
															"nodeType": "YulAssignment",
															"src": "9048:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9059:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9059:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9064:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9064:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9055:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9055:3:13"
																},
																"nativeSrc": "9055:12:13",
																"nodeType": "YulFunctionCall",
																"src": "9055:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9048:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9048:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8707:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8841:3:13",
														"nodeType": "YulTypedName",
														"src": "8841:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8849:3:13",
														"nodeType": "YulTypedName",
														"src": "8849:3:13",
														"type": ""
													}
												],
												"src": "8707:366:13"
											},
											{
												"body": {
													"nativeSrc": "9250:248:13",
													"nodeType": "YulBlock",
													"src": "9250:248:13",
													"statements": [
														{
															"nativeSrc": "9260:26:13",
															"nodeType": "YulAssignment",
															"src": "9260:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9272:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9272:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9283:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9283:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9268:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9268:3:13"
																},
																"nativeSrc": "9268:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9268:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9260:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9260:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9307:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9307:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9318:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9318:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9303:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9303:3:13"
																		},
																		"nativeSrc": "9303:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9303:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9326:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "9326:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9332:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9332:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9322:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9322:3:13"
																		},
																		"nativeSrc": "9322:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9322:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9296:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9296:6:13"
																},
																"nativeSrc": "9296:47:13",
																"nodeType": "YulFunctionCall",
																"src": "9296:47:13"
															},
															"nativeSrc": "9296:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "9296:47:13"
														},
														{
															"nativeSrc": "9352:139:13",
															"nodeType": "YulAssignment",
															"src": "9352:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9486:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9486:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9360:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "9360:124:13"
																},
																"nativeSrc": "9360:131:13",
																"nodeType": "YulFunctionCall",
																"src": "9360:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9352:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9352:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9079:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9230:9:13",
														"nodeType": "YulTypedName",
														"src": "9230:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9245:4:13",
														"nodeType": "YulTypedName",
														"src": "9245:4:13",
														"type": ""
													}
												],
												"src": "9079:419:13"
											},
											{
												"body": {
													"nativeSrc": "9549:149:13",
													"nodeType": "YulBlock",
													"src": "9549:149:13",
													"statements": [
														{
															"nativeSrc": "9559:25:13",
															"nodeType": "YulAssignment",
															"src": "9559:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9582:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9582:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9564:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9564:17:13"
																},
																"nativeSrc": "9564:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9564:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9559:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9559:1:13"
																}
															]
														},
														{
															"nativeSrc": "9593:25:13",
															"nodeType": "YulAssignment",
															"src": "9593:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9616:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9616:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9598:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9598:17:13"
																},
																"nativeSrc": "9598:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9598:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9593:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9593:1:13"
																}
															]
														},
														{
															"nativeSrc": "9627:17:13",
															"nodeType": "YulAssignment",
															"src": "9627:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9639:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9639:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9642:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9642:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9635:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9635:3:13"
																},
																"nativeSrc": "9635:9:13",
																"nodeType": "YulFunctionCall",
																"src": "9635:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9627:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9627:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9669:22:13",
																"nodeType": "YulBlock",
																"src": "9669:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9671:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9671:16:13"
																			},
																			"nativeSrc": "9671:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9671:18:13"
																		},
																		"nativeSrc": "9671:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9671:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9660:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "9660:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9666:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9666:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9657:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9657:2:13"
																},
																"nativeSrc": "9657:11:13",
																"nodeType": "YulFunctionCall",
																"src": "9657:11:13"
															},
															"nativeSrc": "9654:37:13",
															"nodeType": "YulIf",
															"src": "9654:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9504:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9535:1:13",
														"nodeType": "YulTypedName",
														"src": "9535:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9538:1:13",
														"nodeType": "YulTypedName",
														"src": "9538:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9544:4:13",
														"nodeType": "YulTypedName",
														"src": "9544:4:13",
														"type": ""
													}
												],
												"src": "9504:194:13"
											},
											{
												"body": {
													"nativeSrc": "9810:63:13",
													"nodeType": "YulBlock",
													"src": "9810:63:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9832:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "9832:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9840:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9840:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9828:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9828:3:13"
																		},
																		"nativeSrc": "9828:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9828:14:13"
																	},
																	{
																		"hexValue": "706f6f6c206e6f7420696e6974696c697a6564",
																		"kind": "string",
																		"nativeSrc": "9844:21:13",
																		"nodeType": "YulLiteral",
																		"src": "9844:21:13",
																		"type": "",
																		"value": "pool not initilized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9821:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9821:6:13"
																},
																"nativeSrc": "9821:45:13",
																"nodeType": "YulFunctionCall",
																"src": "9821:45:13"
															},
															"nativeSrc": "9821:45:13",
															"nodeType": "YulExpressionStatement",
															"src": "9821:45:13"
														}
													]
												},
												"name": "store_literal_in_memory_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7",
												"nativeSrc": "9704:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9802:6:13",
														"nodeType": "YulTypedName",
														"src": "9802:6:13",
														"type": ""
													}
												],
												"src": "9704:169:13"
											},
											{
												"body": {
													"nativeSrc": "10025:220:13",
													"nodeType": "YulBlock",
													"src": "10025:220:13",
													"statements": [
														{
															"nativeSrc": "10035:74:13",
															"nodeType": "YulAssignment",
															"src": "10035:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10101:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10101:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10106:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10106:2:13",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10042:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "10042:58:13"
																},
																"nativeSrc": "10042:67:13",
																"nodeType": "YulFunctionCall",
																"src": "10042:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10035:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10035:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10207:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10207:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7",
																	"nativeSrc": "10118:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "10118:88:13"
																},
																"nativeSrc": "10118:93:13",
																"nodeType": "YulFunctionCall",
																"src": "10118:93:13"
															},
															"nativeSrc": "10118:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "10118:93:13"
														},
														{
															"nativeSrc": "10220:19:13",
															"nodeType": "YulAssignment",
															"src": "10220:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10231:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10231:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10236:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10236:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10227:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10227:3:13"
																},
																"nativeSrc": "10227:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10227:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10220:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10220:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9879:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10013:3:13",
														"nodeType": "YulTypedName",
														"src": "10013:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10021:3:13",
														"nodeType": "YulTypedName",
														"src": "10021:3:13",
														"type": ""
													}
												],
												"src": "9879:366:13"
											},
											{
												"body": {
													"nativeSrc": "10422:248:13",
													"nodeType": "YulBlock",
													"src": "10422:248:13",
													"statements": [
														{
															"nativeSrc": "10432:26:13",
															"nodeType": "YulAssignment",
															"src": "10432:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10444:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10444:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10455:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10455:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10440:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10440:3:13"
																},
																"nativeSrc": "10440:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10440:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10432:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10432:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10479:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10479:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10490:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10490:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10475:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10475:3:13"
																		},
																		"nativeSrc": "10475:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10475:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10498:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10498:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10504:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10504:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10494:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10494:3:13"
																		},
																		"nativeSrc": "10494:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10494:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10468:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10468:6:13"
																},
																"nativeSrc": "10468:47:13",
																"nodeType": "YulFunctionCall",
																"src": "10468:47:13"
															},
															"nativeSrc": "10468:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "10468:47:13"
														},
														{
															"nativeSrc": "10524:139:13",
															"nodeType": "YulAssignment",
															"src": "10524:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10658:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10658:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10532:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "10532:124:13"
																},
																"nativeSrc": "10532:131:13",
																"nodeType": "YulFunctionCall",
																"src": "10532:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10524:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10524:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10251:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10402:9:13",
														"nodeType": "YulTypedName",
														"src": "10402:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10417:4:13",
														"nodeType": "YulTypedName",
														"src": "10417:4:13",
														"type": ""
													}
												],
												"src": "10251:419:13"
											},
											{
												"body": {
													"nativeSrc": "10782:72:13",
													"nodeType": "YulBlock",
													"src": "10782:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10804:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "10804:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10812:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10812:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10800:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10800:3:13"
																		},
																		"nativeSrc": "10800:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10800:14:13"
																	},
																	{
																		"hexValue": "6e6f7420656e6f75676820736861726520746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "10816:30:13",
																		"nodeType": "YulLiteral",
																		"src": "10816:30:13",
																		"type": "",
																		"value": "not enough share to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10793:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10793:6:13"
																},
																"nativeSrc": "10793:54:13",
																"nodeType": "YulFunctionCall",
																"src": "10793:54:13"
															},
															"nativeSrc": "10793:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "10793:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27",
												"nativeSrc": "10676:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10774:6:13",
														"nodeType": "YulTypedName",
														"src": "10774:6:13",
														"type": ""
													}
												],
												"src": "10676:178:13"
											},
											{
												"body": {
													"nativeSrc": "11006:220:13",
													"nodeType": "YulBlock",
													"src": "11006:220:13",
													"statements": [
														{
															"nativeSrc": "11016:74:13",
															"nodeType": "YulAssignment",
															"src": "11016:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11082:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11082:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11087:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11087:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11023:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "11023:58:13"
																},
																"nativeSrc": "11023:67:13",
																"nodeType": "YulFunctionCall",
																"src": "11023:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11016:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11016:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11188:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11188:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27",
																	"nativeSrc": "11099:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "11099:88:13"
																},
																"nativeSrc": "11099:93:13",
																"nodeType": "YulFunctionCall",
																"src": "11099:93:13"
															},
															"nativeSrc": "11099:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "11099:93:13"
														},
														{
															"nativeSrc": "11201:19:13",
															"nodeType": "YulAssignment",
															"src": "11201:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11212:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11212:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11217:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11217:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11208:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11208:3:13"
																},
																"nativeSrc": "11208:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11208:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11201:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11201:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10860:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10994:3:13",
														"nodeType": "YulTypedName",
														"src": "10994:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11002:3:13",
														"nodeType": "YulTypedName",
														"src": "11002:3:13",
														"type": ""
													}
												],
												"src": "10860:366:13"
											},
											{
												"body": {
													"nativeSrc": "11403:248:13",
													"nodeType": "YulBlock",
													"src": "11403:248:13",
													"statements": [
														{
															"nativeSrc": "11413:26:13",
															"nodeType": "YulAssignment",
															"src": "11413:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11425:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "11425:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11436:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11421:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11421:3:13"
																},
																"nativeSrc": "11421:18:13",
																"nodeType": "YulFunctionCall",
																"src": "11421:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11413:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11413:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11460:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11460:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11471:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11471:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11456:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11456:3:13"
																		},
																		"nativeSrc": "11456:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11456:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11479:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11479:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11485:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "11485:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11475:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11475:3:13"
																		},
																		"nativeSrc": "11475:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11475:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11449:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11449:6:13"
																},
																"nativeSrc": "11449:47:13",
																"nodeType": "YulFunctionCall",
																"src": "11449:47:13"
															},
															"nativeSrc": "11449:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "11449:47:13"
														},
														{
															"nativeSrc": "11505:139:13",
															"nodeType": "YulAssignment",
															"src": "11505:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11639:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11639:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11513:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "11513:124:13"
																},
																"nativeSrc": "11513:131:13",
																"nodeType": "YulFunctionCall",
																"src": "11513:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11505:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11505:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11232:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11383:9:13",
														"nodeType": "YulTypedName",
														"src": "11383:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11398:4:13",
														"nodeType": "YulTypedName",
														"src": "11398:4:13",
														"type": ""
													}
												],
												"src": "11232:419:13"
											},
											{
												"body": {
													"nativeSrc": "11763:72:13",
													"nodeType": "YulBlock",
													"src": "11763:72:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11785:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "11785:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11793:1:13",
																				"nodeType": "YulLiteral",
																				"src": "11793:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11781:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11781:3:13"
																		},
																		"nativeSrc": "11781:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11781:14:13"
																	},
																	{
																		"hexValue": "696e6974202d20616c726561647920686173206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "11797:30:13",
																		"nodeType": "YulLiteral",
																		"src": "11797:30:13",
																		"type": "",
																		"value": "init - already has liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11774:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11774:6:13"
																},
																"nativeSrc": "11774:54:13",
																"nodeType": "YulFunctionCall",
																"src": "11774:54:13"
															},
															"nativeSrc": "11774:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "11774:54:13"
														}
													]
												},
												"name": "store_literal_in_memory_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0",
												"nativeSrc": "11657:178:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11755:6:13",
														"nodeType": "YulTypedName",
														"src": "11755:6:13",
														"type": ""
													}
												],
												"src": "11657:178:13"
											},
											{
												"body": {
													"nativeSrc": "11987:220:13",
													"nodeType": "YulBlock",
													"src": "11987:220:13",
													"statements": [
														{
															"nativeSrc": "11997:74:13",
															"nodeType": "YulAssignment",
															"src": "11997:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12063:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12063:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12068:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12068:2:13",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12004:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12004:58:13"
																},
																"nativeSrc": "12004:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12004:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11997:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11997:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12169:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12169:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0",
																	"nativeSrc": "12080:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "12080:88:13"
																},
																"nativeSrc": "12080:93:13",
																"nodeType": "YulFunctionCall",
																"src": "12080:93:13"
															},
															"nativeSrc": "12080:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "12080:93:13"
														},
														{
															"nativeSrc": "12182:19:13",
															"nodeType": "YulAssignment",
															"src": "12182:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12193:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12193:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12198:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12198:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12189:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12189:3:13"
																},
																"nativeSrc": "12189:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12189:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12182:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12182:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11841:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11975:3:13",
														"nodeType": "YulTypedName",
														"src": "11975:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11983:3:13",
														"nodeType": "YulTypedName",
														"src": "11983:3:13",
														"type": ""
													}
												],
												"src": "11841:366:13"
											},
											{
												"body": {
													"nativeSrc": "12384:248:13",
													"nodeType": "YulBlock",
													"src": "12384:248:13",
													"statements": [
														{
															"nativeSrc": "12394:26:13",
															"nodeType": "YulAssignment",
															"src": "12394:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12406:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12406:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12417:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12417:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12402:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12402:3:13"
																},
																"nativeSrc": "12402:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12402:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12394:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12394:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12441:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12441:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12452:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12452:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12437:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12437:3:13"
																		},
																		"nativeSrc": "12437:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12437:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12460:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "12460:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12466:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12466:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12456:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12456:3:13"
																		},
																		"nativeSrc": "12456:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12456:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12430:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12430:6:13"
																},
																"nativeSrc": "12430:47:13",
																"nodeType": "YulFunctionCall",
																"src": "12430:47:13"
															},
															"nativeSrc": "12430:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "12430:47:13"
														},
														{
															"nativeSrc": "12486:139:13",
															"nodeType": "YulAssignment",
															"src": "12486:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12620:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12620:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12494:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "12494:124:13"
																},
																"nativeSrc": "12494:131:13",
																"nodeType": "YulFunctionCall",
																"src": "12494:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12486:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12486:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12213:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12364:9:13",
														"nodeType": "YulTypedName",
														"src": "12364:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12379:4:13",
														"nodeType": "YulTypedName",
														"src": "12379:4:13",
														"type": ""
													}
												],
												"src": "12213:419:13"
											},
											{
												"body": {
													"nativeSrc": "12744:73:13",
													"nodeType": "YulBlock",
													"src": "12744:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12766:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12766:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12774:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12774:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12762:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12762:3:13"
																		},
																		"nativeSrc": "12762:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12762:14:13"
																	},
																	{
																		"hexValue": "696e6974202d20626f746820746f6b656e7320617265206e6565646564",
																		"kind": "string",
																		"nativeSrc": "12778:31:13",
																		"nodeType": "YulLiteral",
																		"src": "12778:31:13",
																		"type": "",
																		"value": "init - both tokens are needed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12755:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12755:6:13"
																},
																"nativeSrc": "12755:55:13",
																"nodeType": "YulFunctionCall",
																"src": "12755:55:13"
															},
															"nativeSrc": "12755:55:13",
															"nodeType": "YulExpressionStatement",
															"src": "12755:55:13"
														}
													]
												},
												"name": "store_literal_in_memory_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7",
												"nativeSrc": "12638:179:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12736:6:13",
														"nodeType": "YulTypedName",
														"src": "12736:6:13",
														"type": ""
													}
												],
												"src": "12638:179:13"
											},
											{
												"body": {
													"nativeSrc": "12969:220:13",
													"nodeType": "YulBlock",
													"src": "12969:220:13",
													"statements": [
														{
															"nativeSrc": "12979:74:13",
															"nodeType": "YulAssignment",
															"src": "12979:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13045:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13045:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13050:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13050:2:13",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12986:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "12986:58:13"
																},
																"nativeSrc": "12986:67:13",
																"nodeType": "YulFunctionCall",
																"src": "12986:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12979:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12979:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13151:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13151:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7",
																	"nativeSrc": "13062:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "13062:88:13"
																},
																"nativeSrc": "13062:93:13",
																"nodeType": "YulFunctionCall",
																"src": "13062:93:13"
															},
															"nativeSrc": "13062:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "13062:93:13"
														},
														{
															"nativeSrc": "13164:19:13",
															"nodeType": "YulAssignment",
															"src": "13164:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13175:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13175:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13180:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13180:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13171:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13171:3:13"
																},
																"nativeSrc": "13171:12:13",
																"nodeType": "YulFunctionCall",
																"src": "13171:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13164:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13164:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12823:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12957:3:13",
														"nodeType": "YulTypedName",
														"src": "12957:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12965:3:13",
														"nodeType": "YulTypedName",
														"src": "12965:3:13",
														"type": ""
													}
												],
												"src": "12823:366:13"
											},
											{
												"body": {
													"nativeSrc": "13366:248:13",
													"nodeType": "YulBlock",
													"src": "13366:248:13",
													"statements": [
														{
															"nativeSrc": "13376:26:13",
															"nodeType": "YulAssignment",
															"src": "13376:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13388:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13388:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13399:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13399:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13384:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13384:3:13"
																},
																"nativeSrc": "13384:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13384:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13376:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13376:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13423:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13423:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13434:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13434:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13419:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13419:3:13"
																		},
																		"nativeSrc": "13419:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13419:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13442:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13442:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13448:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13448:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13438:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13438:3:13"
																		},
																		"nativeSrc": "13438:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13438:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13412:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13412:6:13"
																},
																"nativeSrc": "13412:47:13",
																"nodeType": "YulFunctionCall",
																"src": "13412:47:13"
															},
															"nativeSrc": "13412:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "13412:47:13"
														},
														{
															"nativeSrc": "13468:139:13",
															"nodeType": "YulAssignment",
															"src": "13468:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13602:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13602:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13476:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "13476:124:13"
																},
																"nativeSrc": "13476:131:13",
																"nodeType": "YulFunctionCall",
																"src": "13476:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13468:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13468:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13195:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13346:9:13",
														"nodeType": "YulTypedName",
														"src": "13346:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13361:4:13",
														"nodeType": "YulTypedName",
														"src": "13361:4:13",
														"type": ""
													}
												],
												"src": "13195:419:13"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8(memPtr) {\n\n        mstore(add(memPtr, 0), \"not token0 provided\")\n\n    }\n\n    function abi_encode_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to transfer token0\")\n\n    }\n\n    function abi_encode_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f(memPtr) {\n\n        mstore(add(memPtr, 0), \"failed to transfer token1\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7(memPtr) {\n\n        mstore(add(memPtr, 0), \"pool not initilized\")\n\n    }\n\n    function abi_encode_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27(memPtr) {\n\n        mstore(add(memPtr, 0), \"not enough share to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"init - already has liquidity\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7(memPtr) {\n\n        mstore(add(memPtr, 0), \"init - both tokens are needed\")\n\n    }\n\n    function abi_encode_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100b2575f3560e01c80639c8f9f231161006f5780639c8f9f2314610153578063a5843f081461016f578063aa6ca8081461018b578063ad3bd45c146101aa578063f04da65b146101c6578063f2fde38b146101f6576100b2565b80630902f1ac146100b657806326ef80c9146100d55780633a98ef39146100f157806351c6590a1461010f578063715018a61461012b5780638da5cb5b14610135575b5f80fd5b6100be610212565b6040516100cc9291906112b1565b60405180910390f35b6100ef60048036038101906100ea9190611306565b610222565b005b6100f96104a0565b6040516101069190611331565b60405180910390f35b61012960048036038101906101249190611306565b6104a6565b005b61013361078f565b005b61013d6107a2565b60405161014a9190611389565b60405180910390f35b61016d60048036038101906101689190611306565b6107c9565b005b610189600480360381019061018491906113a2565b610adb565b005b610193610d3d565b6040516101a19291906113e0565b60405180910390f35b6101c460048036038101906101bf9190611306565b610d8b565b005b6101e060048036038101906101db9190611431565b611009565b6040516101ed9190611331565b60405180910390f35b610210600480360381019061020b9190611431565b61104f565b005b5f80600354600454915091509091565b5f8111610264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161025b906114b6565b60405180910390fd5b5f6103e5826102739190611501565b6103e86003546102839190611501565b61028d9190611542565b6103e56004548461029e9190611501565b6102a89190611501565b6102b291906115a2565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610312939291906115d2565b6020604051808303815f875af115801561032e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610352919061163c565b610391576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610388906116b1565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016103ed9291906116cf565b6020604051808303815f875af1158015610409573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061042d919061163c565b61046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390611740565b60405180910390fd5b8160035f82825461047d9190611542565b925050819055508060045f828254610495919061175e565b925050819055505050565b60065481565b5f600354141580156104ba57505f60045414155b6104f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f0906117db565b60405180910390fd5b5f6003546004548361050b9190611501565b61051591906115a2565b90505f600354836006546105299190611501565b61053391906115a2565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b8152600401610593939291906115d2565b6020604051808303815f875af11580156105af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105d3919061163c565b610612576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610609906116b1565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610670939291906115d2565b6020604051808303815f875af115801561068c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106b0919061163c565b6106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611740565b60405180910390fd5b8260035f8282546107009190611542565b925050819055508160045f8282546107189190611542565b925050819055508060055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461076b9190611542565b925050819055508060065f8282546107839190611542565b92505081905550505050565b6107976110d3565b6107a05f61115a565b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054811115610849576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084090611843565b60405180910390fd5b5f6006548260035461085b9190611501565b61086591906115a2565b90505f600654836004546108799190611501565b61088391906115a2565b905060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016108e19291906116cf565b6020604051808303815f875af11580156108fd573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610921919061163c565b610960576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610957906116b1565b60405180910390fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109bc9291906116cf565b6020604051808303815f875af11580156109d8573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109fc919061163c565b610a3b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3290611740565b60405180910390fd5b8160035f828254610a4c919061175e565b925050819055508060045f828254610a64919061175e565b925050819055508260055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610ab7919061175e565b925050819055508260065f828254610acf919061175e565b92505081905550505050565b610ae36110d3565b5f600354148015610af557505f600454145b610b34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2b906118ab565b60405180910390fd5b5f82118015610b4257505f81115b610b81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7890611913565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610bdf939291906115d2565b6020604051808303815f875af1158015610bfb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c1f919061163c565b610c27575f80fd5b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610c85939291906115d2565b6020604051808303815f875af1158015610ca1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cc5919061163c565b610ccd575f80fd5b8160038190555080600481905550610cef8183610cea9190611501565b61121b565b60068190555060065460055f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505050565b5f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915091509091565b5f8111610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc4906114b6565b60405180910390fd5b5f6103e582610ddc9190611501565b6103e8600454610dec9190611501565b610df69190611542565b6103e560035484610e079190611501565b610e119190611501565b610e1b91906115a2565b905060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610e7b939291906115d2565b6020604051808303815f875af1158015610e97573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610ebb919061163c565b610efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef190611740565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610f569291906116cf565b6020604051808303815f875af1158015610f72573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f96919061163c565b610fd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fcc906116b1565b60405180910390fd5b8060035f828254610fe6919061175e565b925050819055508160045f828254610ffe9190611542565b925050819055505050565b5f60055f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b6110576110d3565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110c7575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110be9190611389565b60405180910390fd5b6110d08161115a565b50565b6110db611292565b73ffffffffffffffffffffffffffffffffffffffff166110f96107a2565b73ffffffffffffffffffffffffffffffffffffffff16146111585761111c611292565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161114f9190611389565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6003821115611280578190505f600160028461123891906115a2565b6112429190611542565b90505b8181101561127a57809150600281828561125f91906115a2565b6112699190611542565b61127391906115a2565b9050611245565b5061128d565b5f821461128c57600190505b5b919050565b5f33905090565b5f819050919050565b6112ab81611299565b82525050565b5f6040820190506112c45f8301856112a2565b6112d160208301846112a2565b9392505050565b5f80fd5b6112e581611299565b81146112ef575f80fd5b50565b5f81359050611300816112dc565b92915050565b5f6020828403121561131b5761131a6112d8565b5b5f611328848285016112f2565b91505092915050565b5f6020820190506113445f8301846112a2565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6113738261134a565b9050919050565b61138381611369565b82525050565b5f60208201905061139c5f83018461137a565b92915050565b5f80604083850312156113b8576113b76112d8565b5b5f6113c5858286016112f2565b92505060206113d6858286016112f2565b9150509250929050565b5f6040820190506113f35f83018561137a565b611400602083018461137a565b9392505050565b61141081611369565b811461141a575f80fd5b50565b5f8135905061142b81611407565b92915050565b5f60208284031215611446576114456112d8565b5b5f6114538482850161141d565b91505092915050565b5f82825260208201905092915050565b7f6e6f7420746f6b656e302070726f7669646564000000000000000000000000005f82015250565b5f6114a060138361145c565b91506114ab8261146c565b602082019050919050565b5f6020820190508181035f8301526114cd81611494565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61150b82611299565b915061151683611299565b925082820261152481611299565b9150828204841483151761153b5761153a6114d4565b5b5092915050565b5f61154c82611299565b915061155783611299565b925082820190508082111561156f5761156e6114d4565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6115ac82611299565b91506115b783611299565b9250826115c7576115c6611575565b5b828204905092915050565b5f6060820190506115e55f83018661137a565b6115f2602083018561137a565b6115ff60408301846112a2565b949350505050565b5f8115159050919050565b61161b81611607565b8114611625575f80fd5b50565b5f8151905061163681611612565b92915050565b5f60208284031215611651576116506112d8565b5b5f61165e84828501611628565b91505092915050565b7f6661696c656420746f207472616e7366657220746f6b656e30000000000000005f82015250565b5f61169b60198361145c565b91506116a682611667565b602082019050919050565b5f6020820190508181035f8301526116c88161168f565b9050919050565b5f6040820190506116e25f83018561137a565b6116ef60208301846112a2565b9392505050565b7f6661696c656420746f207472616e7366657220746f6b656e31000000000000005f82015250565b5f61172a60198361145c565b9150611735826116f6565b602082019050919050565b5f6020820190508181035f8301526117578161171e565b9050919050565b5f61176882611299565b915061177383611299565b925082820390508181111561178b5761178a6114d4565b5b92915050565b7f706f6f6c206e6f7420696e6974696c697a6564000000000000000000000000005f82015250565b5f6117c560138361145c565b91506117d082611791565b602082019050919050565b5f6020820190508181035f8301526117f2816117b9565b9050919050565b7f6e6f7420656e6f75676820736861726520746f207769746864726177000000005f82015250565b5f61182d601c8361145c565b9150611838826117f9565b602082019050919050565b5f6020820190508181035f83015261185a81611821565b9050919050565b7f696e6974202d20616c726561647920686173206c6971756964697479000000005f82015250565b5f611895601c8361145c565b91506118a082611861565b602082019050919050565b5f6020820190508181035f8301526118c281611889565b9050919050565b7f696e6974202d20626f746820746f6b656e7320617265206e65656465640000005f82015250565b5f6118fd601d8361145c565b9150611908826118c9565b602082019050919050565b5f6020820190508181035f83015261192a816118f1565b905091905056fea2646970667358221220862114873122a9cbab9e2ff4adaae3d7ee9d2174e1a94f4578dec5692a2aca2464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C8F9F23 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xA5843F08 EQ PUSH2 0x16F JUMPI DUP1 PUSH4 0xAA6CA808 EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0xAD3BD45C EQ PUSH2 0x1AA JUMPI DUP1 PUSH4 0xF04DA65B EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1F6 JUMPI PUSH2 0xB2 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0x26EF80C9 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x3A98EF39 EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x135 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xBE PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCC SWAP3 SWAP2 SWAP1 PUSH2 0x12B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEA SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x222 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF9 PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x106 SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x124 SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x133 PUSH2 0x78F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x13D PUSH2 0x7A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x189 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x13A2 JUMP JUMPDEST PUSH2 0xADB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x193 PUSH2 0xD3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A1 SWAP3 SWAP2 SWAP1 PUSH2 0x13E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1306 JUMP JUMPDEST PUSH2 0xD8B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x1009 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x1331 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x1431 JUMP JUMPDEST PUSH2 0x104F JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x264 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x25B SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x3 SLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x4 SLOAD DUP5 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x312 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x32E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x391 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x388 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3ED SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x409 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x42D SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x46C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x463 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x495 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI POP PUSH0 PUSH1 0x4 SLOAD EQ ISZERO JUMPDEST PUSH2 0x4F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4F0 SWAP1 PUSH2 0x17DB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x50B SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x515 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x3 SLOAD DUP4 PUSH1 0x6 SLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x533 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x612 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x609 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x670 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x68C JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B0 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E6 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x700 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x718 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x76B SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x783 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x797 PUSH2 0x10D3 JUMP JUMPDEST PUSH2 0x7A0 PUSH0 PUSH2 0x115A JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD DUP2 GT ISZERO PUSH2 0x849 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x840 SWAP1 PUSH2 0x1843 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x6 SLOAD DUP3 PUSH1 0x3 SLOAD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x865 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 SLOAD DUP4 PUSH1 0x4 SLOAD PUSH2 0x879 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E1 SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8FD JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x921 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0x960 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x957 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9BC SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9D8 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9FC SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xA3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA32 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA4C SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA64 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xAB7 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xACF SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0xAE3 PUSH2 0x10D3 JUMP JUMPDEST PUSH0 PUSH1 0x3 SLOAD EQ DUP1 ISZERO PUSH2 0xAF5 JUMPI POP PUSH0 PUSH1 0x4 SLOAD EQ JUMPDEST PUSH2 0xB34 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB2B SWAP1 PUSH2 0x18AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0xB42 JUMPI POP PUSH0 DUP2 GT JUMPDEST PUSH2 0xB81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB78 SWAP1 PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBDF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBFB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1F SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xC27 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC85 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xCA1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCC5 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xCCD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0xCEF DUP2 DUP4 PUSH2 0xCEA SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x121B JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH1 0x6 SLOAD PUSH1 0x5 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0xDCD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDC4 SWAP1 PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E5 DUP3 PUSH2 0xDDC SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0x3E8 PUSH1 0x4 SLOAD PUSH2 0xDEC SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x3E5 PUSH1 0x3 SLOAD DUP5 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xE11 SWAP2 SWAP1 PUSH2 0x1501 JUMP JUMPDEST PUSH2 0xE1B SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE7B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15D2 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE97 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEBB SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xEFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF1 SWAP1 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF56 SWAP3 SWAP2 SWAP1 PUSH2 0x16CF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF72 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF96 SWAP2 SWAP1 PUSH2 0x163C JUMP JUMPDEST PUSH2 0xFD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP1 PUSH2 0x16B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFE6 SWAP2 SWAP1 PUSH2 0x175E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFFE SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1057 PUSH2 0x10D3 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x10C7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10D0 DUP2 PUSH2 0x115A JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x10DB PUSH2 0x1292 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10F9 PUSH2 0x7A2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1158 JUMPI PUSH2 0x111C PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x114F SWAP2 SWAP1 PUSH2 0x1389 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1280 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1238 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x1242 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x127A JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x125F SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x1269 SWAP2 SWAP1 PUSH2 0x1542 JUMP JUMPDEST PUSH2 0x1273 SWAP2 SWAP1 PUSH2 0x15A2 JUMP JUMPDEST SWAP1 POP PUSH2 0x1245 JUMP JUMPDEST POP PUSH2 0x128D JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x128C JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12AB DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x12C4 PUSH0 DUP4 ADD DUP6 PUSH2 0x12A2 JUMP JUMPDEST PUSH2 0x12D1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x12E5 DUP2 PUSH2 0x1299 JUMP JUMPDEST DUP2 EQ PUSH2 0x12EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1300 DUP2 PUSH2 0x12DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x131B JUMPI PUSH2 0x131A PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1328 DUP5 DUP3 DUP6 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1344 PUSH0 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1373 DUP3 PUSH2 0x134A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1383 DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x139C PUSH0 DUP4 ADD DUP5 PUSH2 0x137A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13C5 DUP6 DUP3 DUP7 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13D6 DUP6 DUP3 DUP7 ADD PUSH2 0x12F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x13F3 PUSH0 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x1400 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x137A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1410 DUP2 PUSH2 0x1369 JUMP JUMPDEST DUP2 EQ PUSH2 0x141A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x142B DUP2 PUSH2 0x1407 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1446 JUMPI PUSH2 0x1445 PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1453 DUP5 DUP3 DUP6 ADD PUSH2 0x141D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6E6F7420746F6B656E302070726F766964656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x14A0 PUSH1 0x13 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x14AB DUP3 PUSH2 0x146C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x14CD DUP2 PUSH2 0x1494 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x150B DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x1516 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1524 DUP2 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x153B JUMPI PUSH2 0x153A PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x154C DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x1557 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x156F JUMPI PUSH2 0x156E PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x15AC DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x15B7 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x15C7 JUMPI PUSH2 0x15C6 PUSH2 0x1575 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x15E5 PUSH0 DUP4 ADD DUP7 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x15F2 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x15FF PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161B DUP2 PUSH2 0x1607 JUMP JUMPDEST DUP2 EQ PUSH2 0x1625 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1636 DUP2 PUSH2 0x1612 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH2 0x1650 PUSH2 0x12D8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165E DUP5 DUP3 DUP6 ADD PUSH2 0x1628 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x6661696C656420746F207472616E7366657220746F6B656E3000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x169B PUSH1 0x19 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x16A6 DUP3 PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x16C8 DUP2 PUSH2 0x168F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16E2 PUSH0 DUP4 ADD DUP6 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x16EF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x12A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6661696C656420746F207472616E7366657220746F6B656E3100000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x172A PUSH1 0x19 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1735 DUP3 PUSH2 0x16F6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1757 DUP2 PUSH2 0x171E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1768 DUP3 PUSH2 0x1299 JUMP JUMPDEST SWAP2 POP PUSH2 0x1773 DUP4 PUSH2 0x1299 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x178B JUMPI PUSH2 0x178A PUSH2 0x14D4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x706F6F6C206E6F7420696E6974696C697A656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17C5 PUSH1 0x13 DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x17D0 DUP3 PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F2 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6E6F7420656E6F75676820736861726520746F20776974686472617700000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x182D PUSH1 0x1C DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1838 DUP3 PUSH2 0x17F9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x185A DUP2 PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E6974202D20616C726561647920686173206C697175696469747900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1895 PUSH1 0x1C DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x18A0 DUP3 PUSH2 0x1861 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18C2 DUP2 PUSH2 0x1889 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x696E6974202D20626F746820746F6B656E7320617265206E6565646564000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18FD PUSH1 0x1D DUP4 PUSH2 0x145C JUMP JUMPDEST SWAP2 POP PUSH2 0x1908 DUP3 PUSH2 0x18C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x192A DUP2 PUSH2 0x18F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP7 0x21 EQ DUP8 BALANCE 0x22 0xA9 0xCB 0xAB SWAP15 0x2F DELEGATECALL 0xAD 0xAA 0xE3 0xD7 0xEE SWAP14 0x21 PUSH21 0xE1A94F4578DEC5692A2ACA2464736F6C6343000818 STOP CALLER ",
							"sourceMap": "180:4043:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1511:104;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3192:505;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;354:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1886:645;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:2;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2539:645:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;494:614;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1623:104;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3705:505;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1735:96;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1511:104:10;1557:4;1563;1588:8;;1598;;1580:27;;;;1511:104;;:::o;3192:505::-;3282:1;3267:12;:16;3259:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3318:17;3398:3;3385:12;:16;;;;:::i;:::-;3378:4;3369:8;;:13;;;;:::i;:::-;:32;;;;:::i;:::-;3361:3;3352:8;;3339:12;:21;;;;:::i;:::-;:25;;;;:::i;:::-;3338:64;;;;:::i;:::-;3318:84;;3428:6;;;;;;;;;;;3421:27;;;3449:10;3469:4;3476:12;3421:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3413:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;3547:6;;;;;;;;;;;3540:23;;;3564:10;3576:12;3540:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3532:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3642:12;3630:8;;:24;;;;;;;:::i;:::-;;;;;;;;3677:12;3665:8;;:24;;;;;;;:::i;:::-;;;;;;;;3248:449;3192:505;:::o;354:23::-;;;;:::o;1886:645::-;1976:1;1964:8;;:13;;:30;;;;;1993:1;1981:8;;:13;;1964:30;1956:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2029:17;2071:8;;2062;;2049:12;:21;;;;:::i;:::-;:30;;;;:::i;:::-;2029:50;;2090:14;2132:8;;2119:12;2107:11;;:24;;;;:::i;:::-;:33;;;;:::i;:::-;2090:50;;2168:6;;;;;;;;;;;2161:27;;;2189:10;2209:4;2216:12;2161:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2153:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2285:6;;;;;;;;;;;2278:27;;;2306:10;2326:4;2333:12;2278:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2270:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2399:12;2387:8;;:24;;;;;;;:::i;:::-;;;;;;;;2434:12;2422:8;;:24;;;;;;;:::i;:::-;;;;;;;;2479:9;2457:6;:18;2464:10;2457:18;;;;;;;;;;;;;;;;:31;;;;;;;:::i;:::-;;;;;;;;2514:9;2499:11;;:24;;;;;;;:::i;:::-;;;;;;;;1945:586;;1886:645;:::o;2293:101:2:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2539:645:10:-;2640:6;:18;2647:10;2640:18;;;;;;;;;;;;;;;;2622:14;:36;;2614:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2702:17;2746:11;;2731:14;2722:8;;:23;;;;:::i;:::-;:35;;;;:::i;:::-;2702:55;;2768:17;2812:11;;2797:14;2788:8;;:23;;;;:::i;:::-;:35;;;;:::i;:::-;2768:55;;2849:6;;;;;;;;;;;2842:23;;;2866:10;2878:12;2842:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2834:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;2947:6;;;;;;;;;;;2940:23;;;2964:10;2976:12;2940:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2932:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3042:12;3030:8;;:24;;;;;;;:::i;:::-;;;;;;;;3077:12;3065:8;;:24;;;;;;;:::i;:::-;;;;;;;;3122:14;3100:6;:18;3107:10;3100:18;;;;;;;;;;;;;;;;:36;;;;;;;:::i;:::-;;;;;;;;3162:14;3147:11;;:29;;;;;;;:::i;:::-;;;;;;;;2603:581;;2539:645;:::o;494:614::-;1531:13:2;:11;:13::i;:::-;605:1:10::1;593:8;;:13;:30;;;;;622:1;610:8;;:13;593:30;585:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;690:1;675:12;:16;:36;;;;;710:1;695:12;:16;675:36;667:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;781:6;;;;;;;;;;;774:27;;;802:10;822:4;829:12;774:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;766:77;;;::::0;::::1;;869:6;;;;;;;;;;;862:27;;;890:10;910:4;917:12;862:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;854:77;;;::::0;::::1;;953:12;942:8;:23;;;;987:12;976:8;:23;;;;1024:33;1044:12;1029;:27;;;;:::i;:::-;1024:4;:33::i;:::-;1010:11;:47;;;;1089:11;;1068:6;:18;1075:10;1068:18;;;;;;;;;;;;;;;:32;;;;494:614:::0;;:::o;1623:104::-;1667:7;1676;1704:6;;;;;;;;;;;1712;;;;;;;;;;;1696:23;;;;1623:104;;:::o;3705:505::-;3795:1;3780:12;:16;3772:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;3831:17;3911:3;3898:12;:16;;;;:::i;:::-;3891:4;3882:8;;:13;;;;:::i;:::-;:32;;;;:::i;:::-;3874:3;3865:8;;3852:12;:21;;;;:::i;:::-;:25;;;;:::i;:::-;3851:64;;;;:::i;:::-;3831:84;;3941:6;;;;;;;;;;;3934:27;;;3962:10;3982:4;3989:12;3934:68;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3926:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;4060:6;;;;;;;;;;;4053:23;;;4077:10;4089:12;4053:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4045:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;4155:12;4143:8;;:24;;;;;;;:::i;:::-;;;;;;;;4190:12;4178:8;;:24;;;;;;;:::i;:::-;;;;;;;;3761:449;3705:505;:::o;1735:96::-;1789:4;1813:6;:10;1820:2;1813:10;;;;;;;;;;;;;;;;1806:17;;1735:96;;;:::o;2543:215:2:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1200:303:10:-;1245:6;1272:1;1268;:5;1264:232;;;1294:1;1290:5;;1310:6;1327:1;1323;1319;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1310:18;;1343:92;1354:1;1350;:5;1343:92;;;1380:1;1376:5;;1418:1;1413;1409;1405;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1404:15;;;;:::i;:::-;1400:19;;1343:92;;;1275:171;1264:232;;;1461:1;1456;:6;1452:44;;1483:1;1479:5;;1452:44;1264:232;1200:303;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7:77:13:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:332::-;335:4;373:2;362:9;358:18;350:26;;386:71;454:1;443:9;439:17;430:6;386:71;:::i;:::-;467:72;535:2;524:9;520:18;511:6;467:72;:::i;:::-;214:332;;;;;:::o;633:117::-;742:1;739;732:12;879:122;952:24;970:5;952:24;:::i;:::-;945:5;942:35;932:63;;991:1;988;981:12;932:63;879:122;:::o;1007:139::-;1053:5;1091:6;1078:20;1069:29;;1107:33;1134:5;1107:33;:::i;:::-;1007:139;;;;:::o;1152:329::-;1211:6;1260:2;1248:9;1239:7;1235:23;1231:32;1228:119;;;1266:79;;:::i;:::-;1228:119;1386:1;1411:53;1456:7;1447:6;1436:9;1432:22;1411:53;:::i;:::-;1401:63;;1357:117;1152:329;;;;:::o;1487:222::-;1580:4;1618:2;1607:9;1603:18;1595:26;;1631:71;1699:1;1688:9;1684:17;1675:6;1631:71;:::i;:::-;1487:222;;;;:::o;1715:126::-;1752:7;1792:42;1785:5;1781:54;1770:65;;1715:126;;;:::o;1847:96::-;1884:7;1913:24;1931:5;1913:24;:::i;:::-;1902:35;;1847:96;;;:::o;1949:118::-;2036:24;2054:5;2036:24;:::i;:::-;2031:3;2024:37;1949:118;;:::o;2073:222::-;2166:4;2204:2;2193:9;2189:18;2181:26;;2217:71;2285:1;2274:9;2270:17;2261:6;2217:71;:::i;:::-;2073:222;;;;:::o;2301:474::-;2369:6;2377;2426:2;2414:9;2405:7;2401:23;2397:32;2394:119;;;2432:79;;:::i;:::-;2394:119;2552:1;2577:53;2622:7;2613:6;2602:9;2598:22;2577:53;:::i;:::-;2567:63;;2523:117;2679:2;2705:53;2750:7;2741:6;2730:9;2726:22;2705:53;:::i;:::-;2695:63;;2650:118;2301:474;;;;;:::o;2781:332::-;2902:4;2940:2;2929:9;2925:18;2917:26;;2953:71;3021:1;3010:9;3006:17;2997:6;2953:71;:::i;:::-;3034:72;3102:2;3091:9;3087:18;3078:6;3034:72;:::i;:::-;2781:332;;;;;:::o;3119:122::-;3192:24;3210:5;3192:24;:::i;:::-;3185:5;3182:35;3172:63;;3231:1;3228;3221:12;3172:63;3119:122;:::o;3247:139::-;3293:5;3331:6;3318:20;3309:29;;3347:33;3374:5;3347:33;:::i;:::-;3247:139;;;;:::o;3392:329::-;3451:6;3500:2;3488:9;3479:7;3475:23;3471:32;3468:119;;;3506:79;;:::i;:::-;3468:119;3626:1;3651:53;3696:7;3687:6;3676:9;3672:22;3651:53;:::i;:::-;3641:63;;3597:117;3392:329;;;;:::o;3727:169::-;3811:11;3845:6;3840:3;3833:19;3885:4;3880:3;3876:14;3861:29;;3727:169;;;;:::o;3902:::-;4042:21;4038:1;4030:6;4026:14;4019:45;3902:169;:::o;4077:366::-;4219:3;4240:67;4304:2;4299:3;4240:67;:::i;:::-;4233:74;;4316:93;4405:3;4316:93;:::i;:::-;4434:2;4429:3;4425:12;4418:19;;4077:366;;;:::o;4449:419::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4702:9;4696:4;4692:20;4688:1;4677:9;4673:17;4666:47;4730:131;4856:4;4730:131;:::i;:::-;4722:139;;4449:419;;;:::o;4874:180::-;4922:77;4919:1;4912:88;5019:4;5016:1;5009:15;5043:4;5040:1;5033:15;5060:410;5100:7;5123:20;5141:1;5123:20;:::i;:::-;5118:25;;5157:20;5175:1;5157:20;:::i;:::-;5152:25;;5212:1;5209;5205:9;5234:30;5252:11;5234:30;:::i;:::-;5223:41;;5413:1;5404:7;5400:15;5397:1;5394:22;5374:1;5367:9;5347:83;5324:139;;5443:18;;:::i;:::-;5324:139;5108:362;5060:410;;;;:::o;5476:191::-;5516:3;5535:20;5553:1;5535:20;:::i;:::-;5530:25;;5569:20;5587:1;5569:20;:::i;:::-;5564:25;;5612:1;5609;5605:9;5598:16;;5633:3;5630:1;5627:10;5624:36;;;5640:18;;:::i;:::-;5624:36;5476:191;;;;:::o;5673:180::-;5721:77;5718:1;5711:88;5818:4;5815:1;5808:15;5842:4;5839:1;5832:15;5859:185;5899:1;5916:20;5934:1;5916:20;:::i;:::-;5911:25;;5950:20;5968:1;5950:20;:::i;:::-;5945:25;;5989:1;5979:35;;5994:18;;:::i;:::-;5979:35;6036:1;6033;6029:9;6024:14;;5859:185;;;;:::o;6050:442::-;6199:4;6237:2;6226:9;6222:18;6214:26;;6250:71;6318:1;6307:9;6303:17;6294:6;6250:71;:::i;:::-;6331:72;6399:2;6388:9;6384:18;6375:6;6331:72;:::i;:::-;6413;6481:2;6470:9;6466:18;6457:6;6413:72;:::i;:::-;6050:442;;;;;;:::o;6498:90::-;6532:7;6575:5;6568:13;6561:21;6550:32;;6498:90;;;:::o;6594:116::-;6664:21;6679:5;6664:21;:::i;:::-;6657:5;6654:32;6644:60;;6700:1;6697;6690:12;6644:60;6594:116;:::o;6716:137::-;6770:5;6801:6;6795:13;6786:22;;6817:30;6841:5;6817:30;:::i;:::-;6716:137;;;;:::o;6859:345::-;6926:6;6975:2;6963:9;6954:7;6950:23;6946:32;6943:119;;;6981:79;;:::i;:::-;6943:119;7101:1;7126:61;7179:7;7170:6;7159:9;7155:22;7126:61;:::i;:::-;7116:71;;7072:125;6859:345;;;;:::o;7210:175::-;7350:27;7346:1;7338:6;7334:14;7327:51;7210:175;:::o;7391:366::-;7533:3;7554:67;7618:2;7613:3;7554:67;:::i;:::-;7547:74;;7630:93;7719:3;7630:93;:::i;:::-;7748:2;7743:3;7739:12;7732:19;;7391:366;;;:::o;7763:419::-;7929:4;7967:2;7956:9;7952:18;7944:26;;8016:9;8010:4;8006:20;8002:1;7991:9;7987:17;7980:47;8044:131;8170:4;8044:131;:::i;:::-;8036:139;;7763:419;;;:::o;8188:332::-;8309:4;8347:2;8336:9;8332:18;8324:26;;8360:71;8428:1;8417:9;8413:17;8404:6;8360:71;:::i;:::-;8441:72;8509:2;8498:9;8494:18;8485:6;8441:72;:::i;:::-;8188:332;;;;;:::o;8526:175::-;8666:27;8662:1;8654:6;8650:14;8643:51;8526:175;:::o;8707:366::-;8849:3;8870:67;8934:2;8929:3;8870:67;:::i;:::-;8863:74;;8946:93;9035:3;8946:93;:::i;:::-;9064:2;9059:3;9055:12;9048:19;;8707:366;;;:::o;9079:419::-;9245:4;9283:2;9272:9;9268:18;9260:26;;9332:9;9326:4;9322:20;9318:1;9307:9;9303:17;9296:47;9360:131;9486:4;9360:131;:::i;:::-;9352:139;;9079:419;;;:::o;9504:194::-;9544:4;9564:20;9582:1;9564:20;:::i;:::-;9559:25;;9598:20;9616:1;9598:20;:::i;:::-;9593:25;;9642:1;9639;9635:9;9627:17;;9666:1;9660:4;9657:11;9654:37;;;9671:18;;:::i;:::-;9654:37;9504:194;;;;:::o;9704:169::-;9844:21;9840:1;9832:6;9828:14;9821:45;9704:169;:::o;9879:366::-;10021:3;10042:67;10106:2;10101:3;10042:67;:::i;:::-;10035:74;;10118:93;10207:3;10118:93;:::i;:::-;10236:2;10231:3;10227:12;10220:19;;9879:366;;;:::o;10251:419::-;10417:4;10455:2;10444:9;10440:18;10432:26;;10504:9;10498:4;10494:20;10490:1;10479:9;10475:17;10468:47;10532:131;10658:4;10532:131;:::i;:::-;10524:139;;10251:419;;;:::o;10676:178::-;10816:30;10812:1;10804:6;10800:14;10793:54;10676:178;:::o;10860:366::-;11002:3;11023:67;11087:2;11082:3;11023:67;:::i;:::-;11016:74;;11099:93;11188:3;11099:93;:::i;:::-;11217:2;11212:3;11208:12;11201:19;;10860:366;;;:::o;11232:419::-;11398:4;11436:2;11425:9;11421:18;11413:26;;11485:9;11479:4;11475:20;11471:1;11460:9;11456:17;11449:47;11513:131;11639:4;11513:131;:::i;:::-;11505:139;;11232:419;;;:::o;11657:178::-;11797:30;11793:1;11785:6;11781:14;11774:54;11657:178;:::o;11841:366::-;11983:3;12004:67;12068:2;12063:3;12004:67;:::i;:::-;11997:74;;12080:93;12169:3;12080:93;:::i;:::-;12198:2;12193:3;12189:12;12182:19;;11841:366;;;:::o;12213:419::-;12379:4;12417:2;12406:9;12402:18;12394:26;;12466:9;12460:4;12456:20;12452:1;12441:9;12437:17;12430:47;12494:131;12620:4;12494:131;:::i;:::-;12486:139;;12213:419;;;:::o;12638:179::-;12778:31;12774:1;12766:6;12762:14;12755:55;12638:179;:::o;12823:366::-;12965:3;12986:67;13050:2;13045:3;12986:67;:::i;:::-;12979:74;;13062:93;13151:3;13062:93;:::i;:::-;13180:2;13175:3;13171:12;13164:19;;12823:366;;;:::o;13195:419::-;13361:4;13399:2;13388:9;13384:18;13376:26;;13448:9;13442:4;13438:20;13434:1;13423:9;13419:17;13412:47;13476:131;13602:4;13476:131;:::i;:::-;13468:139;;13195:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1300600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256)": "infinite",
								"getReserves()": "infinite",
								"getShares(address)": "2917",
								"getTokens()": "infinite",
								"init(uint256,uint256)": "infinite",
								"owner()": "2626",
								"removeLiquidity(uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"token0To1(uint256)": "infinite",
								"token1To0(uint256)": "infinite",
								"totalShares()": "2470",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 180,
									"end": 4223,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 486,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 386,
									"end": 486,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 386,
									"end": 486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 486,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 386,
									"end": 486,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 386,
									"end": 486,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 386,
									"end": 486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 386,
									"end": 486,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 205,
									"end": 215,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 448,
									"end": 453,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 439,
									"end": 445,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 439,
									"end": 445,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 439,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 439,
									"end": 453,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 439,
									"end": 453,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 439,
									"end": 453,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 439,
									"end": 453,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 473,
									"end": 478,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 464,
									"end": 470,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 464,
									"end": 470,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 478,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 464,
									"end": 478,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 464,
									"end": 478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 464,
									"end": 478,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 464,
									"end": 478,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 386,
									"end": 486,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 13,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 13,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 4223,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220862114873122a9cbab9e2ff4adaae3d7ee9d2174e1a94f4578dec5692a2aca2464736f6c63430008180033",
									".code": [
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "9C8F9F23"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "9C8F9F23"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "A5843F08"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "AA6CA808"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "AD3BD45C"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "F04DA65B"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "tag",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "902F1AC"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "26EF80C9"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "3A98EF39"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "51C6590A"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 180,
											"end": 4223,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1511,
											"end": 1615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1511,
											"end": 1615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3192,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3192,
											"end": 3697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 354,
											"end": 377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 354,
											"end": 377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 1886,
											"end": 2531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1886,
											"end": 2531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 2539,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2539,
											"end": 3184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 494,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 494,
											"end": 1108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1623,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1623,
											"end": 1727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "tag",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 3705,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3705,
											"end": 4210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "tag",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 1735,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1735,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 1735,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1557,
											"end": 1561,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1567,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1588,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1588,
											"end": 1596,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1598,
											"end": 1606,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1607,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1607,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1607,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1511,
											"end": 1615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3279,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3283,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 3259,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "tag",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 3259,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3335,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3401,
											"name": "PUSH",
											"source": 10,
											"value": "3E5"
										},
										{
											"begin": 3385,
											"end": 3397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3385,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "tag",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 3385,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3378,
											"end": 3382,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 3369,
											"end": 3377,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3369,
											"end": 3377,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3369,
											"end": 3382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 3369,
											"end": 3382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3369,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 3369,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3364,
											"name": "PUSH",
											"source": 10,
											"value": "3E5"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3352,
											"end": 3360,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3351,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3339,
											"end": 3360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3339,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3360,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 3339,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3339,
											"end": 3364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "tag",
											"source": 10,
											"value": "70"
										},
										{
											"begin": 3339,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3338,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3338,
											"end": 3402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3338,
											"end": 3402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3338,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3338,
											"end": 3402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3338,
											"end": 3402,
											"name": "tag",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 3338,
											"end": 3402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3402,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3318,
											"end": 3402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3421,
											"end": 3448,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3448,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 3449,
											"end": 3459,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3473,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3421,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3421,
											"end": 3489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3421,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 3413,
											"end": 3519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 3413,
											"end": 3519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3563,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3563,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3563,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 3564,
											"end": 3574,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 3540,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3540,
											"end": 3589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 3540,
											"end": 3589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3532,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 3532,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3630,
											"end": 3638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3630,
											"end": 3654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3630,
											"end": 3654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3677,
											"end": 3689,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3673,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3665,
											"end": 3673,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 3665,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3689,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3248,
											"end": 3697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3192,
											"end": 3697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 354,
											"end": 377,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 354,
											"end": 377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1972,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1964,
											"end": 1972,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1994,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1994,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1964,
											"end": 1994,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1994,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 1994,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1989,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1981,
											"end": 1989,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1981,
											"end": 1994,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1981,
											"end": 1994,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1964,
											"end": 1994,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1964,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 1956,
											"end": 2018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1956,
											"end": 2018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2071,
											"end": 2079,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2071,
											"end": 2079,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2062,
											"end": 2070,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2049,
											"end": 2070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2049,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2049,
											"end": 2079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 2049,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2079,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2029,
											"end": 2079,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2140,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2132,
											"end": 2140,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2107,
											"end": 2118,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2107,
											"end": 2131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2107,
											"end": 2131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2131,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2107,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2107,
											"end": 2140,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2107,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2107,
											"end": 2140,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 2107,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2090,
											"end": 2140,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2168,
											"end": 2174,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2188,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2188,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 2189,
											"end": 2199,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2213,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2216,
											"end": 2228,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2161,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2161,
											"end": 2229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "tag",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 2161,
											"end": 2229,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2153,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 2153,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2285,
											"end": 2291,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2305,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2305,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2305,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 2306,
											"end": 2316,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2326,
											"end": 2330,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2333,
											"end": 2345,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 2278,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2278,
											"end": 2346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2278,
											"end": 2346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2270,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "tag",
											"source": 10,
											"value": "113"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2270,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2399,
											"end": 2411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2387,
											"end": 2395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2387,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "tag",
											"source": 10,
											"value": "114"
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2387,
											"end": 2411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2434,
											"end": 2446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2430,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2422,
											"end": 2430,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2422,
											"end": 2446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2422,
											"end": 2446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2479,
											"end": 2488,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2457,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2488,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2510,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2499,
											"end": 2510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2499,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2523,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1945,
											"end": 2531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1886,
											"end": 2531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2647,
											"end": 2657,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2658,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2636,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2622,
											"end": 2658,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 2614,
											"end": 2691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "tag",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 2614,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2746,
											"end": 2757,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2745,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2730,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2722,
											"end": 2730,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2722,
											"end": 2745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "tag",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 2722,
											"end": 2745,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2722,
											"end": 2757,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2757,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2722,
											"end": 2757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2722,
											"end": 2757,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 2722,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2757,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2702,
											"end": 2757,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2812,
											"end": 2823,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 2812,
											"end": 2823,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2811,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2796,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2788,
											"end": 2796,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2788,
											"end": 2811,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 2788,
											"end": 2811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2811,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2788,
											"end": 2811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2788,
											"end": 2823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2823,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 2788,
											"end": 2823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2788,
											"end": 2823,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 2788,
											"end": 2823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2768,
											"end": 2823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2849,
											"end": 2855,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2865,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2865,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2865,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 2866,
											"end": 2876,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2878,
											"end": 2890,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2842,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2842,
											"end": 2891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2842,
											"end": 2891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 2834,
											"end": 2921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "tag",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2834,
											"end": 2921,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2947,
											"end": 2953,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2963,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2963,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2963,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 2964,
											"end": 2974,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 2988,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 2940,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "tag",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 2940,
											"end": 2989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 2940,
											"end": 2989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2932,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "tag",
											"source": 10,
											"value": "144"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 2932,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3042,
											"end": 3054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3038,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3030,
											"end": 3038,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 3030,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3030,
											"end": 3054,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3077,
											"end": 3089,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3073,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3065,
											"end": 3073,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 3065,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3065,
											"end": 3089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3122,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3106,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3117,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 3100,
											"end": 3136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "tag",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3100,
											"end": 3136,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3162,
											"end": 3176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3158,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3147,
											"end": 3158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 3147,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3147,
											"end": 3176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2603,
											"end": 3184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2603,
											"end": 3184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 605,
											"end": 606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 593,
											"end": 601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 593,
											"end": 601,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 593,
											"end": 606,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 593,
											"end": 623,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 593,
											"end": 623,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 593,
											"end": 623,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 593,
											"end": 623,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 593,
											"end": 623,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 622,
											"end": 623,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 610,
											"end": 618,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 610,
											"end": 618,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 610,
											"end": 623,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 593,
											"end": 623,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 593,
											"end": 623,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 585,
											"end": 656,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 585,
											"end": 656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 690,
											"end": 691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 687,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 675,
											"end": 691,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 675,
											"end": 711,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 675,
											"end": 711,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 675,
											"end": 711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 675,
											"end": 711,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 675,
											"end": 711,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 711,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 695,
											"end": 707,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 695,
											"end": 711,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 675,
											"end": 711,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 675,
											"end": 711,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 667,
											"end": 745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 667,
											"end": 745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 781,
											"end": 787,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 774,
											"end": 801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 774,
											"end": 801,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 774,
											"end": 801,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 802,
											"end": 812,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 822,
											"end": 826,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 774,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 842,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 774,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 774,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 766,
											"end": 843,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 766,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 766,
											"end": 843,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 766,
											"end": 843,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 766,
											"end": 843,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 766,
											"end": 843,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 875,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 862,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 889,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 862,
											"end": 889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 890,
											"end": 900,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 910,
											"end": 914,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 917,
											"end": 929,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 862,
											"end": 930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 930,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "167"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 862,
											"end": 930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 862,
											"end": 930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 854,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 854,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 854,
											"end": 931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 854,
											"end": 931,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 854,
											"end": 931,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 854,
											"end": 931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "169"
										},
										{
											"begin": 854,
											"end": 931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 953,
											"end": 965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 950,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 942,
											"end": 965,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 942,
											"end": 965,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 942,
											"end": 965,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 942,
											"end": 965,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 987,
											"end": 999,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 976,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 976,
											"end": 999,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 976,
											"end": 999,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 976,
											"end": 999,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 976,
											"end": 999,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1057,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1044,
											"end": 1056,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1041,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1029,
											"end": 1056,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1056,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1056,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 1029,
											"end": 1056,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1029,
											"end": 1056,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 1029,
											"end": 1056,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1028,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1024,
											"end": 1057,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1057,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 1024,
											"end": 1057,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1010,
											"end": 1057,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1057,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1010,
											"end": 1057,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1089,
											"end": 1100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1089,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1074,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1085,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1086,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1100,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1100,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 1068,
											"end": 1100,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 494,
											"end": 1108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1667,
											"end": 1674,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1676,
											"end": 1683,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1712,
											"end": 1718,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1623,
											"end": 1727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3792,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3780,
											"end": 3796,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 3772,
											"end": 3820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3772,
											"end": 3820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3911,
											"end": 3914,
											"name": "PUSH",
											"source": 10,
											"value": "3E5"
										},
										{
											"begin": 3898,
											"end": 3910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3898,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3898,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3891,
											"end": 3895,
											"name": "PUSH",
											"source": 10,
											"value": "3E8"
										},
										{
											"begin": 3882,
											"end": 3890,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3882,
											"end": 3890,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3882,
											"end": 3895,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "tag",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3882,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 3882,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 3882,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3874,
											"end": 3877,
											"name": "PUSH",
											"source": 10,
											"value": "3E5"
										},
										{
											"begin": 3865,
											"end": 3873,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3865,
											"end": 3873,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3864,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3852,
											"end": 3873,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3852,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3873,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 3852,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 3852,
											"end": 3877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 3852,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 3851,
											"end": 3915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "tag",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3851,
											"end": 3915,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3915,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3831,
											"end": 3915,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3947,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3961,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 3961,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 3961,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 3962,
											"end": 3972,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 3989,
											"end": 4001,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 3934,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 3934,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "tag",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3934,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 3926,
											"end": 4032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 3926,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4076,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4053,
											"end": 4076,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4076,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 4077,
											"end": 4087,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4089,
											"end": 4101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4053,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 4053,
											"end": 4102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 4053,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 4045,
											"end": 4132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "tag",
											"source": 10,
											"value": "193"
										},
										{
											"begin": 4045,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4155,
											"end": 4167,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4143,
											"end": 4151,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 4143,
											"end": 4167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4143,
											"end": 4167,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4190,
											"end": 4202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4186,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4178,
											"end": 4186,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 4178,
											"end": 4202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4178,
											"end": 4202,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3761,
											"end": 4210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3705,
											"end": 4210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1789,
											"end": 1793,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1813,
											"end": 1823,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1806,
											"end": 1823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1200,
											"end": 1503,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 1200,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1245,
											"end": 1251,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1268,
											"end": 1269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1268,
											"end": 1273,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1294,
											"end": 1295,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1290,
											"end": 1295,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1323,
											"end": 1324,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1319,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "tag",
											"source": 10,
											"value": "214"
										},
										{
											"begin": 1319,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1319,
											"end": 1328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 1319,
											"end": 1328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1354,
											"end": 1355,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1350,
											"end": 1355,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1380,
											"end": 1381,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1418,
											"end": 1419,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1405,
											"end": 1410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 1405,
											"end": 1414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "72"
										},
										{
											"begin": 1404,
											"end": 1419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 1404,
											"end": 1419,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1419,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1400,
											"end": 1419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 1343,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1275,
											"end": 1446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1456,
											"end": 1462,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1452,
											"end": 1496,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1452,
											"end": 1496,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 1452,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 1264,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1503,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 214,
											"end": 546,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 214,
											"end": 546,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 335,
											"end": 339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 373,
											"end": 375,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 358,
											"end": 376,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 350,
											"end": 376,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 350,
											"end": 376,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 454,
											"end": 455,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 452,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 439,
											"end": 456,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 430,
											"end": 436,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 386,
											"end": 457,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 386,
											"end": 457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 386,
											"end": 457,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 386,
											"end": 457,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 535,
											"end": 537,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 524,
											"end": 533,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 520,
											"end": 538,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 511,
											"end": 517,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 467,
											"end": 539,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 467,
											"end": 539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 467,
											"end": 539,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 467,
											"end": 539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 214,
											"end": 546,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 214,
											"end": 546,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 214,
											"end": 546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 633,
											"end": 750,
											"name": "tag",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 633,
											"end": 750,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 743,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 740,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 732,
											"end": 744,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 879,
											"end": 1001,
											"name": "tag",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 879,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 952,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 970,
											"end": 975,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 952,
											"end": 976,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 952,
											"end": 976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 952,
											"end": 976,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 952,
											"end": 976,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 945,
											"end": 950,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 942,
											"end": 977,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 932,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 932,
											"end": 995,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 988,
											"end": 989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 981,
											"end": 993,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 932,
											"end": 995,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 932,
											"end": 995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 879,
											"end": 1001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 879,
											"end": 1001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1146,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 1007,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1053,
											"end": 1058,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1078,
											"end": 1098,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 1069,
											"end": 1098,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1069,
											"end": 1098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1107,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 1134,
											"end": 1139,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1107,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 1107,
											"end": 1140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1107,
											"end": 1140,
											"name": "tag",
											"source": 13,
											"value": "270"
										},
										{
											"begin": 1107,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1146,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1146,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1007,
											"end": 1146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1481,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 1152,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1262,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1257,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1239,
											"end": 1246,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1235,
											"end": 1258,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1231,
											"end": 1263,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 1228,
											"end": 1347,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1228,
											"end": 1347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1228,
											"end": 1347,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1266,
											"end": 1345,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 1266,
											"end": 1345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1266,
											"end": 1345,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 1266,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1228,
											"end": 1347,
											"name": "tag",
											"source": 13,
											"value": "272"
										},
										{
											"begin": 1228,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1387,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1447,
											"end": 1453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1436,
											"end": 1445,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1432,
											"end": 1454,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1411,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 1411,
											"end": 1464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1411,
											"end": 1464,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 1411,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1401,
											"end": 1464,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1401,
											"end": 1464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1357,
											"end": 1474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1481,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1481,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1481,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1152,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1709,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1487,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1580,
											"end": 1584,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1620,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1607,
											"end": 1616,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1621,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1621,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 1699,
											"end": 1700,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1684,
											"end": 1701,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1675,
											"end": 1681,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 1631,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1631,
											"end": 1702,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 1631,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1709,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1709,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1709,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1841,
											"name": "tag",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 1715,
											"end": 1841,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1752,
											"end": 1759,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1792,
											"end": 1834,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1835,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1835,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1770,
											"end": 1835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1841,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1841,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1841,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1715,
											"end": 1841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1943,
											"name": "tag",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 1847,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1884,
											"end": 1891,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1913,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 1931,
											"end": 1936,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "231"
										},
										{
											"begin": 1913,
											"end": 1937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1937,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 1913,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1902,
											"end": 1937,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1902,
											"end": 1937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1943,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2054,
											"end": 2059,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 2036,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 2036,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2024,
											"end": 2061,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 2067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1949,
											"end": 2067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2166,
											"end": 2170,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2204,
											"end": 2206,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2193,
											"end": 2202,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2189,
											"end": 2207,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 2285,
											"end": 2286,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2283,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2270,
											"end": 2287,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2217,
											"end": 2288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 2217,
											"end": 2288,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2073,
											"end": 2295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2369,
											"end": 2375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2383,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2414,
											"end": 2423,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2405,
											"end": 2412,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2401,
											"end": 2424,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2397,
											"end": 2429,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 2432,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 2432,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 2394,
											"end": 2513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2622,
											"end": 2629,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2613,
											"end": 2619,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2602,
											"end": 2611,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2598,
											"end": 2620,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2577,
											"end": 2630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 2577,
											"end": 2630,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2630,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2567,
											"end": 2630,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2523,
											"end": 2640,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2679,
											"end": 2681,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 2750,
											"end": 2757,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2730,
											"end": 2739,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 2705,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "tag",
											"source": 13,
											"value": "288"
										},
										{
											"begin": 2705,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2695,
											"end": 2758,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2695,
											"end": 2758,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2650,
											"end": 2768,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2775,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2301,
											"end": 2775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3113,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2781,
											"end": 3113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2902,
											"end": 2906,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2940,
											"end": 2942,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2925,
											"end": 2943,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2943,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2943,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 3021,
											"end": 3022,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3010,
											"end": 3019,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3006,
											"end": 3023,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2997,
											"end": 3003,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2953,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 3024,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 2953,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 3102,
											"end": 3104,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3091,
											"end": 3100,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3087,
											"end": 3105,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3078,
											"end": 3084,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 3034,
											"end": 3106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 3034,
											"end": 3106,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3113,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3113,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3113,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3241,
											"name": "tag",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3119,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 3210,
											"end": 3215,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "232"
										},
										{
											"begin": 3192,
											"end": 3216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3216,
											"name": "tag",
											"source": 13,
											"value": "293"
										},
										{
											"begin": 3192,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3182,
											"end": 3217,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3231,
											"end": 3232,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3228,
											"end": 3229,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3221,
											"end": 3233,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 3172,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3119,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3386,
											"name": "tag",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3247,
											"end": 3386,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3298,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3331,
											"end": 3337,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3318,
											"end": 3338,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3309,
											"end": 3338,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3309,
											"end": 3338,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3347,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 3374,
											"end": 3379,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3347,
											"end": 3380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 3347,
											"end": 3380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3347,
											"end": 3380,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 3347,
											"end": 3380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3386,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3386,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3386,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3247,
											"end": 3386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3392,
											"end": 3721,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 3392,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3502,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3497,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3479,
											"end": 3486,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3498,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3503,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3587,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 3468,
											"end": 3587,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 3506,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3468,
											"end": 3587,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 3468,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3696,
											"end": 3703,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3687,
											"end": 3693,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3672,
											"end": 3694,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "235"
										},
										{
											"begin": 3651,
											"end": 3704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "tag",
											"source": 13,
											"value": "300"
										},
										{
											"begin": 3651,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3641,
											"end": 3704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3597,
											"end": 3714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3392,
											"end": 3721,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3392,
											"end": 3721,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3392,
											"end": 3721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3392,
											"end": 3721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3392,
											"end": 3721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 3896,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 3727,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3811,
											"end": 3822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3845,
											"end": 3851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3840,
											"end": 3843,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3833,
											"end": 3852,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3885,
											"end": 3889,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3880,
											"end": 3883,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3876,
											"end": 3890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 3896,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 3896,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 3896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 3896,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 3896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 4071,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 3902,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4063,
											"name": "PUSH",
											"source": 13,
											"value": "6E6F7420746F6B656E302070726F766964656400000000000000000000000000"
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4036,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4026,
											"end": 4040,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4019,
											"end": 4064,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 4071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3902,
											"end": 4071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4443,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 4077,
											"end": 4443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4219,
											"end": 4222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4240,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4304,
											"end": 4306,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 4299,
											"end": 4302,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 4240,
											"end": 4307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4240,
											"end": 4307,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 4240,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4233,
											"end": 4307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4233,
											"end": 4307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 4405,
											"end": 4408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 4316,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4316,
											"end": 4409,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 4316,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4434,
											"end": 4436,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4429,
											"end": 4432,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4425,
											"end": 4437,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4437,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4418,
											"end": 4437,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4443,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4443,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4077,
											"end": 4443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4868,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 4449,
											"end": 4868,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4702,
											"end": 4711,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4696,
											"end": 4700,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4692,
											"end": 4712,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4688,
											"end": 4689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4677,
											"end": 4686,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4673,
											"end": 4690,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4713,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4730,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4856,
											"end": 4860,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4730,
											"end": 4861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 4730,
											"end": 4861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4730,
											"end": 4861,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 4730,
											"end": 4861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4722,
											"end": 4861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4868,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4868,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4868,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4874,
											"end": 5054,
											"name": "tag",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 4874,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4922,
											"end": 4999,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 5000,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5019,
											"end": 5023,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 5016,
											"end": 5017,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5009,
											"end": 5024,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5043,
											"end": 5047,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5040,
											"end": 5041,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5048,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5100,
											"end": 5107,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 5141,
											"end": 5142,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5123,
											"end": 5143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 5123,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5118,
											"end": 5143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5157,
											"end": 5177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 5157,
											"end": 5177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5152,
											"end": 5177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5212,
											"end": 5213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5209,
											"end": 5210,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5205,
											"end": 5214,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 5252,
											"end": 5263,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5234,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 5234,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5223,
											"end": 5264,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5223,
											"end": 5264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5413,
											"end": 5414,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5404,
											"end": 5411,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5400,
											"end": 5415,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5397,
											"end": 5398,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5416,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5374,
											"end": 5375,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5367,
											"end": 5376,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5347,
											"end": 5430,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5443,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "tag",
											"source": 13,
											"value": "314"
										},
										{
											"begin": 5443,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 5324,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5060,
											"end": 5470,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5667,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 5476,
											"end": 5667,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5519,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 5553,
											"end": 5554,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5535,
											"end": 5555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 5535,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5530,
											"end": 5555,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5530,
											"end": 5555,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5569,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5587,
											"end": 5588,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5569,
											"end": 5589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5569,
											"end": 5589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5569,
											"end": 5589,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 5569,
											"end": 5589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5589,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5564,
											"end": 5589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5613,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5609,
											"end": 5610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5598,
											"end": 5614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5633,
											"end": 5636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5630,
											"end": 5631,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5627,
											"end": 5637,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5660,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5624,
											"end": 5660,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 5640,
											"end": 5658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5640,
											"end": 5658,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5624,
											"end": 5660,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 5624,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5667,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5667,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5667,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5476,
											"end": 5667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5673,
											"end": 5853,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5673,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5721,
											"end": 5798,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5718,
											"end": 5719,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5711,
											"end": 5799,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5818,
											"end": 5822,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 5815,
											"end": 5816,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5808,
											"end": 5823,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5842,
											"end": 5846,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5839,
											"end": 5840,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5847,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5859,
											"end": 6044,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 5859,
											"end": 6044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5899,
											"end": 5900,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 5934,
											"end": 5935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5916,
											"end": 5936,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5916,
											"end": 5936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5916,
											"end": 5936,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 5916,
											"end": 5936,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5911,
											"end": 5936,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5911,
											"end": 5936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5968,
											"end": 5969,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 5950,
											"end": 5970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5970,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 5950,
											"end": 5970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 5970,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 5970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5989,
											"end": 5990,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6014,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 5979,
											"end": 6014,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 5994,
											"end": 6012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 5994,
											"end": 6012,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5979,
											"end": 6014,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 5979,
											"end": 6014,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6036,
											"end": 6037,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6033,
											"end": 6034,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6038,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 6024,
											"end": 6038,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6024,
											"end": 6038,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5859,
											"end": 6044,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5859,
											"end": 6044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5859,
											"end": 6044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5859,
											"end": 6044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5859,
											"end": 6044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6199,
											"end": 6203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6239,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6226,
											"end": 6235,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6222,
											"end": 6240,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6240,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6240,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6250,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6318,
											"end": 6319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6303,
											"end": 6320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6294,
											"end": 6300,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6250,
											"end": 6321,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6250,
											"end": 6321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6250,
											"end": 6321,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6250,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 6399,
											"end": 6401,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6388,
											"end": 6397,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6384,
											"end": 6402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6375,
											"end": 6381,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 6331,
											"end": 6403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6331,
											"end": 6403,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 6331,
											"end": 6403,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 6481,
											"end": 6483,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6470,
											"end": 6479,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6466,
											"end": 6484,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6457,
											"end": 6463,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 6413,
											"end": 6485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6413,
											"end": 6485,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 6413,
											"end": 6485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6050,
											"end": 6492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6588,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 6498,
											"end": 6588,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6532,
											"end": 6539,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6580,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6568,
											"end": 6581,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6561,
											"end": 6582,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6550,
											"end": 6582,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6550,
											"end": 6582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6588,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6588,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6588,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6498,
											"end": 6588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6710,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 6594,
											"end": 6710,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6664,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 6679,
											"end": 6684,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6664,
											"end": 6685,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 6664,
											"end": 6685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6664,
											"end": 6685,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 6664,
											"end": 6685,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6657,
											"end": 6662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6654,
											"end": 6686,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 6644,
											"end": 6704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6698,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6690,
											"end": 6702,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6644,
											"end": 6704,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 6644,
											"end": 6704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6594,
											"end": 6710,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6853,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 6716,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6770,
											"end": 6775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6807,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6808,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6808,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6786,
											"end": 6808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 6841,
											"end": 6846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 6817,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6817,
											"end": 6847,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 6817,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6853,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6853,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6853,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6716,
											"end": 6853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7204,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 6859,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6926,
											"end": 6932,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6975,
											"end": 6977,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6954,
											"end": 6961,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6950,
											"end": 6973,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 6978,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7062,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 6943,
											"end": 7062,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 6981,
											"end": 7060,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "227"
										},
										{
											"begin": 6981,
											"end": 7060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6981,
											"end": 7060,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 6981,
											"end": 7060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6943,
											"end": 7062,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 6943,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7101,
											"end": 7102,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7126,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 7179,
											"end": 7186,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7170,
											"end": 7176,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7159,
											"end": 7168,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7155,
											"end": 7177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7126,
											"end": 7187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 7126,
											"end": 7187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7126,
											"end": 7187,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 7126,
											"end": 7187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7116,
											"end": 7187,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7116,
											"end": 7187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7204,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7204,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6859,
											"end": 7204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7385,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7210,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7350,
											"end": 7377,
											"name": "PUSH",
											"source": 13,
											"value": "6661696C656420746F207472616E7366657220746F6B656E3000000000000000"
										},
										{
											"begin": 7346,
											"end": 7347,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7344,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7334,
											"end": 7348,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7327,
											"end": 7378,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7210,
											"end": 7385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7757,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 7391,
											"end": 7757,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7533,
											"end": 7536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7554,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 7618,
											"end": 7620,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 7613,
											"end": 7616,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7621,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 7554,
											"end": 7621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7554,
											"end": 7621,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 7554,
											"end": 7621,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7547,
											"end": 7621,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7547,
											"end": 7621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 7719,
											"end": 7722,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7723,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 7630,
											"end": 7723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7630,
											"end": 7723,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 7630,
											"end": 7723,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7748,
											"end": 7750,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7743,
											"end": 7746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7739,
											"end": 7751,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7751,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7732,
											"end": 7751,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7757,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7757,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7757,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7391,
											"end": 7757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 8182,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 7763,
											"end": 8182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7929,
											"end": 7933,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7967,
											"end": 7969,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7965,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7952,
											"end": 7970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7944,
											"end": 7970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7944,
											"end": 7970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8016,
											"end": 8025,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8010,
											"end": 8014,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8006,
											"end": 8026,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8002,
											"end": 8003,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7991,
											"end": 8000,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7987,
											"end": 8004,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7980,
											"end": 8027,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 8170,
											"end": 8174,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 8044,
											"end": 8175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8044,
											"end": 8175,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 8044,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8036,
											"end": 8175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8036,
											"end": 8175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 8182,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 8182,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 8182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7763,
											"end": 8182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8520,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 8188,
											"end": 8520,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8309,
											"end": 8313,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8347,
											"end": 8349,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8336,
											"end": 8345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8332,
											"end": 8350,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8324,
											"end": 8350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8428,
											"end": 8429,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8417,
											"end": 8426,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8413,
											"end": 8430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8431,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 8360,
											"end": 8431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8360,
											"end": 8431,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8360,
											"end": 8431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8498,
											"end": 8507,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8494,
											"end": 8512,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8485,
											"end": 8491,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 8441,
											"end": 8513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8441,
											"end": 8513,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 8441,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8520,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8520,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8520,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8188,
											"end": 8520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8526,
											"end": 8701,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 8526,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8666,
											"end": 8693,
											"name": "PUSH",
											"source": 13,
											"value": "6661696C656420746F207472616E7366657220746F6B656E3100000000000000"
										},
										{
											"begin": 8662,
											"end": 8663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8654,
											"end": 8660,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8650,
											"end": 8664,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8643,
											"end": 8694,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8526,
											"end": 8701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8526,
											"end": 8701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8849,
											"end": 8852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 8934,
											"end": 8936,
											"name": "PUSH",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 8929,
											"end": 8932,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 8870,
											"end": 8937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 8870,
											"end": 8937,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8863,
											"end": 8937,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8863,
											"end": 8937,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 9035,
											"end": 9038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 8946,
											"end": 9039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 8946,
											"end": 9039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9064,
											"end": 9066,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9059,
											"end": 9062,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9055,
											"end": 9067,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9048,
											"end": 9067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9048,
											"end": 9067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 9073,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8707,
											"end": 9073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9245,
											"end": 9249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9283,
											"end": 9285,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9272,
											"end": 9281,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9268,
											"end": 9286,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9260,
											"end": 9286,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9260,
											"end": 9286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9332,
											"end": 9341,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9326,
											"end": 9330,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9322,
											"end": 9342,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9318,
											"end": 9319,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9307,
											"end": 9316,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9303,
											"end": 9320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9296,
											"end": 9343,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 9486,
											"end": 9490,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 9360,
											"end": 9491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 9360,
											"end": 9491,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9352,
											"end": 9491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9352,
											"end": 9491,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9498,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9079,
											"end": 9498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9698,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 9504,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9544,
											"end": 9548,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9564,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9582,
											"end": 9583,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9564,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 9564,
											"end": 9584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9564,
											"end": 9584,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 9564,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9559,
											"end": 9584,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9559,
											"end": 9584,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 9616,
											"end": 9617,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "224"
										},
										{
											"begin": 9598,
											"end": 9618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9618,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 9598,
											"end": 9618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9593,
											"end": 9618,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9593,
											"end": 9618,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9642,
											"end": 9643,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9639,
											"end": 9640,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9635,
											"end": 9644,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9627,
											"end": 9644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9627,
											"end": 9644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9666,
											"end": 9667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9660,
											"end": 9664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9657,
											"end": 9668,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9691,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 9654,
											"end": 9691,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "239"
										},
										{
											"begin": 9671,
											"end": 9689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 9671,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9691,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 9654,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9698,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9698,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9698,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9504,
											"end": 9698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9873,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 9704,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9844,
											"end": 9865,
											"name": "PUSH",
											"source": 13,
											"value": "706F6F6C206E6F7420696E6974696C697A656400000000000000000000000000"
										},
										{
											"begin": 9840,
											"end": 9841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9832,
											"end": 9838,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9828,
											"end": 9842,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9821,
											"end": 9866,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9873,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9704,
											"end": 9873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 10245,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 9879,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10021,
											"end": 10024,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10042,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 10106,
											"end": 10108,
											"name": "PUSH",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 10101,
											"end": 10104,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10042,
											"end": 10109,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 10042,
											"end": 10109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10042,
											"end": 10109,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 10042,
											"end": 10109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10035,
											"end": 10109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10035,
											"end": 10109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 10207,
											"end": 10210,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10211,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 10118,
											"end": 10211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10118,
											"end": 10211,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 10118,
											"end": 10211,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10236,
											"end": 10238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10231,
											"end": 10234,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10227,
											"end": 10239,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10220,
											"end": 10239,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10220,
											"end": 10239,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 10245,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 10245,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 10245,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9879,
											"end": 10245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10670,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 10251,
											"end": 10670,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10417,
											"end": 10421,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10455,
											"end": 10457,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10444,
											"end": 10453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10440,
											"end": 10458,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10432,
											"end": 10458,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10432,
											"end": 10458,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10504,
											"end": 10513,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10498,
											"end": 10502,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10494,
											"end": 10514,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10490,
											"end": 10491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10479,
											"end": 10488,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10475,
											"end": 10492,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10468,
											"end": 10515,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 10658,
											"end": 10662,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 10532,
											"end": 10663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10532,
											"end": 10663,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 10532,
											"end": 10663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10663,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10524,
											"end": 10663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10670,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10670,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10670,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10251,
											"end": 10670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10854,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 10676,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10816,
											"end": 10846,
											"name": "PUSH",
											"source": 13,
											"value": "6E6F7420656E6F75676820736861726520746F20776974686472617700000000"
										},
										{
											"begin": 10812,
											"end": 10813,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10810,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10800,
											"end": 10814,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10793,
											"end": 10847,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10676,
											"end": 10854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10860,
											"end": 11226,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 10860,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11002,
											"end": 11005,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11023,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 11087,
											"end": 11089,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 11082,
											"end": 11085,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11023,
											"end": 11090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 11023,
											"end": 11090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11023,
											"end": 11090,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 11023,
											"end": 11090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11016,
											"end": 11090,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11016,
											"end": 11090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 11188,
											"end": 11191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 11099,
											"end": 11192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11099,
											"end": 11192,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 11099,
											"end": 11192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11217,
											"end": 11219,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11212,
											"end": 11215,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11208,
											"end": 11220,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11201,
											"end": 11220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11201,
											"end": 11220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10860,
											"end": 11226,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10860,
											"end": 11226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10860,
											"end": 11226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10860,
											"end": 11226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11232,
											"end": 11651,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 11232,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11398,
											"end": 11402,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11425,
											"end": 11434,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11421,
											"end": 11439,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11413,
											"end": 11439,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11413,
											"end": 11439,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11485,
											"end": 11494,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11479,
											"end": 11483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11475,
											"end": 11495,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 11471,
											"end": 11472,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11460,
											"end": 11469,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11456,
											"end": 11473,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11449,
											"end": 11496,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11513,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 11639,
											"end": 11643,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11513,
											"end": 11644,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 11513,
											"end": 11644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11513,
											"end": 11644,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 11513,
											"end": 11644,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11644,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11505,
											"end": 11644,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11232,
											"end": 11651,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11232,
											"end": 11651,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11232,
											"end": 11651,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11232,
											"end": 11651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11657,
											"end": 11835,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 11657,
											"end": 11835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11797,
											"end": 11827,
											"name": "PUSH",
											"source": 13,
											"value": "696E6974202D20616C726561647920686173206C697175696469747900000000"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11781,
											"end": 11795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11774,
											"end": 11828,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11657,
											"end": 11835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11657,
											"end": 11835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12207,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 11841,
											"end": 12207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11983,
											"end": 11986,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12004,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 12068,
											"end": 12070,
											"name": "PUSH",
											"source": 13,
											"value": "1C"
										},
										{
											"begin": 12063,
											"end": 12066,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 12004,
											"end": 12071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12004,
											"end": 12071,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 12004,
											"end": 12071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11997,
											"end": 12071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11997,
											"end": 12071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 12169,
											"end": 12172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 12080,
											"end": 12173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12080,
											"end": 12173,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 12080,
											"end": 12173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12198,
											"end": 12200,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12193,
											"end": 12196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12189,
											"end": 12201,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12182,
											"end": 12201,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12182,
											"end": 12201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12207,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12207,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12207,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11841,
											"end": 12207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12213,
											"end": 12632,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 12213,
											"end": 12632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12379,
											"end": 12383,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12417,
											"end": 12419,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12406,
											"end": 12415,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12402,
											"end": 12420,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12394,
											"end": 12420,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12394,
											"end": 12420,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12466,
											"end": 12475,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12456,
											"end": 12476,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12452,
											"end": 12453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12441,
											"end": 12450,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12437,
											"end": 12454,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12430,
											"end": 12477,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 12620,
											"end": 12624,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 12494,
											"end": 12625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12494,
											"end": 12625,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 12494,
											"end": 12625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12625,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12486,
											"end": 12625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12213,
											"end": 12632,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12213,
											"end": 12632,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12213,
											"end": 12632,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12213,
											"end": 12632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12638,
											"end": 12817,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 12638,
											"end": 12817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12778,
											"end": 12809,
											"name": "PUSH",
											"source": 13,
											"value": "696E6974202D20626F746820746F6B656E7320617265206E6565646564000000"
										},
										{
											"begin": 12774,
											"end": 12775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12766,
											"end": 12772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12762,
											"end": 12776,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12755,
											"end": 12810,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12638,
											"end": 12817,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12638,
											"end": 12817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 13189,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 12823,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12965,
											"end": 12968,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12986,
											"end": 13053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 13050,
											"end": 13052,
											"name": "PUSH",
											"source": 13,
											"value": "1D"
										},
										{
											"begin": 13045,
											"end": 13048,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 13053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 12986,
											"end": 13053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12986,
											"end": 13053,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 12986,
											"end": 13053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 13053,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12979,
											"end": 13053,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 13151,
											"end": 13154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 13062,
											"end": 13155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13062,
											"end": 13155,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 13062,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13180,
											"end": 13182,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13175,
											"end": 13178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13171,
											"end": 13183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13164,
											"end": 13183,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13164,
											"end": 13183,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 13189,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 13189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 13189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12823,
											"end": 13189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13614,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 13195,
											"end": 13614,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13361,
											"end": 13365,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13399,
											"end": 13401,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 13388,
											"end": 13397,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13384,
											"end": 13402,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13376,
											"end": 13402,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13448,
											"end": 13457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13442,
											"end": 13446,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13438,
											"end": 13458,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 13434,
											"end": 13435,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13423,
											"end": 13432,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13419,
											"end": 13436,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13412,
											"end": 13459,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 13476,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 13602,
											"end": 13606,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13476,
											"end": 13607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 13476,
											"end": 13607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13476,
											"end": 13607,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 13476,
											"end": 13607,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13607,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13468,
											"end": 13607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13614,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13614,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13614,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13195,
											"end": 13614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"assignment3/Swap.sol",
								"assignment3/interfaces/ISwap.sol",
								"assignment3/sAsset.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256)": "51c6590a",
							"getReserves()": "0902f1ac",
							"getShares(address)": "f04da65b",
							"getTokens()": "aa6ca808",
							"init(uint256,uint256)": "a5843f08",
							"owner()": "8da5cb5b",
							"removeLiquidity(uint256)": "9c8f9f23",
							"renounceOwnership()": "715018a6",
							"token0To1(uint256)": "26ef80c9",
							"token1To0(uint256)": "ad3bd45c",
							"totalShares()": "3a98ef39",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"addr1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"LP\",\"type\":\"address\"}],\"name\":\"getShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"}],\"name\":\"token0To1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"name\":\"token1To0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"assignment3/Swap.sol\":\"Swap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"assignment3/Swap.sol\":{\"keccak256\":\"0xe152169b6cdd1494f71a736a8593f62a471dafb164e4dbdd2a08ab09c788d306\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c82972301c20866e5274f8adb80ee8950beb516b96af267a490bb0aebb5b01ee\",\"dweb:/ipfs/QmUzXRnFrEDZgn4JUK6Y5AGdnnPzaAZgyPUTWfeqneYpZa\"]},\"assignment3/interfaces/ISwap.sol\":{\"keccak256\":\"0xe9b0832b831b53b2de2446360831b16f84c149aa13b5edf76f8e7abb9c020c23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10229b84356da17a26fcdc5dddf3fbec5177d236d338a0dd895a09f0148a20bf\",\"dweb:/ipfs/QmUL9KX799k2PYH4aGe8pXQ1Q6QB3Dm2GTxbcHLpxec4xU\"]},\"assignment3/sAsset.sol\":{\"keccak256\":\"0x3e5e0163bcba4c9da5b8faaf8ff82e54502f0a582acd3f77c9b18174715da8ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10a76734a93a62837cd177ff1a969d2977c53aadd992e55f09a90fed87204c3d\",\"dweb:/ipfs/QmZu42zyucwRt1sdCwQArjHH7oBNuKUzcQxydCfwZUqBXW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 387,
								"contract": "assignment3/Swap.sol:Swap",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1361,
								"contract": "assignment3/Swap.sol:Swap",
								"label": "token0",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1363,
								"contract": "assignment3/Swap.sol:Swap",
								"label": "token1",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 1365,
								"contract": "assignment3/Swap.sol:Swap",
								"label": "reserve0",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1367,
								"contract": "assignment3/Swap.sol:Swap",
								"label": "reserve1",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1371,
								"contract": "assignment3/Swap.sol:Swap",
								"label": "shares",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1373,
								"contract": "assignment3/Swap.sol:Swap",
								"label": "totalShares",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"assignment3/interfaces/ISwap.sol": {
				"ISwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								}
							],
							"name": "init",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "withdrawShares",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token0Amount",
									"type": "uint256"
								}
							],
							"name": "token0To1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "token1Amount",
									"type": "uint256"
								}
							],
							"name": "token1To0",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addLiquidity(uint256)": "51c6590a",
							"init(uint256,uint256)": "a5843f08",
							"removeLiquidity(uint256)": "9c8f9f23",
							"token0To1(uint256)": "26ef80c9",
							"token1To0(uint256)": "ad3bd45c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawShares\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token0Amount\",\"type\":\"uint256\"}],\"name\":\"token0To1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"token1Amount\",\"type\":\"uint256\"}],\"name\":\"token1To0\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"assignment3/interfaces/ISwap.sol\":\"ISwap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"assignment3/interfaces/ISwap.sol\":{\"keccak256\":\"0xe9b0832b831b53b2de2446360831b16f84c149aa13b5edf76f8e7abb9c020c23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10229b84356da17a26fcdc5dddf3fbec5177d236d338a0dd895a09f0148a20bf\",\"dweb:/ipfs/QmUL9KX799k2PYH4aGe8pXQ1Q6QB3Dm2GTxbcHLpxec4xU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"assignment3/sAsset.sol": {
				"sAsset": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor that gives msg.sender all of existing tokens."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"assignment3/sAsset.sol\":188:1458  contract sAsset is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"assignment3/sAsset.sol\":532:919  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"assignment3/sAsset.sol\":649:653  name */\n  dup3\n    /* \"assignment3/sAsset.sol\":655:661  symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"assignment3/sAsset.sol\":674:736  _mint(msg.sender, initialSupply * (10 ** uint256(decimals()))) */\n  tag_11\n    /* \"assignment3/sAsset.sol\":680:690  msg.sender */\n  caller\n    /* \"assignment3/sAsset.sol\":723:733  decimals() */\n  tag_12\n    /* \"assignment3/sAsset.sol\":723:731  decimals */\n  shl(0x20, tag_13)\n    /* \"assignment3/sAsset.sol\":723:733  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"assignment3/sAsset.sol\":715:734  uint256(decimals()) */\n  0xff\n  and\n    /* \"assignment3/sAsset.sol\":709:711  10 */\n  0x0a\n    /* \"assignment3/sAsset.sol\":709:734  10 ** uint256(decimals()) */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"assignment3/sAsset.sol\":692:705  initialSupply */\n  dup4\n    /* \"assignment3/sAsset.sol\":692:735  initialSupply * (10 ** uint256(decimals())) */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"assignment3/sAsset.sol\":674:679  _mint */\n  shl(0x20, tag_18)\n    /* \"assignment3/sAsset.sol\":674:736  _mint(msg.sender, initialSupply * (10 ** uint256(decimals()))) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"assignment3/sAsset.sol\":869:911  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"assignment3/sAsset.sol\":880:898  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"assignment3/sAsset.sol\":900:910  msg.sender */\n  caller\n    /* \"assignment3/sAsset.sol\":869:879  _grantRole */\n  shl(0x20, tag_20)\n    /* \"assignment3/sAsset.sol\":869:911  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n  pop\n    /* \"assignment3/sAsset.sol\":532:919  constructor(... */\n  pop\n  pop\n  pop\n    /* \"assignment3/sAsset.sol\":188:1458  contract sAsset is ERC20, AccessControl {... */\n  jump(tag_21)\n    /* \"assignment3/sAsset.sol\":1363:1455  function decimals() public view virtual override returns (uint8) {... */\ntag_13:\n    /* \"assignment3/sAsset.sol\":1421:1426  uint8 */\n  0x00\n    /* \"assignment3/sAsset.sol\":1446:1447  8 */\n  0x08\n    /* \"assignment3/sAsset.sol\":1439:1447  return 8 */\n  swap1\n  pop\n    /* \"assignment3/sAsset.sol\":1363:1455  function decimals() public view virtual override returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_27\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_28)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  tag_30\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n  shl(0x20, tag_31)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_33\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n  shl(0x20, tag_34)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  swap1\n  pop\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_29:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_40)\ntag_37:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_40:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_45)\ntag_44:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_34:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_50:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_51:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_52:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_53:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_54:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_55:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_56:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_57:\n    /* \"#utility.yul\":957:984   */\n  tag_101\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_55\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_103\n  tag_56\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1030:1118   */\ntag_102:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_58:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_105\n  tag_50\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_106\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_57\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_59:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_109\n  tag_56\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1434:1490   */\ntag_108:\n    /* \"#utility.yul\":1508:1537   */\n  tag_110\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_55\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_60:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_112:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_61:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_116\n    /* \"#utility.yul\":1992:2041   */\n  tag_117\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_59\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1976:2042   */\n  tag_58\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_119\n  tag_54\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2117:2229   */\ntag_118:\n    /* \"#utility.yul\":2238:2290   */\n  tag_120\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_60\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_62:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_123\n  tag_53\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2399:2521   */\ntag_122:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_124\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_61\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_63:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_64:\n    /* \"#utility.yul\":2833:2857   */\n  tag_127\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_63\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_128:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_65:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_130\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_64\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4046   */\ntag_3:\n    /* \"#utility.yul\":3145:3151   */\n  0x00\n    /* \"#utility.yul\":3153:3159   */\n  dup1\n    /* \"#utility.yul\":3161:3167   */\n  0x00\n    /* \"#utility.yul\":3210:3212   */\n  0x60\n    /* \"#utility.yul\":3198:3207   */\n  dup5\n    /* \"#utility.yul\":3189:3196   */\n  dup7\n    /* \"#utility.yul\":3185:3208   */\n  sub\n    /* \"#utility.yul\":3181:3213   */\n  slt\n    /* \"#utility.yul\":3178:3297   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":3216:3295   */\n  tag_133\n  tag_51\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3178:3297   */\ntag_132:\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3346:3355   */\n  dup5\n    /* \"#utility.yul\":3342:3359   */\n  add\n    /* \"#utility.yul\":3336:3360   */\n  mload\n    /* \"#utility.yul\":3387:3405   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3379:3385   */\n  dup2\n    /* \"#utility.yul\":3376:3406   */\n  gt\n    /* \"#utility.yul\":3373:3490   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":3409:3488   */\n  tag_135\n  tag_52\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3373:3490   */\ntag_134:\n    /* \"#utility.yul\":3514:3588   */\n  tag_136\n    /* \"#utility.yul\":3580:3587   */\n  dup7\n    /* \"#utility.yul\":3571:3577   */\n  dup3\n    /* \"#utility.yul\":3560:3569   */\n  dup8\n    /* \"#utility.yul\":3556:3578   */\n  add\n    /* \"#utility.yul\":3514:3588   */\n  tag_62\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3504:3588   */\n  swap4\n  pop\n    /* \"#utility.yul\":3307:3598   */\n  pop\n    /* \"#utility.yul\":3658:3660   */\n  0x20\n    /* \"#utility.yul\":3647:3656   */\n  dup5\n    /* \"#utility.yul\":3643:3661   */\n  add\n    /* \"#utility.yul\":3637:3662   */\n  mload\n    /* \"#utility.yul\":3689:3707   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3681:3687   */\n  dup2\n    /* \"#utility.yul\":3678:3708   */\n  gt\n    /* \"#utility.yul\":3675:3792   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":3711:3790   */\n  tag_138\n  tag_52\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3675:3792   */\ntag_137:\n    /* \"#utility.yul\":3816:3890   */\n  tag_139\n    /* \"#utility.yul\":3882:3889   */\n  dup7\n    /* \"#utility.yul\":3873:3879   */\n  dup3\n    /* \"#utility.yul\":3862:3871   */\n  dup8\n    /* \"#utility.yul\":3858:3880   */\n  add\n    /* \"#utility.yul\":3816:3890   */\n  tag_62\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3806:3890   */\n  swap3\n  pop\n    /* \"#utility.yul\":3608:3900   */\n  pop\n    /* \"#utility.yul\":3939:3941   */\n  0x40\n    /* \"#utility.yul\":3965:4029   */\n  tag_140\n    /* \"#utility.yul\":4021:4028   */\n  dup7\n    /* \"#utility.yul\":4012:4018   */\n  dup3\n    /* \"#utility.yul\":4001:4010   */\n  dup8\n    /* \"#utility.yul\":3997:4019   */\n  add\n    /* \"#utility.yul\":3965:4029   */\n  tag_65\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3955:4029   */\n  swap2\n  pop\n    /* \"#utility.yul\":3910:4039   */\n  pop\n    /* \"#utility.yul\":3037:4046   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4052:4151   */\ntag_66:\n    /* \"#utility.yul\":4104:4110   */\n  0x00\n    /* \"#utility.yul\":4138:4143   */\n  dup2\n    /* \"#utility.yul\":4132:4144   */\n  mload\n    /* \"#utility.yul\":4122:4144   */\n  swap1\n  pop\n    /* \"#utility.yul\":4052:4151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4157:4337   */\ntag_67:\n    /* \"#utility.yul\":4205:4282   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4202:4203   */\n  0x00\n    /* \"#utility.yul\":4195:4283   */\n  mstore\n    /* \"#utility.yul\":4302:4306   */\n  0x22\n    /* \"#utility.yul\":4299:4300   */\n  0x04\n    /* \"#utility.yul\":4292:4307   */\n  mstore\n    /* \"#utility.yul\":4326:4330   */\n  0x24\n    /* \"#utility.yul\":4323:4324   */\n  0x00\n    /* \"#utility.yul\":4316:4331   */\n  revert\n    /* \"#utility.yul\":4343:4663   */\ntag_68:\n    /* \"#utility.yul\":4387:4393   */\n  0x00\n    /* \"#utility.yul\":4424:4425   */\n  0x02\n    /* \"#utility.yul\":4418:4422   */\n  dup3\n    /* \"#utility.yul\":4414:4426   */\n  div\n    /* \"#utility.yul\":4404:4426   */\n  swap1\n  pop\n    /* \"#utility.yul\":4471:4472   */\n  0x01\n    /* \"#utility.yul\":4465:4469   */\n  dup3\n    /* \"#utility.yul\":4461:4473   */\n  and\n    /* \"#utility.yul\":4492:4510   */\n  dup1\n    /* \"#utility.yul\":4482:4563   */\n  tag_144\n  jumpi\n    /* \"#utility.yul\":4548:4552   */\n  0x7f\n    /* \"#utility.yul\":4540:4546   */\n  dup3\n    /* \"#utility.yul\":4536:4553   */\n  and\n    /* \"#utility.yul\":4526:4553   */\n  swap2\n  pop\n    /* \"#utility.yul\":4482:4563   */\ntag_144:\n    /* \"#utility.yul\":4610:4612   */\n  0x20\n    /* \"#utility.yul\":4602:4608   */\n  dup3\n    /* \"#utility.yul\":4599:4613   */\n  lt\n    /* \"#utility.yul\":4579:4597   */\n  dup2\n    /* \"#utility.yul\":4576:4614   */\n  sub\n    /* \"#utility.yul\":4573:4657   */\n  tag_145\n  jumpi\n    /* \"#utility.yul\":4629:4647   */\n  tag_146\n  tag_67\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4573:4657   */\ntag_145:\n    /* \"#utility.yul\":4394:4663   */\n  pop\n    /* \"#utility.yul\":4343:4663   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4669:4810   */\ntag_69:\n    /* \"#utility.yul\":4718:4722   */\n  0x00\n    /* \"#utility.yul\":4741:4744   */\n  dup2\n    /* \"#utility.yul\":4733:4744   */\n  swap1\n  pop\n    /* \"#utility.yul\":4764:4767   */\n  dup2\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4768   */\n  mstore\n    /* \"#utility.yul\":4798:4802   */\n  0x20\n    /* \"#utility.yul\":4795:4796   */\n  0x00\n    /* \"#utility.yul\":4785:4803   */\n  keccak256\n    /* \"#utility.yul\":4777:4803   */\n  swap1\n  pop\n    /* \"#utility.yul\":4669:4810   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4816:4909   */\ntag_70:\n    /* \"#utility.yul\":4853:4859   */\n  0x00\n    /* \"#utility.yul\":4900:4902   */\n  0x20\n    /* \"#utility.yul\":4895:4897   */\n  0x1f\n    /* \"#utility.yul\":4888:4893   */\n  dup4\n    /* \"#utility.yul\":4884:4898   */\n  add\n    /* \"#utility.yul\":4880:4903   */\n  div\n    /* \"#utility.yul\":4870:4903   */\n  swap1\n  pop\n    /* \"#utility.yul\":4816:4909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4915:5022   */\ntag_71:\n    /* \"#utility.yul\":4959:4967   */\n  0x00\n    /* \"#utility.yul\":5009:5014   */\n  dup3\n    /* \"#utility.yul\":5003:5007   */\n  dup3\n    /* \"#utility.yul\":4999:5015   */\n  shl\n    /* \"#utility.yul\":4978:5015   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:5022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:5421   */\ntag_72:\n    /* \"#utility.yul\":5097:5103   */\n  0x00\n    /* \"#utility.yul\":5147:5148   */\n  0x08\n    /* \"#utility.yul\":5135:5145   */\n  dup4\n    /* \"#utility.yul\":5131:5149   */\n  mul\n    /* \"#utility.yul\":5170:5267   */\n  tag_151\n    /* \"#utility.yul\":5200:5266   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5189:5198   */\n  dup3\n    /* \"#utility.yul\":5170:5267   */\n  tag_71\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5288:5327   */\n  tag_152\n    /* \"#utility.yul\":5318:5326   */\n  dup7\n    /* \"#utility.yul\":5307:5316   */\n  dup4\n    /* \"#utility.yul\":5288:5327   */\n  tag_71\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5276:5327   */\n  swap6\n  pop\n    /* \"#utility.yul\":5360:5364   */\n  dup1\n    /* \"#utility.yul\":5356:5365   */\n  not\n    /* \"#utility.yul\":5349:5354   */\n  dup5\n    /* \"#utility.yul\":5345:5366   */\n  and\n    /* \"#utility.yul\":5336:5366   */\n  swap4\n  pop\n    /* \"#utility.yul\":5409:5413   */\n  dup1\n    /* \"#utility.yul\":5399:5407   */\n  dup7\n    /* \"#utility.yul\":5395:5414   */\n  and\n    /* \"#utility.yul\":5388:5393   */\n  dup5\n    /* \"#utility.yul\":5385:5415   */\n  or\n    /* \"#utility.yul\":5375:5415   */\n  swap3\n  pop\n    /* \"#utility.yul\":5104:5421   */\n  pop\n  pop\n    /* \"#utility.yul\":5028:5421   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5427:5487   */\ntag_73:\n    /* \"#utility.yul\":5455:5458   */\n  0x00\n    /* \"#utility.yul\":5476:5481   */\n  dup2\n    /* \"#utility.yul\":5469:5481   */\n  swap1\n  pop\n    /* \"#utility.yul\":5427:5487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5493:5635   */\ntag_74:\n    /* \"#utility.yul\":5543:5552   */\n  0x00\n    /* \"#utility.yul\":5576:5629   */\n  tag_155\n    /* \"#utility.yul\":5594:5628   */\n  tag_156\n    /* \"#utility.yul\":5603:5627   */\n  tag_157\n    /* \"#utility.yul\":5621:5626   */\n  dup5\n    /* \"#utility.yul\":5603:5627   */\n  tag_63\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5594:5628   */\n  tag_73\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5576:5629   */\n  tag_63\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5563:5629   */\n  swap1\n  pop\n    /* \"#utility.yul\":5493:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5716   */\ntag_75:\n    /* \"#utility.yul\":5684:5687   */\n  0x00\n    /* \"#utility.yul\":5705:5710   */\n  dup2\n    /* \"#utility.yul\":5698:5710   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5722:5991   */\ntag_76:\n    /* \"#utility.yul\":5832:5871   */\n  tag_160\n    /* \"#utility.yul\":5863:5870   */\n  dup4\n    /* \"#utility.yul\":5832:5871   */\n  tag_74\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5893:5984   */\n  tag_161\n    /* \"#utility.yul\":5942:5983   */\n  tag_162\n    /* \"#utility.yul\":5966:5982   */\n  dup3\n    /* \"#utility.yul\":5942:5983   */\n  tag_75\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5934:5940   */\n  dup5\n    /* \"#utility.yul\":5927:5931   */\n  dup5\n    /* \"#utility.yul\":5921:5932   */\n  sload\n    /* \"#utility.yul\":5893:5984   */\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5887:5891   */\n  dup3\n    /* \"#utility.yul\":5880:5985   */\n  sstore\n    /* \"#utility.yul\":5798:5991   */\n  pop\n    /* \"#utility.yul\":5722:5991   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5997:6070   */\ntag_77:\n    /* \"#utility.yul\":6042:6045   */\n  0x00\n    /* \"#utility.yul\":5997:6070   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6076:6265   */\ntag_78:\n    /* \"#utility.yul\":6153:6185   */\n  tag_165\n  tag_77\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6194:6259   */\n  tag_166\n    /* \"#utility.yul\":6252:6258   */\n  dup2\n    /* \"#utility.yul\":6244:6250   */\n  dup5\n    /* \"#utility.yul\":6238:6242   */\n  dup5\n    /* \"#utility.yul\":6194:6259   */\n  tag_76\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6129:6265   */\n  pop\n    /* \"#utility.yul\":6076:6265   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6271:6457   */\ntag_79:\n    /* \"#utility.yul\":6331:6451   */\ntag_168:\n    /* \"#utility.yul\":6348:6351   */\n  dup2\n    /* \"#utility.yul\":6341:6346   */\n  dup2\n    /* \"#utility.yul\":6338:6352   */\n  lt\n    /* \"#utility.yul\":6331:6451   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":6402:6441   */\n  tag_171\n    /* \"#utility.yul\":6439:6440   */\n  0x00\n    /* \"#utility.yul\":6432:6437   */\n  dup3\n    /* \"#utility.yul\":6402:6441   */\n  tag_78\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6375:6376   */\n  0x01\n    /* \"#utility.yul\":6368:6373   */\n  dup2\n    /* \"#utility.yul\":6364:6377   */\n  add\n    /* \"#utility.yul\":6355:6377   */\n  swap1\n  pop\n    /* \"#utility.yul\":6331:6451   */\n  jump(tag_168)\ntag_170:\n    /* \"#utility.yul\":6271:6457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6463:7006   */\ntag_80:\n    /* \"#utility.yul\":6564:6566   */\n  0x1f\n    /* \"#utility.yul\":6559:6562   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  gt\n    /* \"#utility.yul\":6553:6999   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6598:6636   */\n  tag_174\n    /* \"#utility.yul\":6630:6635   */\n  dup2\n    /* \"#utility.yul\":6598:6636   */\n  tag_69\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6682:6711   */\n  tag_175\n    /* \"#utility.yul\":6700:6710   */\n  dup5\n    /* \"#utility.yul\":6682:6711   */\n  tag_70\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6672:6680   */\n  dup2\n    /* \"#utility.yul\":6668:6712   */\n  add\n    /* \"#utility.yul\":6865:6867   */\n  0x20\n    /* \"#utility.yul\":6853:6863   */\n  dup6\n    /* \"#utility.yul\":6850:6868   */\n  lt\n    /* \"#utility.yul\":6847:6896   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":6886:6894   */\n  dup2\n    /* \"#utility.yul\":6871:6894   */\n  swap1\n  pop\n    /* \"#utility.yul\":6847:6896   */\ntag_176:\n    /* \"#utility.yul\":6909:6989   */\n  tag_177\n    /* \"#utility.yul\":6965:6987   */\n  tag_178\n    /* \"#utility.yul\":6983:6986   */\n  dup6\n    /* \"#utility.yul\":6965:6987   */\n  tag_70\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6955:6963   */\n  dup4\n    /* \"#utility.yul\":6951:6988   */\n  add\n    /* \"#utility.yul\":6938:6949   */\n  dup3\n    /* \"#utility.yul\":6909:6989   */\n  tag_79\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6568:6999   */\n  pop\n  pop\n    /* \"#utility.yul\":6553:6999   */\ntag_173:\n    /* \"#utility.yul\":6463:7006   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7012:7129   */\ntag_81:\n    /* \"#utility.yul\":7066:7074   */\n  0x00\n    /* \"#utility.yul\":7116:7121   */\n  dup3\n    /* \"#utility.yul\":7110:7114   */\n  dup3\n    /* \"#utility.yul\":7106:7122   */\n  shr\n    /* \"#utility.yul\":7085:7122   */\n  swap1\n  pop\n    /* \"#utility.yul\":7012:7129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7135:7304   */\ntag_82:\n    /* \"#utility.yul\":7179:7185   */\n  0x00\n    /* \"#utility.yul\":7212:7263   */\n  tag_181\n    /* \"#utility.yul\":7260:7261   */\n  0x00\n    /* \"#utility.yul\":7256:7262   */\n  not\n    /* \"#utility.yul\":7248:7253   */\n  dup5\n    /* \"#utility.yul\":7245:7246   */\n  0x08\n    /* \"#utility.yul\":7241:7254   */\n  mul\n    /* \"#utility.yul\":7212:7263   */\n  tag_81\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7208:7264   */\n  not\n    /* \"#utility.yul\":7293:7297   */\n  dup1\n    /* \"#utility.yul\":7287:7291   */\n  dup4\n    /* \"#utility.yul\":7283:7298   */\n  and\n    /* \"#utility.yul\":7273:7298   */\n  swap2\n  pop\n    /* \"#utility.yul\":7186:7304   */\n  pop\n    /* \"#utility.yul\":7135:7304   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7309:7604   */\ntag_83:\n    /* \"#utility.yul\":7385:7389   */\n  0x00\n    /* \"#utility.yul\":7531:7560   */\n  tag_183\n    /* \"#utility.yul\":7556:7559   */\n  dup4\n    /* \"#utility.yul\":7550:7554   */\n  dup4\n    /* \"#utility.yul\":7531:7560   */\n  tag_82\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7523:7560   */\n  swap2\n  pop\n    /* \"#utility.yul\":7593:7596   */\n  dup3\n    /* \"#utility.yul\":7590:7591   */\n  0x02\n    /* \"#utility.yul\":7586:7597   */\n  mul\n    /* \"#utility.yul\":7580:7584   */\n  dup3\n    /* \"#utility.yul\":7577:7598   */\n  or\n    /* \"#utility.yul\":7569:7598   */\n  swap1\n  pop\n    /* \"#utility.yul\":7309:7604   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:9004   */\ntag_8:\n    /* \"#utility.yul\":7726:7763   */\n  tag_185\n    /* \"#utility.yul\":7759:7762   */\n  dup3\n    /* \"#utility.yul\":7726:7763   */\n  tag_66\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7828:7846   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7820:7826   */\n  dup2\n    /* \"#utility.yul\":7817:7847   */\n  gt\n    /* \"#utility.yul\":7814:7870   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7850:7868   */\n  tag_187\n  tag_56\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7814:7870   */\ntag_186:\n    /* \"#utility.yul\":7894:7932   */\n  tag_188\n    /* \"#utility.yul\":7926:7930   */\n  dup3\n    /* \"#utility.yul\":7920:7931   */\n  sload\n    /* \"#utility.yul\":7894:7932   */\n  tag_68\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7979:8046   */\n  tag_189\n    /* \"#utility.yul\":8039:8045   */\n  dup3\n    /* \"#utility.yul\":8031:8037   */\n  dup3\n    /* \"#utility.yul\":8025:8029   */\n  dup6\n    /* \"#utility.yul\":7979:8046   */\n  tag_80\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8073:8074   */\n  0x00\n    /* \"#utility.yul\":8097:8101   */\n  0x20\n    /* \"#utility.yul\":8084:8101   */\n  swap1\n  pop\n    /* \"#utility.yul\":8129:8131   */\n  0x1f\n    /* \"#utility.yul\":8121:8127   */\n  dup4\n    /* \"#utility.yul\":8118:8132   */\n  gt\n    /* \"#utility.yul\":8146:8147   */\n  0x01\n    /* \"#utility.yul\":8141:8759   */\n  dup2\n  eq\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8803:8804   */\n  0x00\n    /* \"#utility.yul\":8820:8826   */\n  dup5\n    /* \"#utility.yul\":8817:8894   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":8869:8878   */\n  dup3\n    /* \"#utility.yul\":8864:8867   */\n  dup8\n    /* \"#utility.yul\":8860:8879   */\n  add\n    /* \"#utility.yul\":8854:8880   */\n  mload\n    /* \"#utility.yul\":8845:8880   */\n  swap1\n  pop\n    /* \"#utility.yul\":8817:8894   */\ntag_192:\n    /* \"#utility.yul\":8920:8987   */\n  tag_193\n    /* \"#utility.yul\":8980:8986   */\n  dup6\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8920:8987   */\n  tag_83\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8914:8918   */\n  dup7\n    /* \"#utility.yul\":8907:8988   */\n  sstore\n    /* \"#utility.yul\":8776:8998   */\n  pop\n    /* \"#utility.yul\":8111:8998   */\n  jump(tag_190)\n    /* \"#utility.yul\":8141:8759   */\ntag_191:\n    /* \"#utility.yul\":8193:8197   */\n  0x1f\n    /* \"#utility.yul\":8189:8198   */\n  not\n    /* \"#utility.yul\":8181:8187   */\n  dup5\n    /* \"#utility.yul\":8177:8199   */\n  and\n    /* \"#utility.yul\":8227:8264   */\n  tag_194\n    /* \"#utility.yul\":8259:8263   */\n  dup7\n    /* \"#utility.yul\":8227:8264   */\n  tag_69\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8286:8287   */\n  0x00\n    /* \"#utility.yul\":8300:8508   */\ntag_195:\n    /* \"#utility.yul\":8314:8321   */\n  dup3\n    /* \"#utility.yul\":8311:8312   */\n  dup2\n    /* \"#utility.yul\":8308:8322   */\n  lt\n    /* \"#utility.yul\":8300:8508   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":8393:8402   */\n  dup5\n    /* \"#utility.yul\":8388:8391   */\n  dup10\n    /* \"#utility.yul\":8384:8403   */\n  add\n    /* \"#utility.yul\":8378:8404   */\n  mload\n    /* \"#utility.yul\":8370:8376   */\n  dup3\n    /* \"#utility.yul\":8363:8405   */\n  sstore\n    /* \"#utility.yul\":8444:8445   */\n  0x01\n    /* \"#utility.yul\":8436:8442   */\n  dup3\n    /* \"#utility.yul\":8432:8446   */\n  add\n    /* \"#utility.yul\":8422:8446   */\n  swap2\n  pop\n    /* \"#utility.yul\":8491:8493   */\n  0x20\n    /* \"#utility.yul\":8480:8489   */\n  dup6\n    /* \"#utility.yul\":8476:8494   */\n  add\n    /* \"#utility.yul\":8463:8494   */\n  swap5\n  pop\n    /* \"#utility.yul\":8337:8341   */\n  0x20\n    /* \"#utility.yul\":8334:8335   */\n  dup2\n    /* \"#utility.yul\":8330:8342   */\n  add\n    /* \"#utility.yul\":8325:8342   */\n  swap1\n  pop\n    /* \"#utility.yul\":8300:8508   */\n  jump(tag_195)\ntag_197:\n    /* \"#utility.yul\":8536:8542   */\n  dup7\n    /* \"#utility.yul\":8527:8534   */\n  dup4\n    /* \"#utility.yul\":8524:8543   */\n  lt\n    /* \"#utility.yul\":8521:8700   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":8594:8603   */\n  dup5\n    /* \"#utility.yul\":8589:8592   */\n  dup10\n    /* \"#utility.yul\":8585:8604   */\n  add\n    /* \"#utility.yul\":8579:8605   */\n  mload\n    /* \"#utility.yul\":8637:8685   */\n  tag_199\n    /* \"#utility.yul\":8679:8683   */\n  0x1f\n    /* \"#utility.yul\":8671:8677   */\n  dup10\n    /* \"#utility.yul\":8667:8684   */\n  and\n    /* \"#utility.yul\":8656:8665   */\n  dup3\n    /* \"#utility.yul\":8637:8685   */\n  tag_82\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8629:8635   */\n  dup4\n    /* \"#utility.yul\":8622:8686   */\n  sstore\n    /* \"#utility.yul\":8544:8700   */\n  pop\n    /* \"#utility.yul\":8521:8700   */\ntag_198:\n    /* \"#utility.yul\":8746:8747   */\n  0x01\n    /* \"#utility.yul\":8742:8743   */\n  0x02\n    /* \"#utility.yul\":8734:8740   */\n  dup9\n    /* \"#utility.yul\":8730:8744   */\n  mul\n    /* \"#utility.yul\":8726:8748   */\n  add\n    /* \"#utility.yul\":8720:8724   */\n  dup9\n    /* \"#utility.yul\":8713:8749   */\n  sstore\n    /* \"#utility.yul\":8148:8759   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8111:8998   */\ntag_190:\n  pop\n    /* \"#utility.yul\":7701:9004   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7609:9004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9010:9190   */\ntag_84:\n    /* \"#utility.yul\":9058:9135   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9055:9056   */\n  0x00\n    /* \"#utility.yul\":9048:9136   */\n  mstore\n    /* \"#utility.yul\":9155:9159   */\n  0x11\n    /* \"#utility.yul\":9152:9153   */\n  0x04\n    /* \"#utility.yul\":9145:9160   */\n  mstore\n    /* \"#utility.yul\":9179:9183   */\n  0x24\n    /* \"#utility.yul\":9176:9177   */\n  0x00\n    /* \"#utility.yul\":9169:9184   */\n  revert\n    /* \"#utility.yul\":9196:9298   */\ntag_85:\n    /* \"#utility.yul\":9238:9246   */\n  0x00\n    /* \"#utility.yul\":9285:9290   */\n  dup2\n    /* \"#utility.yul\":9282:9283   */\n  0x01\n    /* \"#utility.yul\":9278:9291   */\n  shr\n    /* \"#utility.yul\":9257:9291   */\n  swap1\n  pop\n    /* \"#utility.yul\":9196:9298   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9304:10152   */\ntag_86:\n    /* \"#utility.yul\":9365:9370   */\n  0x00\n    /* \"#utility.yul\":9372:9376   */\n  dup1\n    /* \"#utility.yul\":9396:9402   */\n  dup3\n    /* \"#utility.yul\":9387:9402   */\n  swap2\n  pop\n    /* \"#utility.yul\":9420:9425   */\n  dup4\n    /* \"#utility.yul\":9411:9425   */\n  swap1\n  pop\n    /* \"#utility.yul\":9434:10146   */\ntag_203:\n    /* \"#utility.yul\":9455:9456   */\n  0x01\n    /* \"#utility.yul\":9445:9453   */\n  dup6\n    /* \"#utility.yul\":9442:9457   */\n  gt\n    /* \"#utility.yul\":9434:10146   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":9550:9554   */\n  dup1\n    /* \"#utility.yul\":9545:9548   */\n  dup7\n    /* \"#utility.yul\":9541:9555   */\n  div\n    /* \"#utility.yul\":9535:9539   */\n  dup2\n    /* \"#utility.yul\":9532:9556   */\n  gt\n    /* \"#utility.yul\":9529:9579   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":9559:9577   */\n  tag_207\n  tag_84\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9529:9579   */\ntag_206:\n    /* \"#utility.yul\":9609:9610   */\n  0x01\n    /* \"#utility.yul\":9599:9607   */\n  dup6\n    /* \"#utility.yul\":9595:9611   */\n  and\n    /* \"#utility.yul\":9592:10043   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":10024:10028   */\n  dup1\n    /* \"#utility.yul\":10017:10022   */\n  dup3\n    /* \"#utility.yul\":10013:10029   */\n  mul\n    /* \"#utility.yul\":10004:10029   */\n  swap2\n  pop\n    /* \"#utility.yul\":9592:10043   */\ntag_208:\n    /* \"#utility.yul\":10074:10078   */\n  dup1\n    /* \"#utility.yul\":10068:10072   */\n  dup2\n    /* \"#utility.yul\":10064:10079   */\n  mul\n    /* \"#utility.yul\":10056:10079   */\n  swap1\n  pop\n    /* \"#utility.yul\":10104:10136   */\n  tag_209\n    /* \"#utility.yul\":10127:10135   */\n  dup6\n    /* \"#utility.yul\":10104:10136   */\n  tag_85\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10092:10136   */\n  swap5\n  pop\n    /* \"#utility.yul\":9434:10146   */\n  jump(tag_203)\ntag_205:\n    /* \"#utility.yul\":9304:10152   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10158:11231   */\ntag_87:\n    /* \"#utility.yul\":10212:10217   */\n  0x00\n    /* \"#utility.yul\":10403:10411   */\n  dup3\n    /* \"#utility.yul\":10393:10433   */\n  tag_211\n  jumpi\n    /* \"#utility.yul\":10424:10425   */\n  0x01\n    /* \"#utility.yul\":10415:10425   */\n  swap1\n  pop\n    /* \"#utility.yul\":10426:10431   */\n  jump(tag_210)\n    /* \"#utility.yul\":10393:10433   */\ntag_211:\n    /* \"#utility.yul\":10452:10456   */\n  dup2\n    /* \"#utility.yul\":10442:10478   */\n  tag_212\n  jumpi\n    /* \"#utility.yul\":10469:10470   */\n  0x00\n    /* \"#utility.yul\":10460:10470   */\n  swap1\n  pop\n    /* \"#utility.yul\":10471:10476   */\n  jump(tag_210)\n    /* \"#utility.yul\":10442:10478   */\ntag_212:\n    /* \"#utility.yul\":10538:10542   */\n  dup2\n    /* \"#utility.yul\":10586:10587   */\n  0x01\n    /* \"#utility.yul\":10581:10608   */\n  dup2\n  eq\n  tag_214\n  jumpi\n    /* \"#utility.yul\":10622:10623   */\n  0x02\n    /* \"#utility.yul\":10617:10808   */\n  dup2\n  eq\n  tag_215\n  jumpi\n    /* \"#utility.yul\":10531:10808   */\n  jump(tag_213)\n    /* \"#utility.yul\":10581:10608   */\ntag_214:\n    /* \"#utility.yul\":10599:10600   */\n  0x01\n    /* \"#utility.yul\":10590:10600   */\n  swap2\n  pop\n    /* \"#utility.yul\":10601:10606   */\n  pop\n  jump(tag_210)\n    /* \"#utility.yul\":10617:10808   */\ntag_215:\n    /* \"#utility.yul\":10662:10665   */\n  0xff\n    /* \"#utility.yul\":10652:10660   */\n  dup5\n    /* \"#utility.yul\":10649:10666   */\n  gt\n    /* \"#utility.yul\":10646:10689   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":10669:10687   */\n  tag_217\n  tag_84\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10646:10689   */\ntag_216:\n    /* \"#utility.yul\":10718:10726   */\n  dup4\n    /* \"#utility.yul\":10715:10716   */\n  0x02\n    /* \"#utility.yul\":10711:10727   */\n  exp\n    /* \"#utility.yul\":10702:10727   */\n  swap2\n  pop\n    /* \"#utility.yul\":10753:10756   */\n  dup5\n    /* \"#utility.yul\":10746:10751   */\n  dup3\n    /* \"#utility.yul\":10743:10757   */\n  gt\n    /* \"#utility.yul\":10740:10780   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":10760:10778   */\n  tag_219\n  tag_84\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10740:10780   */\ntag_218:\n    /* \"#utility.yul\":10793:10798   */\n  pop\n  jump(tag_210)\n    /* \"#utility.yul\":10531:10808   */\ntag_213:\n  pop\n    /* \"#utility.yul\":10917:10919   */\n  0x20\n    /* \"#utility.yul\":10907:10915   */\n  dup4\n    /* \"#utility.yul\":10904:10920   */\n  lt\n    /* \"#utility.yul\":10898:10901   */\n  0x0133\n    /* \"#utility.yul\":10892:10896   */\n  dup4\n    /* \"#utility.yul\":10889:10902   */\n  lt\n    /* \"#utility.yul\":10885:10921   */\n  and\n    /* \"#utility.yul\":10867:10869   */\n  0x4e\n    /* \"#utility.yul\":10857:10865   */\n  dup5\n    /* \"#utility.yul\":10854:10870   */\n  lt\n    /* \"#utility.yul\":10849:10851   */\n  0x0b\n    /* \"#utility.yul\":10843:10847   */\n  dup5\n    /* \"#utility.yul\":10840:10852   */\n  lt\n    /* \"#utility.yul\":10836:10871   */\n  and\n    /* \"#utility.yul\":10820:10931   */\n  or\n    /* \"#utility.yul\":10817:11063   */\n  iszero\n  tag_220\n  jumpi\n    /* \"#utility.yul\":10973:10981   */\n  dup3\n    /* \"#utility.yul\":10967:10971   */\n  dup3\n    /* \"#utility.yul\":10963:10982   */\n  exp\n    /* \"#utility.yul\":10954:10982   */\n  swap1\n  pop\n    /* \"#utility.yul\":11008:11011   */\n  dup4\n    /* \"#utility.yul\":11001:11006   */\n  dup2\n    /* \"#utility.yul\":10998:11012   */\n  gt\n    /* \"#utility.yul\":10995:11035   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":11015:11033   */\n  tag_222\n  tag_84\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10995:11035   */\ntag_221:\n    /* \"#utility.yul\":11048:11053   */\n  jump(tag_210)\n    /* \"#utility.yul\":10817:11063   */\ntag_220:\n    /* \"#utility.yul\":11088:11130   */\n  tag_223\n    /* \"#utility.yul\":11126:11129   */\n  dup5\n    /* \"#utility.yul\":11116:11124   */\n  dup5\n    /* \"#utility.yul\":11110:11114   */\n  dup5\n    /* \"#utility.yul\":11107:11108   */\n  0x01\n    /* \"#utility.yul\":11088:11130   */\n  tag_86\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11073:11130   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11162:11166   */\n  dup2\n    /* \"#utility.yul\":11157:11160   */\n  dup5\n    /* \"#utility.yul\":11153:11167   */\n  div\n    /* \"#utility.yul\":11146:11151   */\n  dup2\n    /* \"#utility.yul\":11143:11168   */\n  gt\n    /* \"#utility.yul\":11140:11191   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":11171:11189   */\n  tag_225\n  tag_84\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11140:11191   */\ntag_224:\n    /* \"#utility.yul\":11220:11224   */\n  dup2\n    /* \"#utility.yul\":11213:11218   */\n  dup2\n    /* \"#utility.yul\":11209:11225   */\n  mul\n    /* \"#utility.yul\":11200:11225   */\n  swap1\n  pop\n    /* \"#utility.yul\":10158:11231   */\ntag_210:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11237:11522   */\ntag_15:\n    /* \"#utility.yul\":11297:11302   */\n  0x00\n    /* \"#utility.yul\":11321:11344   */\n  tag_227\n    /* \"#utility.yul\":11339:11343   */\n  dup3\n    /* \"#utility.yul\":11321:11344   */\n  tag_63\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":11313:11344   */\n  swap2\n  pop\n    /* \"#utility.yul\":11365:11392   */\n  tag_228\n    /* \"#utility.yul\":11383:11391   */\n  dup4\n    /* \"#utility.yul\":11365:11392   */\n  tag_63\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":11353:11392   */\n  swap3\n  pop\n    /* \"#utility.yul\":11411:11515   */\n  tag_229\n    /* \"#utility.yul\":11448:11514   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11438:11446   */\n  dup5\n    /* \"#utility.yul\":11432:11436   */\n  dup5\n    /* \"#utility.yul\":11411:11515   */\n  tag_87\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":11402:11515   */\n  swap1\n  pop\n    /* \"#utility.yul\":11237:11522   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11528:11938   */\ntag_17:\n    /* \"#utility.yul\":11568:11575   */\n  0x00\n    /* \"#utility.yul\":11591:11611   */\n  tag_231\n    /* \"#utility.yul\":11609:11610   */\n  dup3\n    /* \"#utility.yul\":11591:11611   */\n  tag_63\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11586:11611   */\n  swap2\n  pop\n    /* \"#utility.yul\":11625:11645   */\n  tag_232\n    /* \"#utility.yul\":11643:11644   */\n  dup4\n    /* \"#utility.yul\":11625:11645   */\n  tag_63\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":11620:11645   */\n  swap3\n  pop\n    /* \"#utility.yul\":11680:11681   */\n  dup3\n    /* \"#utility.yul\":11677:11678   */\n  dup3\n    /* \"#utility.yul\":11673:11682   */\n  mul\n    /* \"#utility.yul\":11702:11732   */\n  tag_233\n    /* \"#utility.yul\":11720:11731   */\n  dup2\n    /* \"#utility.yul\":11702:11732   */\n  tag_63\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":11691:11732   */\n  swap2\n  pop\n    /* \"#utility.yul\":11881:11882   */\n  dup3\n    /* \"#utility.yul\":11872:11879   */\n  dup3\n    /* \"#utility.yul\":11868:11883   */\n  div\n    /* \"#utility.yul\":11865:11866   */\n  dup5\n    /* \"#utility.yul\":11862:11884   */\n  eq\n    /* \"#utility.yul\":11842:11843   */\n  dup4\n    /* \"#utility.yul\":11835:11844   */\n  iszero\n    /* \"#utility.yul\":11815:11898   */\n  or\n    /* \"#utility.yul\":11792:11931   */\n  tag_234\n  jumpi\n    /* \"#utility.yul\":11911:11929   */\n  tag_235\n  tag_84\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11792:11931   */\ntag_234:\n    /* \"#utility.yul\":11576:11938   */\n  pop\n    /* \"#utility.yul\":11528:11938   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11944:12070   */\ntag_88:\n    /* \"#utility.yul\":11981:11988   */\n  0x00\n    /* \"#utility.yul\":12021:12063   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12014:12019   */\n  dup3\n    /* \"#utility.yul\":12010:12064   */\n  and\n    /* \"#utility.yul\":11999:12064   */\n  swap1\n  pop\n    /* \"#utility.yul\":11944:12070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12076:12172   */\ntag_89:\n    /* \"#utility.yul\":12113:12120   */\n  0x00\n    /* \"#utility.yul\":12142:12166   */\n  tag_238\n    /* \"#utility.yul\":12160:12165   */\n  dup3\n    /* \"#utility.yul\":12142:12166   */\n  tag_88\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12131:12166   */\n  swap1\n  pop\n    /* \"#utility.yul\":12076:12172   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12178:12296   */\ntag_90:\n    /* \"#utility.yul\":12265:12289   */\n  tag_240\n    /* \"#utility.yul\":12283:12288   */\n  dup2\n    /* \"#utility.yul\":12265:12289   */\n  tag_89\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12260:12263   */\n  dup3\n    /* \"#utility.yul\":12253:12290   */\n  mstore\n    /* \"#utility.yul\":12178:12296   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12302:12524   */\ntag_26:\n    /* \"#utility.yul\":12395:12399   */\n  0x00\n    /* \"#utility.yul\":12433:12435   */\n  0x20\n    /* \"#utility.yul\":12422:12431   */\n  dup3\n    /* \"#utility.yul\":12418:12436   */\n  add\n    /* \"#utility.yul\":12410:12436   */\n  swap1\n  pop\n    /* \"#utility.yul\":12446:12517   */\n  tag_242\n    /* \"#utility.yul\":12514:12515   */\n  0x00\n    /* \"#utility.yul\":12503:12512   */\n  dup4\n    /* \"#utility.yul\":12499:12516   */\n  add\n    /* \"#utility.yul\":12490:12496   */\n  dup5\n    /* \"#utility.yul\":12446:12517   */\n  tag_90\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12302:12524   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12530:12721   */\ntag_39:\n    /* \"#utility.yul\":12570:12573   */\n  0x00\n    /* \"#utility.yul\":12589:12609   */\n  tag_244\n    /* \"#utility.yul\":12607:12608   */\n  dup3\n    /* \"#utility.yul\":12589:12609   */\n  tag_63\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12584:12609   */\n  swap2\n  pop\n    /* \"#utility.yul\":12623:12643   */\n  tag_245\n    /* \"#utility.yul\":12641:12642   */\n  dup4\n    /* \"#utility.yul\":12623:12643   */\n  tag_63\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":12618:12643   */\n  swap3\n  pop\n    /* \"#utility.yul\":12666:12667   */\n  dup3\n    /* \"#utility.yul\":12663:12664   */\n  dup3\n    /* \"#utility.yul\":12659:12668   */\n  add\n    /* \"#utility.yul\":12652:12668   */\n  swap1\n  pop\n    /* \"#utility.yul\":12687:12690   */\n  dup1\n    /* \"#utility.yul\":12684:12685   */\n  dup3\n    /* \"#utility.yul\":12681:12691   */\n  gt\n    /* \"#utility.yul\":12678:12714   */\n  iszero\n  tag_246\n  jumpi\n    /* \"#utility.yul\":12694:12712   */\n  tag_247\n  tag_84\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":12678:12714   */\ntag_246:\n    /* \"#utility.yul\":12530:12721   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12727:12845   */\ntag_91:\n    /* \"#utility.yul\":12814:12838   */\n  tag_249\n    /* \"#utility.yul\":12832:12837   */\n  dup2\n    /* \"#utility.yul\":12814:12838   */\n  tag_63\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12809:12812   */\n  dup3\n    /* \"#utility.yul\":12802:12839   */\n  mstore\n    /* \"#utility.yul\":12727:12845   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12851:13293   */\ntag_43:\n    /* \"#utility.yul\":13000:13004   */\n  0x00\n    /* \"#utility.yul\":13038:13040   */\n  0x60\n    /* \"#utility.yul\":13027:13036   */\n  dup3\n    /* \"#utility.yul\":13023:13041   */\n  add\n    /* \"#utility.yul\":13015:13041   */\n  swap1\n  pop\n    /* \"#utility.yul\":13051:13122   */\n  tag_251\n    /* \"#utility.yul\":13119:13120   */\n  0x00\n    /* \"#utility.yul\":13108:13117   */\n  dup4\n    /* \"#utility.yul\":13104:13121   */\n  add\n    /* \"#utility.yul\":13095:13101   */\n  dup7\n    /* \"#utility.yul\":13051:13122   */\n  tag_90\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":13132:13204   */\n  tag_252\n    /* \"#utility.yul\":13200:13202   */\n  0x20\n    /* \"#utility.yul\":13189:13198   */\n  dup4\n    /* \"#utility.yul\":13185:13203   */\n  add\n    /* \"#utility.yul\":13176:13182   */\n  dup6\n    /* \"#utility.yul\":13132:13204   */\n  tag_91\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13214:13286   */\n  tag_253\n    /* \"#utility.yul\":13282:13284   */\n  0x40\n    /* \"#utility.yul\":13271:13280   */\n  dup4\n    /* \"#utility.yul\":13267:13285   */\n  add\n    /* \"#utility.yul\":13258:13264   */\n  dup5\n    /* \"#utility.yul\":13214:13286   */\n  tag_91\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":12851:13293   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13299:13521   */\ntag_47:\n    /* \"#utility.yul\":13392:13396   */\n  0x00\n    /* \"#utility.yul\":13430:13432   */\n  0x20\n    /* \"#utility.yul\":13419:13428   */\n  dup3\n    /* \"#utility.yul\":13415:13433   */\n  add\n    /* \"#utility.yul\":13407:13433   */\n  swap1\n  pop\n    /* \"#utility.yul\":13443:13514   */\n  tag_255\n    /* \"#utility.yul\":13511:13512   */\n  0x00\n    /* \"#utility.yul\":13500:13509   */\n  dup4\n    /* \"#utility.yul\":13496:13513   */\n  add\n    /* \"#utility.yul\":13487:13493   */\n  dup5\n    /* \"#utility.yul\":13443:13514   */\n  tag_91\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":13299:13521   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"assignment3/sAsset.sol\":188:1458  contract sAsset is ERC20, AccessControl {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"assignment3/sAsset.sol\":188:1458  contract sAsset is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x248a9ca3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment3/sAsset.sol\":370:432  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"assignment3/sAsset.sol\":1363:1455  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"assignment3/sAsset.sol\":1033:1187  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        ... */\n    tag_13:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment3/sAsset.sol\":1195:1355  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        ... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"assignment3/sAsset.sol\":301:363  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2684  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2748:2759  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2747  super.supportsInterface */\n      tag_109\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_120\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_121\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_127\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3908:3912  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3894:3923  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"assignment3/sAsset.sol\":370:432  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_57:\n        /* \"assignment3/sAsset.sol\":408:432  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"assignment3/sAsset.sol\":370:432  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      tag_130\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4313:4317  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4312  getRoleAdmin */\n      tag_53\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4300:4318  getRoleAdmin(role) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_135\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_135:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"assignment3/sAsset.sol\":1363:1455  function decimals() public view virtual override returns (uint8) {... */\n    tag_64:\n        /* \"assignment3/sAsset.sol\":1421:1426  uint8 */\n      0x00\n        /* \"assignment3/sAsset.sol\":1446:1447  8 */\n      0x08\n        /* \"assignment3/sAsset.sol\":1439:1447  return 8 */\n      swap1\n      pop\n        /* \"assignment3/sAsset.sol\":1363:1455  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5453  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5443:5455  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5439  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_140\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_141\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_142\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_141:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"assignment3/sAsset.sol\":1033:1187  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        ... */\n    tag_72:\n        /* \"assignment3/sAsset.sol\":339:363  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_144:\n        /* \"assignment3/sAsset.sol\":1125:1142  _mint(to, amount) */\n      tag_146\n        /* \"assignment3/sAsset.sol\":1131:1133  to */\n      dup4\n        /* \"assignment3/sAsset.sol\":1135:1141  amount */\n      dup4\n        /* \"assignment3/sAsset.sol\":1125:1130  _mint */\n      tag_147\n        /* \"assignment3/sAsset.sol\":1125:1142  _mint(to, amount) */\n      jump\t// in\n    tag_146:\n        /* \"assignment3/sAsset.sol\":1158:1179  mintToken(to, amount) */\n      0x79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e\n        /* \"assignment3/sAsset.sol\":1168:1170  to */\n      dup4\n        /* \"assignment3/sAsset.sol\":1172:1178  amount */\n      dup4\n        /* \"assignment3/sAsset.sol\":1158:1179  mintToken(to, amount) */\n      mload(0x40)\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"assignment3/sAsset.sol\":1033:1187  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2961:2965  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2974  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2975:2982  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2947:2983  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_112\n      jump\t// in\n    tag_153:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_112\n      jump\t// in\n    tag_154:\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_156\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_155)\n    tag_156:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_157:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_157\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"assignment3/sAsset.sol\":1195:1355  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        ... */\n    tag_87:\n        /* \"assignment3/sAsset.sol\":408:432  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_159\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_159:\n        /* \"assignment3/sAsset.sol\":1289:1308  _burn(from, amount) */\n      tag_161\n        /* \"assignment3/sAsset.sol\":1295:1299  from */\n      dup4\n        /* \"assignment3/sAsset.sol\":1301:1307  amount */\n      dup4\n        /* \"assignment3/sAsset.sol\":1289:1294  _burn */\n      tag_162\n        /* \"assignment3/sAsset.sol\":1289:1308  _burn(from, amount) */\n      jump\t// in\n    tag_161:\n        /* \"assignment3/sAsset.sol\":1324:1347  burnToken(from, amount) */\n      0xd1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c5\n        /* \"assignment3/sAsset.sol\":1334:1338  from */\n      dup4\n        /* \"assignment3/sAsset.sol\":1340:1346  amount */\n      dup4\n        /* \"assignment3/sAsset.sol\":1324:1347  burnToken(from, amount) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"assignment3/sAsset.sol\":1195:1355  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_166\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_128\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"assignment3/sAsset.sol\":301:363  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_96:\n        /* \"assignment3/sAsset.sol\":339:363  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"assignment3/sAsset.sol\":301:363  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      tag_167\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4730:4734  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4729  getRoleAdmin */\n      tag_53\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4717:4735  getRoleAdmin(role) */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_169\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_171\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_142\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n    tag_171:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_104\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_186:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_191\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3292  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3282:3294  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_196\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      tag_198\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6285:6289  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6298  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6284  hasRole */\n      tag_80\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6277:6299  hasRole(role, account) */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6322:6326  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6335  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6336:6343  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6407  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      swap1\n      pop\n      jump(tag_197)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_197:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6808:6812  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6836:6840  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6842:6849  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6835  hasRole */\n      tag_80\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6828:6850  hasRole(role, account) */\n      jump\t// in\n    tag_203:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6898:6903  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6872  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6873:6877  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6878  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6886  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6887:6894  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6895  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6866:6903  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      tag_205\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6959  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6949:6961  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6940:6947  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6934:6938  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6922:6962  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6983:6987  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6976:6987  return true */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6824:7041  if (hasRole(role, account)) {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7025:7030  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7018:7030  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6730:7047  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_202:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_214\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_192\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_226)\n    tag_223:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_230)\n    tag_229:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_196:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      tag_233\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3528:3532  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3534:3541  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3527  hasRole */\n      tag_80\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3520:3542  hasRole(role, account) */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_234\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3598:3605  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3607:3611  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_238:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_240:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_241:\n        /* \"#utility.yul\":561:584   */\n      tag_273\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_240\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_274:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_242:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_276\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_241\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_279\n      tag_238\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":833:952   */\n    tag_278:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_280\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_242\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_243:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_244:\n        /* \"#utility.yul\":1268:1289   */\n      tag_283\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_243\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_285\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_244\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_245:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_246:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_247:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_289:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_289)\n    tag_291:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_248:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_249:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_294\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_245\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2329:2400   */\n      tag_295\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_246\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_296\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_247\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2499:2528   */\n      tag_297\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_248\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_35:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_299\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_249\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_250:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_251:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_302\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_250\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_252:\n        /* \"#utility.yul\":3167:3191   */\n      tag_304\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_251\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_305:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_253:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_307\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_252\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_254:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_255:\n        /* \"#utility.yul\":3523:3547   */\n      tag_310\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_254\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_311:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_256:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_313\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_255\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_38:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_316\n      tag_238\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3816:3935   */\n    tag_315:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_317\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_253\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_318\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_256\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_257:\n        /* \"#utility.yul\":4290:4314   */\n      tag_320\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_254\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_44:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_322\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_257\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_47:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_325\n      tag_238\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4665:4784   */\n    tag_324:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_326\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_253\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_327\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_253\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_328\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_256\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5257   */\n    tag_258:\n        /* \"#utility.yul\":5217:5224   */\n      0x00\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5235:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5385   */\n    tag_259:\n        /* \"#utility.yul\":5336:5360   */\n      tag_331\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5336:5360   */\n      tag_258\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5329:5334   */\n      dup2\n        /* \"#utility.yul\":5326:5361   */\n      eq\n        /* \"#utility.yul\":5316:5379   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5372:5373   */\n      dup1\n        /* \"#utility.yul\":5365:5377   */\n      revert\n        /* \"#utility.yul\":5316:5379   */\n    tag_332:\n        /* \"#utility.yul\":5263:5385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5530   */\n    tag_260:\n        /* \"#utility.yul\":5437:5442   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup2\n        /* \"#utility.yul\":5462:5482   */\n      calldataload\n        /* \"#utility.yul\":5453:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5524   */\n      tag_334\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5491:5524   */\n      tag_259\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5391:5530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5865   */\n    tag_52:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5632:5641   */\n      dup3\n        /* \"#utility.yul\":5623:5630   */\n      dup5\n        /* \"#utility.yul\":5619:5642   */\n      sub\n        /* \"#utility.yul\":5615:5647   */\n      slt\n        /* \"#utility.yul\":5612:5731   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_337\n      tag_238\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5612:5731   */\n    tag_336:\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5795:5848   */\n      tag_338\n        /* \"#utility.yul\":5840:5847   */\n      dup5\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5820:5829   */\n      dup6\n        /* \"#utility.yul\":5816:5838   */\n      add\n        /* \"#utility.yul\":5795:5848   */\n      tag_260\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5785:5848   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5858   */\n      pop\n        /* \"#utility.yul\":5536:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:5989   */\n    tag_261:\n        /* \"#utility.yul\":5958:5982   */\n      tag_340\n        /* \"#utility.yul\":5976:5981   */\n      dup2\n        /* \"#utility.yul\":5958:5982   */\n      tag_258\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5953:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5983   */\n      mstore\n        /* \"#utility.yul\":5871:5989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6217   */\n    tag_55:\n        /* \"#utility.yul\":6088:6092   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6111:6129   */\n      add\n        /* \"#utility.yul\":6103:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6210   */\n      tag_342\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6196:6205   */\n      dup4\n        /* \"#utility.yul\":6192:6209   */\n      add\n        /* \"#utility.yul\":6183:6189   */\n      dup5\n        /* \"#utility.yul\":6139:6210   */\n      tag_261\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5995:6217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6697   */\n    tag_61:\n        /* \"#utility.yul\":6291:6297   */\n      0x00\n        /* \"#utility.yul\":6299:6305   */\n      dup1\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6327:6334   */\n      dup6\n        /* \"#utility.yul\":6323:6346   */\n      sub\n        /* \"#utility.yul\":6319:6351   */\n      slt\n        /* \"#utility.yul\":6316:6435   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":6354:6433   */\n      tag_345\n      tag_238\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6316:6435   */\n    tag_344:\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6499:6552   */\n      tag_346\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_260\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6489:6552   */\n      swap3\n      pop\n        /* \"#utility.yul\":6445:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_347\n        /* \"#utility.yul\":6672:6679   */\n      dup6\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup7\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_253\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6223:6697   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:6789   */\n    tag_262:\n        /* \"#utility.yul\":6738:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6782   */\n      0xff\n        /* \"#utility.yul\":6771:6776   */\n      dup3\n        /* \"#utility.yul\":6767:6783   */\n      and\n        /* \"#utility.yul\":6756:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_263:\n        /* \"#utility.yul\":6878:6900   */\n      tag_350\n        /* \"#utility.yul\":6894:6899   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      tag_262\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6873:6876   */\n      dup3\n        /* \"#utility.yul\":6866:6901   */\n      mstore\n        /* \"#utility.yul\":6795:6907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7127   */\n    tag_66:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7029:7038   */\n      dup3\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7017:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7120   */\n      tag_352\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7053:7120   */\n      tag_263\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6913:7127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7462   */\n    tag_75:\n        /* \"#utility.yul\":7192:7198   */\n      0x00\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"#utility.yul\":7229:7238   */\n      dup3\n        /* \"#utility.yul\":7220:7227   */\n      dup5\n        /* \"#utility.yul\":7216:7239   */\n      sub\n        /* \"#utility.yul\":7212:7244   */\n      slt\n        /* \"#utility.yul\":7209:7328   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":7247:7326   */\n      tag_355\n      tag_238\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7209:7328   */\n    tag_354:\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7392:7445   */\n      tag_356\n        /* \"#utility.yul\":7437:7444   */\n      dup5\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup6\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_253\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7382:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7455   */\n      pop\n        /* \"#utility.yul\":7133:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7942   */\n    tag_103:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7544:7550   */\n      dup1\n        /* \"#utility.yul\":7593:7595   */\n      0x40\n        /* \"#utility.yul\":7581:7590   */\n      dup4\n        /* \"#utility.yul\":7572:7579   */\n      dup6\n        /* \"#utility.yul\":7568:7591   */\n      sub\n        /* \"#utility.yul\":7564:7596   */\n      slt\n        /* \"#utility.yul\":7561:7680   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":7599:7678   */\n      tag_359\n      tag_238\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7561:7680   */\n    tag_358:\n        /* \"#utility.yul\":7719:7720   */\n      0x00\n        /* \"#utility.yul\":7744:7797   */\n      tag_360\n        /* \"#utility.yul\":7789:7796   */\n      dup6\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7769:7778   */\n      dup7\n        /* \"#utility.yul\":7765:7787   */\n      add\n        /* \"#utility.yul\":7744:7797   */\n      tag_253\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7734:7797   */\n      swap3\n      pop\n        /* \"#utility.yul\":7690:7807   */\n      pop\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7872:7925   */\n      tag_361\n        /* \"#utility.yul\":7917:7924   */\n      dup6\n        /* \"#utility.yul\":7908:7914   */\n      dup3\n        /* \"#utility.yul\":7897:7906   */\n      dup7\n        /* \"#utility.yul\":7893:7915   */\n      add\n        /* \"#utility.yul\":7872:7925   */\n      tag_253\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7862:7925   */\n      swap2\n      pop\n        /* \"#utility.yul\":7817:7935   */\n      pop\n        /* \"#utility.yul\":7468:7942   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7948:8128   */\n    tag_264:\n        /* \"#utility.yul\":7996:8073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":7986:8074   */\n      mstore\n        /* \"#utility.yul\":8093:8097   */\n      0x22\n        /* \"#utility.yul\":8090:8091   */\n      0x04\n        /* \"#utility.yul\":8083:8098   */\n      mstore\n        /* \"#utility.yul\":8117:8121   */\n      0x24\n        /* \"#utility.yul\":8114:8115   */\n      0x00\n        /* \"#utility.yul\":8107:8122   */\n      revert\n        /* \"#utility.yul\":8134:8454   */\n    tag_112:\n        /* \"#utility.yul\":8178:8184   */\n      0x00\n        /* \"#utility.yul\":8215:8216   */\n      0x02\n        /* \"#utility.yul\":8209:8213   */\n      dup3\n        /* \"#utility.yul\":8205:8217   */\n      div\n        /* \"#utility.yul\":8195:8217   */\n      swap1\n      pop\n        /* \"#utility.yul\":8262:8263   */\n      0x01\n        /* \"#utility.yul\":8256:8260   */\n      dup3\n        /* \"#utility.yul\":8252:8264   */\n      and\n        /* \"#utility.yul\":8283:8301   */\n      dup1\n        /* \"#utility.yul\":8273:8354   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8339:8343   */\n      0x7f\n        /* \"#utility.yul\":8331:8337   */\n      dup3\n        /* \"#utility.yul\":8327:8344   */\n      and\n        /* \"#utility.yul\":8317:8344   */\n      swap2\n      pop\n        /* \"#utility.yul\":8273:8354   */\n    tag_364:\n        /* \"#utility.yul\":8401:8403   */\n      0x20\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8390:8404   */\n      lt\n        /* \"#utility.yul\":8370:8388   */\n      dup2\n        /* \"#utility.yul\":8367:8405   */\n      sub\n        /* \"#utility.yul\":8364:8448   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":8420:8438   */\n      tag_366\n      tag_264\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8364:8448   */\n    tag_365:\n        /* \"#utility.yul\":8185:8454   */\n      pop\n        /* \"#utility.yul\":8134:8454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8578   */\n    tag_265:\n        /* \"#utility.yul\":8547:8571   */\n      tag_368\n        /* \"#utility.yul\":8565:8570   */\n      dup2\n        /* \"#utility.yul\":8547:8571   */\n      tag_251\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8542:8545   */\n      dup3\n        /* \"#utility.yul\":8535:8572   */\n      mstore\n        /* \"#utility.yul\":8460:8578   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8584:8916   */\n    tag_149:\n        /* \"#utility.yul\":8705:8709   */\n      0x00\n        /* \"#utility.yul\":8743:8745   */\n      0x40\n        /* \"#utility.yul\":8732:8741   */\n      dup3\n        /* \"#utility.yul\":8728:8746   */\n      add\n        /* \"#utility.yul\":8720:8746   */\n      swap1\n      pop\n        /* \"#utility.yul\":8756:8827   */\n      tag_370\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8813:8822   */\n      dup4\n        /* \"#utility.yul\":8809:8826   */\n      add\n        /* \"#utility.yul\":8800:8806   */\n      dup6\n        /* \"#utility.yul\":8756:8827   */\n      tag_265\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8837:8909   */\n      tag_371\n        /* \"#utility.yul\":8905:8907   */\n      0x20\n        /* \"#utility.yul\":8894:8903   */\n      dup4\n        /* \"#utility.yul\":8890:8908   */\n      add\n        /* \"#utility.yul\":8881:8887   */\n      dup5\n        /* \"#utility.yul\":8837:8909   */\n      tag_257\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":8584:8916   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8922:9364   */\n    tag_183:\n        /* \"#utility.yul\":9071:9075   */\n      0x00\n        /* \"#utility.yul\":9109:9111   */\n      0x60\n        /* \"#utility.yul\":9098:9107   */\n      dup3\n        /* \"#utility.yul\":9094:9112   */\n      add\n        /* \"#utility.yul\":9086:9112   */\n      swap1\n      pop\n        /* \"#utility.yul\":9122:9193   */\n      tag_373\n        /* \"#utility.yul\":9190:9191   */\n      0x00\n        /* \"#utility.yul\":9179:9188   */\n      dup4\n        /* \"#utility.yul\":9175:9192   */\n      add\n        /* \"#utility.yul\":9166:9172   */\n      dup7\n        /* \"#utility.yul\":9122:9193   */\n      tag_265\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":9203:9275   */\n      tag_374\n        /* \"#utility.yul\":9271:9273   */\n      0x20\n        /* \"#utility.yul\":9260:9269   */\n      dup4\n        /* \"#utility.yul\":9256:9274   */\n      add\n        /* \"#utility.yul\":9247:9253   */\n      dup6\n        /* \"#utility.yul\":9203:9275   */\n      tag_257\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9285:9357   */\n      tag_375\n        /* \"#utility.yul\":9353:9355   */\n      0x40\n        /* \"#utility.yul\":9342:9351   */\n      dup4\n        /* \"#utility.yul\":9338:9356   */\n      add\n        /* \"#utility.yul\":9329:9335   */\n      dup5\n        /* \"#utility.yul\":9285:9357   */\n      tag_257\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8922:9364   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9370:9592   */\n    tag_188:\n        /* \"#utility.yul\":9463:9467   */\n      0x00\n        /* \"#utility.yul\":9501:9503   */\n      0x20\n        /* \"#utility.yul\":9490:9499   */\n      dup3\n        /* \"#utility.yul\":9486:9504   */\n      add\n        /* \"#utility.yul\":9478:9504   */\n      swap1\n      pop\n        /* \"#utility.yul\":9514:9585   */\n      tag_377\n        /* \"#utility.yul\":9582:9583   */\n      0x00\n        /* \"#utility.yul\":9571:9580   */\n      dup4\n        /* \"#utility.yul\":9567:9584   */\n      add\n        /* \"#utility.yul\":9558:9564   */\n      dup5\n        /* \"#utility.yul\":9514:9585   */\n      tag_265\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9370:9592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9598:9778   */\n    tag_266:\n        /* \"#utility.yul\":9646:9723   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9643:9644   */\n      0x00\n        /* \"#utility.yul\":9636:9724   */\n      mstore\n        /* \"#utility.yul\":9743:9747   */\n      0x11\n        /* \"#utility.yul\":9740:9741   */\n      0x04\n        /* \"#utility.yul\":9733:9748   */\n      mstore\n        /* \"#utility.yul\":9767:9771   */\n      0x24\n        /* \"#utility.yul\":9764:9765   */\n      0x00\n        /* \"#utility.yul\":9757:9772   */\n      revert\n        /* \"#utility.yul\":9784:9975   */\n    tag_225:\n        /* \"#utility.yul\":9824:9827   */\n      0x00\n        /* \"#utility.yul\":9843:9863   */\n      tag_380\n        /* \"#utility.yul\":9861:9862   */\n      dup3\n        /* \"#utility.yul\":9843:9863   */\n      tag_254\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9838:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9877:9897   */\n      tag_381\n        /* \"#utility.yul\":9895:9896   */\n      dup4\n        /* \"#utility.yul\":9877:9897   */\n      tag_254\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9872:9897   */\n      swap3\n      pop\n        /* \"#utility.yul\":9920:9921   */\n      dup3\n        /* \"#utility.yul\":9917:9918   */\n      dup3\n        /* \"#utility.yul\":9913:9922   */\n      add\n        /* \"#utility.yul\":9906:9922   */\n      swap1\n      pop\n        /* \"#utility.yul\":9941:9944   */\n      dup1\n        /* \"#utility.yul\":9938:9939   */\n      dup3\n        /* \"#utility.yul\":9935:9945   */\n      gt\n        /* \"#utility.yul\":9932:9968   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":9948:9966   */\n      tag_383\n      tag_266\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9932:9968   */\n    tag_382:\n        /* \"#utility.yul\":9784:9975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9981:10313   */\n    tag_236:\n        /* \"#utility.yul\":10102:10106   */\n      0x00\n        /* \"#utility.yul\":10140:10142   */\n      0x40\n        /* \"#utility.yul\":10129:10138   */\n      dup3\n        /* \"#utility.yul\":10125:10143   */\n      add\n        /* \"#utility.yul\":10117:10143   */\n      swap1\n      pop\n        /* \"#utility.yul\":10153:10224   */\n      tag_385\n        /* \"#utility.yul\":10221:10222   */\n      0x00\n        /* \"#utility.yul\":10210:10219   */\n      dup4\n        /* \"#utility.yul\":10206:10223   */\n      add\n        /* \"#utility.yul\":10197:10203   */\n      dup6\n        /* \"#utility.yul\":10153:10224   */\n      tag_265\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10234:10306   */\n      tag_386\n        /* \"#utility.yul\":10302:10304   */\n      0x20\n        /* \"#utility.yul\":10291:10300   */\n      dup4\n        /* \"#utility.yul\":10287:10305   */\n      add\n        /* \"#utility.yul\":10278:10284   */\n      dup5\n        /* \"#utility.yul\":10234:10306   */\n      tag_261\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9981:10313   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220390c282ef5f50c2afc6c6b017d56e3edbdf791bbd5b31a69f908b75627fa10f264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1947": {
									"entryPoint": null,
									"id": 1947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_715": {
									"entryPoint": null,
									"id": 715,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 333,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1018": {
									"entryPoint": 195,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 1233,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_985": {
									"entryPoint": 585,
									"id": 985,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_2010": {
									"entryPoint": 187,
									"id": 2010,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": 1133,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2679,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13524:13",
										"nodeType": "YulBlock",
										"src": "0:13524:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "423:28:13",
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:13",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:13",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nativeSrc": "433:12:13",
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nativeSrc": "433:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nativeSrc": "546:28:13",
													"nodeType": "YulBlock",
													"src": "546:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:13",
																		"nodeType": "YulLiteral",
																		"src": "563:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:13",
																		"nodeType": "YulLiteral",
																		"src": "566:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:13"
																},
																"nativeSrc": "556:12:13",
																"nodeType": "YulFunctionCall",
																"src": "556:12:13"
															},
															"nativeSrc": "556:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:13"
											},
											{
												"body": {
													"nativeSrc": "628:54:13",
													"nodeType": "YulBlock",
													"src": "628:54:13",
													"statements": [
														{
															"nativeSrc": "638:38:13",
															"nodeType": "YulAssignment",
															"src": "638:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:13",
																				"nodeType": "YulLiteral",
																				"src": "663:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:13"
																		},
																		"nativeSrc": "652:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:13",
																				"nodeType": "YulLiteral",
																				"src": "672:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:13"
																		},
																		"nativeSrc": "668:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:13"
																},
																"nativeSrc": "648:28:13",
																"nodeType": "YulFunctionCall",
																"src": "648:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:13",
														"nodeType": "YulTypedName",
														"src": "611:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:13",
														"nodeType": "YulTypedName",
														"src": "621:6:13",
														"type": ""
													}
												],
												"src": "580:102:13"
											},
											{
												"body": {
													"nativeSrc": "716:152:13",
													"nodeType": "YulBlock",
													"src": "716:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:13",
																		"nodeType": "YulLiteral",
																		"src": "733:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:13",
																		"nodeType": "YulLiteral",
																		"src": "736:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:13"
																},
																"nativeSrc": "726:88:13",
																"nodeType": "YulFunctionCall",
																"src": "726:88:13"
															},
															"nativeSrc": "726:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:13",
																		"nodeType": "YulLiteral",
																		"src": "830:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:13",
																		"nodeType": "YulLiteral",
																		"src": "833:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:13"
																},
																"nativeSrc": "823:15:13",
																"nodeType": "YulFunctionCall",
																"src": "823:15:13"
															},
															"nativeSrc": "823:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:13",
																		"nodeType": "YulLiteral",
																		"src": "854:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:13",
																		"nodeType": "YulLiteral",
																		"src": "857:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:13"
																},
																"nativeSrc": "847:15:13",
																"nodeType": "YulFunctionCall",
																"src": "847:15:13"
															},
															"nativeSrc": "847:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:13"
											},
											{
												"body": {
													"nativeSrc": "917:238:13",
													"nodeType": "YulBlock",
													"src": "917:238:13",
													"statements": [
														{
															"nativeSrc": "927:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:13"
																		},
																		"nativeSrc": "957:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:13"
																},
																"nativeSrc": "945:40:13",
																"nodeType": "YulFunctionCall",
																"src": "945:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:13",
																	"nodeType": "YulTypedName",
																	"src": "931:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:13",
																"nodeType": "YulBlock",
																"src": "1096:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:13"
																			},
																			"nativeSrc": "1098:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:13"
																		},
																		"nativeSrc": "1098:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:13",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:13"
																		},
																		"nativeSrc": "1036:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:13"
																		},
																		"nativeSrc": "1072:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:13"
																},
																"nativeSrc": "1033:62:13",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:13"
															},
															"nativeSrc": "1030:88:13",
															"nodeType": "YulIf",
															"src": "1030:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:13"
																},
																"nativeSrc": "1127:22:13",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:13"
															},
															"nativeSrc": "1127:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:13",
														"nodeType": "YulTypedName",
														"src": "903:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:13",
														"nodeType": "YulTypedName",
														"src": "911:4:13",
														"type": ""
													}
												],
												"src": "874:281:13"
											},
											{
												"body": {
													"nativeSrc": "1202:88:13",
													"nodeType": "YulBlock",
													"src": "1202:88:13",
													"statements": [
														{
															"nativeSrc": "1212:30:13",
															"nodeType": "YulAssignment",
															"src": "1212:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:13"
																},
																"nativeSrc": "1222:20:13",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:13"
																},
																"nativeSrc": "1251:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:13"
															},
															"nativeSrc": "1251:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:13",
														"nodeType": "YulTypedName",
														"src": "1186:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:13",
														"nodeType": "YulTypedName",
														"src": "1195:6:13",
														"type": ""
													}
												],
												"src": "1161:129:13"
											},
											{
												"body": {
													"nativeSrc": "1363:241:13",
													"nodeType": "YulBlock",
													"src": "1363:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:13",
																"nodeType": "YulBlock",
																"src": "1468:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:13"
																			},
																			"nativeSrc": "1470:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:13"
																		},
																		"nativeSrc": "1470:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:13",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:13"
																},
																"nativeSrc": "1437:30:13",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:13"
															},
															"nativeSrc": "1434:56:13",
															"nodeType": "YulIf",
															"src": "1434:56:13"
														},
														{
															"nativeSrc": "1500:37:13",
															"nodeType": "YulAssignment",
															"src": "1500:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:13"
																},
																"nativeSrc": "1508:29:13",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:13"
																}
															]
														},
														{
															"nativeSrc": "1574:23:13",
															"nodeType": "YulAssignment",
															"src": "1574:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:13"
																},
																"nativeSrc": "1582:15:13",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:13",
														"nodeType": "YulTypedName",
														"src": "1347:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:13",
														"nodeType": "YulTypedName",
														"src": "1358:4:13",
														"type": ""
													}
												],
												"src": "1296:308:13"
											},
											{
												"body": {
													"nativeSrc": "1672:184:13",
													"nodeType": "YulBlock",
													"src": "1672:184:13",
													"statements": [
														{
															"nativeSrc": "1682:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:13",
																"nodeType": "YulLiteral",
																"src": "1691:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:13",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:13",
																"nodeType": "YulBlock",
																"src": "1751:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:13"
																					},
																					"nativeSrc": "1772:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:13"
																							},
																							"nativeSrc": "1791:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:13"
																					},
																					"nativeSrc": "1785:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:13"
																			},
																			"nativeSrc": "1765:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:13"
																		},
																		"nativeSrc": "1765:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:13"
																},
																"nativeSrc": "1709:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:13"
															},
															"nativeSrc": "1701:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:13",
																"nodeType": "YulBlock",
																"src": "1723:19:13",
																"statements": [
																	{
																		"nativeSrc": "1725:15:13",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:13",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:13"
																			},
																			"nativeSrc": "1730:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:13",
																"nodeType": "YulBlock",
																"src": "1705:3:13",
																"statements": []
															},
															"src": "1701:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:13"
																		},
																		"nativeSrc": "1830:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:13"
																},
																"nativeSrc": "1823:27:13",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:13"
															},
															"nativeSrc": "1823:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:13",
														"nodeType": "YulTypedName",
														"src": "1654:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:13",
														"nodeType": "YulTypedName",
														"src": "1659:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:13",
														"nodeType": "YulTypedName",
														"src": "1664:6:13",
														"type": ""
													}
												],
												"src": "1610:246:13"
											},
											{
												"body": {
													"nativeSrc": "1957:339:13",
													"nodeType": "YulBlock",
													"src": "1957:339:13",
													"statements": [
														{
															"nativeSrc": "1967:75:13",
															"nodeType": "YulAssignment",
															"src": "1967:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:13"
																		},
																		"nativeSrc": "1992:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:13"
																},
																"nativeSrc": "1976:66:13",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:13"
																},
																"nativeSrc": "2051:21:13",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:13"
															},
															"nativeSrc": "2051:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:13"
														},
														{
															"nativeSrc": "2081:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:13"
																},
																"nativeSrc": "2092:16:13",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:13",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:13",
																"nodeType": "YulBlock",
																"src": "2146:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:13"
																			},
																			"nativeSrc": "2148:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:13"
																		},
																		"nativeSrc": "2148:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:13"
																		},
																		"nativeSrc": "2123:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:13"
																},
																"nativeSrc": "2120:25:13",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:13"
															},
															"nativeSrc": "2117:112:13",
															"nodeType": "YulIf",
															"src": "2117:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:13"
																},
																"nativeSrc": "2238:52:13",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:13"
															},
															"nativeSrc": "2238:52:13",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:13",
														"nodeType": "YulTypedName",
														"src": "1930:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:13",
														"nodeType": "YulTypedName",
														"src": "1935:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:13",
														"nodeType": "YulTypedName",
														"src": "1943:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:13",
														"nodeType": "YulTypedName",
														"src": "1951:5:13",
														"type": ""
													}
												],
												"src": "1862:434:13"
											},
											{
												"body": {
													"nativeSrc": "2389:282:13",
													"nodeType": "YulBlock",
													"src": "2389:282:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:13",
																"nodeType": "YulBlock",
																"src": "2438:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:13"
																			},
																			"nativeSrc": "2440:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:13"
																		},
																		"nativeSrc": "2440:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:13",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:13"
																				},
																				"nativeSrc": "2413:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:13"
																		},
																		"nativeSrc": "2409:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:13"
																},
																"nativeSrc": "2402:35:13",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:13"
															},
															"nativeSrc": "2399:122:13",
															"nodeType": "YulIf",
															"src": "2399:122:13"
														},
														{
															"nativeSrc": "2530:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:13"
																},
																"nativeSrc": "2544:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:13",
															"nodeType": "YulAssignment",
															"src": "2566:99:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:13"
																		},
																		"nativeSrc": "2634:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:13"
																},
																"nativeSrc": "2575:90:13",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:13",
														"nodeType": "YulTypedName",
														"src": "2367:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:13",
														"nodeType": "YulTypedName",
														"src": "2375:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:13",
														"nodeType": "YulTypedName",
														"src": "2383:5:13",
														"type": ""
													}
												],
												"src": "2316:355:13"
											},
											{
												"body": {
													"nativeSrc": "2722:32:13",
													"nodeType": "YulBlock",
													"src": "2722:32:13",
													"statements": [
														{
															"nativeSrc": "2732:16:13",
															"nodeType": "YulAssignment",
															"src": "2732:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "2743:5:13",
																"nodeType": "YulIdentifier",
																"src": "2743:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2677:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:13",
														"nodeType": "YulTypedName",
														"src": "2704:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:13",
														"nodeType": "YulTypedName",
														"src": "2714:7:13",
														"type": ""
													}
												],
												"src": "2677:77:13"
											},
											{
												"body": {
													"nativeSrc": "2803:79:13",
													"nodeType": "YulBlock",
													"src": "2803:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2860:16:13",
																"nodeType": "YulBlock",
																"src": "2860:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2869:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2872:1:13",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2862:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:13"
																			},
																			"nativeSrc": "2862:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:13"
																		},
																		"nativeSrc": "2862:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2826:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2851:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2833:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:13"
																				},
																				"nativeSrc": "2833:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2823:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:13"
																		},
																		"nativeSrc": "2823:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2816:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:13"
																},
																"nativeSrc": "2816:43:13",
																"nodeType": "YulFunctionCall",
																"src": "2816:43:13"
															},
															"nativeSrc": "2813:63:13",
															"nodeType": "YulIf",
															"src": "2813:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2760:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2796:5:13",
														"nodeType": "YulTypedName",
														"src": "2796:5:13",
														"type": ""
													}
												],
												"src": "2760:122:13"
											},
											{
												"body": {
													"nativeSrc": "2951:80:13",
													"nodeType": "YulBlock",
													"src": "2951:80:13",
													"statements": [
														{
															"nativeSrc": "2961:22:13",
															"nodeType": "YulAssignment",
															"src": "2961:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2976:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2970:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:13"
																},
																"nativeSrc": "2970:13:13",
																"nodeType": "YulFunctionCall",
																"src": "2970:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2961:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3019:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2992:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:13"
																},
																"nativeSrc": "2992:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2992:33:13"
															},
															"nativeSrc": "2992:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2888:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2929:6:13",
														"nodeType": "YulTypedName",
														"src": "2929:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2937:3:13",
														"nodeType": "YulTypedName",
														"src": "2937:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2945:5:13",
														"nodeType": "YulTypedName",
														"src": "2945:5:13",
														"type": ""
													}
												],
												"src": "2888:143:13"
											},
											{
												"body": {
													"nativeSrc": "3168:878:13",
													"nodeType": "YulBlock",
													"src": "3168:878:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3214:83:13",
																"nodeType": "YulBlock",
																"src": "3214:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3216:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3216:77:13"
																			},
																			"nativeSrc": "3216:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3216:79:13"
																		},
																		"nativeSrc": "3216:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3189:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3198:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3185:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:13"
																		},
																		"nativeSrc": "3185:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3181:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:13"
																},
																"nativeSrc": "3181:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3181:32:13"
															},
															"nativeSrc": "3178:119:13",
															"nodeType": "YulIf",
															"src": "3178:119:13"
														},
														{
															"nativeSrc": "3307:291:13",
															"nodeType": "YulBlock",
															"src": "3307:291:13",
															"statements": [
																{
																	"nativeSrc": "3322:38:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3346:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3346:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3357:1:13",
																						"nodeType": "YulLiteral",
																						"src": "3357:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3342:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3342:3:13"
																				},
																				"nativeSrc": "3342:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3342:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3336:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3336:5:13"
																		},
																		"nativeSrc": "3336:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3336:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3326:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3326:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3407:83:13",
																		"nodeType": "YulBlock",
																		"src": "3407:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3409:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3409:77:13"
																					},
																					"nativeSrc": "3409:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3409:79:13"
																				},
																				"nativeSrc": "3409:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3409:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3379:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3387:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3387:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3376:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3376:2:13"
																		},
																		"nativeSrc": "3376:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3376:30:13"
																	},
																	"nativeSrc": "3373:117:13",
																	"nodeType": "YulIf",
																	"src": "3373:117:13"
																},
																{
																	"nativeSrc": "3504:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3504:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3560:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3560:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3571:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3571:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3556:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3556:3:13"
																				},
																				"nativeSrc": "3556:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3556:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3580:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3580:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3514:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3514:41:13"
																		},
																		"nativeSrc": "3514:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3514:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3504:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3504:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3608:292:13",
															"nodeType": "YulBlock",
															"src": "3608:292:13",
															"statements": [
																{
																	"nativeSrc": "3623:39:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3623:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3647:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3647:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3658:2:13",
																						"nodeType": "YulLiteral",
																						"src": "3658:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3643:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3643:3:13"
																				},
																				"nativeSrc": "3643:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3643:18:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3637:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "3637:5:13"
																		},
																		"nativeSrc": "3637:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3637:25:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3627:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3627:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3709:83:13",
																		"nodeType": "YulBlock",
																		"src": "3709:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3711:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "3711:77:13"
																					},
																					"nativeSrc": "3711:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "3711:79:13"
																				},
																				"nativeSrc": "3711:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "3711:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3681:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3689:18:13",
																				"nodeType": "YulLiteral",
																				"src": "3689:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3678:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3678:2:13"
																		},
																		"nativeSrc": "3678:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3678:30:13"
																	},
																	"nativeSrc": "3675:117:13",
																	"nodeType": "YulIf",
																	"src": "3675:117:13"
																},
																{
																	"nativeSrc": "3806:84:13",
																	"nodeType": "YulAssignment",
																	"src": "3806:84:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3862:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "3862:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3873:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3873:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3858:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3858:3:13"
																				},
																				"nativeSrc": "3858:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3858:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3882:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3882:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3816:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3816:41:13"
																		},
																		"nativeSrc": "3816:74:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3816:74:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3806:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3806:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3910:129:13",
															"nodeType": "YulBlock",
															"src": "3910:129:13",
															"statements": [
																{
																	"nativeSrc": "3925:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3925:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3939:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3929:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3929:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3955:74:13",
																	"nodeType": "YulAssignment",
																	"src": "3955:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4001:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4001:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4012:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4012:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3997:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:13"
																				},
																				"nativeSrc": "3997:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3997:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4021:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4021:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3965:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "3965:31:13"
																		},
																		"nativeSrc": "3965:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3965:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3955:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3955:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "3037:1009:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3122:9:13",
														"nodeType": "YulTypedName",
														"src": "3122:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3133:7:13",
														"nodeType": "YulTypedName",
														"src": "3133:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3145:6:13",
														"nodeType": "YulTypedName",
														"src": "3145:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3153:6:13",
														"nodeType": "YulTypedName",
														"src": "3153:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3161:6:13",
														"nodeType": "YulTypedName",
														"src": "3161:6:13",
														"type": ""
													}
												],
												"src": "3037:1009:13"
											},
											{
												"body": {
													"nativeSrc": "4111:40:13",
													"nodeType": "YulBlock",
													"src": "4111:40:13",
													"statements": [
														{
															"nativeSrc": "4122:22:13",
															"nodeType": "YulAssignment",
															"src": "4122:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4138:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4138:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4132:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4132:5:13"
																},
																"nativeSrc": "4132:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4132:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4122:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4052:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4094:5:13",
														"nodeType": "YulTypedName",
														"src": "4094:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4104:6:13",
														"nodeType": "YulTypedName",
														"src": "4104:6:13",
														"type": ""
													}
												],
												"src": "4052:99:13"
											},
											{
												"body": {
													"nativeSrc": "4185:152:13",
													"nodeType": "YulBlock",
													"src": "4185:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4205:77:13",
																		"nodeType": "YulLiteral",
																		"src": "4205:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:13"
																},
																"nativeSrc": "4195:88:13",
																"nodeType": "YulFunctionCall",
																"src": "4195:88:13"
															},
															"nativeSrc": "4195:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "4195:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4299:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4302:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4302:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4292:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:13"
																},
																"nativeSrc": "4292:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4292:15:13"
															},
															"nativeSrc": "4292:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4292:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4323:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4326:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4326:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4316:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:13"
																},
																"nativeSrc": "4316:15:13",
																"nodeType": "YulFunctionCall",
																"src": "4316:15:13"
															},
															"nativeSrc": "4316:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "4316:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4157:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "4157:180:13"
											},
											{
												"body": {
													"nativeSrc": "4394:269:13",
													"nodeType": "YulBlock",
													"src": "4394:269:13",
													"statements": [
														{
															"nativeSrc": "4404:22:13",
															"nodeType": "YulAssignment",
															"src": "4404:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4418:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4414:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:13"
																},
																"nativeSrc": "4414:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4414:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4404:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:13"
																}
															]
														},
														{
															"nativeSrc": "4435:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "4435:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4465:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4461:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:13"
																},
																"nativeSrc": "4461:12:13",
																"nodeType": "YulFunctionCall",
																"src": "4461:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4439:18:13",
																	"nodeType": "YulTypedName",
																	"src": "4439:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4512:51:13",
																"nodeType": "YulBlock",
																"src": "4512:51:13",
																"statements": [
																	{
																		"nativeSrc": "4526:27:13",
																		"nodeType": "YulAssignment",
																		"src": "4526:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4540:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "4540:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4548:4:13",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4536:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "4536:3:13"
																			},
																			"nativeSrc": "4536:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4536:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4526:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4492:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "4492:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4485:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:13"
																},
																"nativeSrc": "4485:26:13",
																"nodeType": "YulFunctionCall",
																"src": "4485:26:13"
															},
															"nativeSrc": "4482:81:13",
															"nodeType": "YulIf",
															"src": "4482:81:13"
														},
														{
															"body": {
																"nativeSrc": "4615:42:13",
																"nodeType": "YulBlock",
																"src": "4615:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4629:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "4629:16:13"
																			},
																			"nativeSrc": "4629:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4629:18:13"
																		},
																		"nativeSrc": "4629:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4579:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "4579:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4602:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4610:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4599:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4599:2:13"
																		},
																		"nativeSrc": "4599:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4599:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4576:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "4576:2:13"
																},
																"nativeSrc": "4576:38:13",
																"nodeType": "YulFunctionCall",
																"src": "4576:38:13"
															},
															"nativeSrc": "4573:84:13",
															"nodeType": "YulIf",
															"src": "4573:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4343:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4378:4:13",
														"nodeType": "YulTypedName",
														"src": "4378:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4387:6:13",
														"nodeType": "YulTypedName",
														"src": "4387:6:13",
														"type": ""
													}
												],
												"src": "4343:320:13"
											},
											{
												"body": {
													"nativeSrc": "4723:87:13",
													"nodeType": "YulBlock",
													"src": "4723:87:13",
													"statements": [
														{
															"nativeSrc": "4733:11:13",
															"nodeType": "YulAssignment",
															"src": "4733:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "4741:3:13",
																"nodeType": "YulIdentifier",
																"src": "4741:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4733:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4733:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4761:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4764:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:13"
																},
																"nativeSrc": "4754:14:13",
																"nodeType": "YulFunctionCall",
																"src": "4754:14:13"
															},
															"nativeSrc": "4754:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "4754:14:13"
														},
														{
															"nativeSrc": "4777:26:13",
															"nodeType": "YulAssignment",
															"src": "4777:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4795:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4798:4:13",
																		"nodeType": "YulLiteral",
																		"src": "4798:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4785:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "4785:9:13"
																},
																"nativeSrc": "4785:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4785:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4669:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4710:3:13",
														"nodeType": "YulTypedName",
														"src": "4710:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4718:4:13",
														"nodeType": "YulTypedName",
														"src": "4718:4:13",
														"type": ""
													}
												],
												"src": "4669:141:13"
											},
											{
												"body": {
													"nativeSrc": "4860:49:13",
													"nodeType": "YulBlock",
													"src": "4860:49:13",
													"statements": [
														{
															"nativeSrc": "4870:33:13",
															"nodeType": "YulAssignment",
															"src": "4870:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4888:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4895:2:13",
																				"nodeType": "YulLiteral",
																				"src": "4895:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4884:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:13"
																		},
																		"nativeSrc": "4884:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4884:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4900:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4880:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:13"
																},
																"nativeSrc": "4880:23:13",
																"nodeType": "YulFunctionCall",
																"src": "4880:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4870:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4816:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4843:5:13",
														"nodeType": "YulTypedName",
														"src": "4843:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4853:6:13",
														"nodeType": "YulTypedName",
														"src": "4853:6:13",
														"type": ""
													}
												],
												"src": "4816:93:13"
											},
											{
												"body": {
													"nativeSrc": "4968:54:13",
													"nodeType": "YulBlock",
													"src": "4968:54:13",
													"statements": [
														{
															"nativeSrc": "4978:37:13",
															"nodeType": "YulAssignment",
															"src": "4978:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5003:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5003:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5009:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4999:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:13"
																},
																"nativeSrc": "4999:16:13",
																"nodeType": "YulFunctionCall",
																"src": "4999:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4978:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "4978:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4915:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4943:4:13",
														"nodeType": "YulTypedName",
														"src": "4943:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4949:5:13",
														"nodeType": "YulTypedName",
														"src": "4949:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4959:8:13",
														"nodeType": "YulTypedName",
														"src": "4959:8:13",
														"type": ""
													}
												],
												"src": "4915:107:13"
											},
											{
												"body": {
													"nativeSrc": "5104:317:13",
													"nodeType": "YulBlock",
													"src": "5104:317:13",
													"statements": [
														{
															"nativeSrc": "5114:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5114:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5135:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "5135:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5147:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5147:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5131:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:13"
																},
																"nativeSrc": "5131:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5131:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5118:9:13",
																	"nodeType": "YulTypedName",
																	"src": "5118:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5158:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5189:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5200:66:13",
																		"nodeType": "YulLiteral",
																		"src": "5200:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5170:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5170:18:13"
																},
																"nativeSrc": "5170:97:13",
																"nodeType": "YulFunctionCall",
																"src": "5170:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5162:4:13",
																	"nodeType": "YulTypedName",
																	"src": "5162:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5276:51:13",
															"nodeType": "YulAssignment",
															"src": "5276:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5307:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5318:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "5318:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5288:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "5288:18:13"
																},
																"nativeSrc": "5288:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5288:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5276:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "5276:8:13"
																}
															]
														},
														{
															"nativeSrc": "5336:30:13",
															"nodeType": "YulAssignment",
															"src": "5336:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5349:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5349:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5360:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5360:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5356:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:13"
																		},
																		"nativeSrc": "5356:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5356:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5345:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:13"
																},
																"nativeSrc": "5345:21:13",
																"nodeType": "YulFunctionCall",
																"src": "5345:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5336:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5336:5:13"
																}
															]
														},
														{
															"nativeSrc": "5375:40:13",
															"nodeType": "YulAssignment",
															"src": "5375:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5388:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5399:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "5399:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5409:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "5409:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5395:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:13"
																		},
																		"nativeSrc": "5395:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5385:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "5385:2:13"
																},
																"nativeSrc": "5385:30:13",
																"nodeType": "YulFunctionCall",
																"src": "5385:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5375:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5028:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5065:5:13",
														"nodeType": "YulTypedName",
														"src": "5065:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5072:10:13",
														"nodeType": "YulTypedName",
														"src": "5072:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5084:8:13",
														"nodeType": "YulTypedName",
														"src": "5084:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5097:6:13",
														"nodeType": "YulTypedName",
														"src": "5097:6:13",
														"type": ""
													}
												],
												"src": "5028:393:13"
											},
											{
												"body": {
													"nativeSrc": "5459:28:13",
													"nodeType": "YulBlock",
													"src": "5459:28:13",
													"statements": [
														{
															"nativeSrc": "5469:12:13",
															"nodeType": "YulAssignment",
															"src": "5469:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "5476:5:13",
																"nodeType": "YulIdentifier",
																"src": "5476:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5469:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5427:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5445:5:13",
														"nodeType": "YulTypedName",
														"src": "5445:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5455:3:13",
														"nodeType": "YulTypedName",
														"src": "5455:3:13",
														"type": ""
													}
												],
												"src": "5427:60:13"
											},
											{
												"body": {
													"nativeSrc": "5553:82:13",
													"nodeType": "YulBlock",
													"src": "5553:82:13",
													"statements": [
														{
															"nativeSrc": "5563:66:13",
															"nodeType": "YulAssignment",
															"src": "5563:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5621:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5621:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5603:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5603:17:13"
																				},
																				"nativeSrc": "5603:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5603:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5594:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "5594:8:13"
																		},
																		"nativeSrc": "5594:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5576:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "5576:17:13"
																},
																"nativeSrc": "5576:53:13",
																"nodeType": "YulFunctionCall",
																"src": "5576:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5563:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "5563:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5493:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5533:5:13",
														"nodeType": "YulTypedName",
														"src": "5533:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5543:9:13",
														"nodeType": "YulTypedName",
														"src": "5543:9:13",
														"type": ""
													}
												],
												"src": "5493:142:13"
											},
											{
												"body": {
													"nativeSrc": "5688:28:13",
													"nodeType": "YulBlock",
													"src": "5688:28:13",
													"statements": [
														{
															"nativeSrc": "5698:12:13",
															"nodeType": "YulAssignment",
															"src": "5698:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "5705:5:13",
																"nodeType": "YulIdentifier",
																"src": "5705:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5698:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5641:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5674:5:13",
														"nodeType": "YulTypedName",
														"src": "5674:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5684:3:13",
														"nodeType": "YulTypedName",
														"src": "5684:3:13",
														"type": ""
													}
												],
												"src": "5641:75:13"
											},
											{
												"body": {
													"nativeSrc": "5798:193:13",
													"nodeType": "YulBlock",
													"src": "5798:193:13",
													"statements": [
														{
															"nativeSrc": "5808:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "5808:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5863:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "5863:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5832:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "5832:30:13"
																},
																"nativeSrc": "5832:39:13",
																"nodeType": "YulFunctionCall",
																"src": "5832:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5812:16:13",
																	"nodeType": "YulTypedName",
																	"src": "5812:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5887:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "5887:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5927:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "5927:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5921:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "5921:5:13"
																				},
																				"nativeSrc": "5921:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5921:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5934:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5934:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5966:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "5966:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5942:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "5942:23:13"
																				},
																				"nativeSrc": "5942:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5942:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5893:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "5893:27:13"
																		},
																		"nativeSrc": "5893:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5893:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5880:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:13"
																},
																"nativeSrc": "5880:105:13",
																"nodeType": "YulFunctionCall",
																"src": "5880:105:13"
															},
															"nativeSrc": "5880:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "5880:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5722:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5775:4:13",
														"nodeType": "YulTypedName",
														"src": "5775:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5781:6:13",
														"nodeType": "YulTypedName",
														"src": "5781:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5789:7:13",
														"nodeType": "YulTypedName",
														"src": "5789:7:13",
														"type": ""
													}
												],
												"src": "5722:269:13"
											},
											{
												"body": {
													"nativeSrc": "6046:24:13",
													"nodeType": "YulBlock",
													"src": "6046:24:13",
													"statements": [
														{
															"nativeSrc": "6056:8:13",
															"nodeType": "YulAssignment",
															"src": "6056:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "6063:1:13",
																"nodeType": "YulLiteral",
																"src": "6063:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6056:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5997:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6042:3:13",
														"nodeType": "YulTypedName",
														"src": "6042:3:13",
														"type": ""
													}
												],
												"src": "5997:73:13"
											},
											{
												"body": {
													"nativeSrc": "6129:136:13",
													"nodeType": "YulBlock",
													"src": "6129:136:13",
													"statements": [
														{
															"nativeSrc": "6139:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "6139:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6153:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "6153:30:13"
																},
																"nativeSrc": "6153:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6153:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6143:6:13",
																	"nodeType": "YulTypedName",
																	"src": "6143:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6238:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "6238:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6244:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6252:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6194:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6194:43:13"
																},
																"nativeSrc": "6194:65:13",
																"nodeType": "YulFunctionCall",
																"src": "6194:65:13"
															},
															"nativeSrc": "6194:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "6194:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6076:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6115:4:13",
														"nodeType": "YulTypedName",
														"src": "6115:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6121:6:13",
														"nodeType": "YulTypedName",
														"src": "6121:6:13",
														"type": ""
													}
												],
												"src": "6076:189:13"
											},
											{
												"body": {
													"nativeSrc": "6321:136:13",
													"nodeType": "YulBlock",
													"src": "6321:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6388:63:13",
																"nodeType": "YulBlock",
																"src": "6388:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6432:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6432:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6439:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6402:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "6402:29:13"
																			},
																			"nativeSrc": "6402:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6402:39:13"
																		},
																		"nativeSrc": "6402:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6341:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6341:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6348:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6338:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6338:2:13"
																},
																"nativeSrc": "6338:14:13",
																"nodeType": "YulFunctionCall",
																"src": "6338:14:13"
															},
															"nativeSrc": "6331:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6353:26:13",
																"nodeType": "YulBlock",
																"src": "6353:26:13",
																"statements": [
																	{
																		"nativeSrc": "6355:22:13",
																		"nodeType": "YulAssignment",
																		"src": "6355:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6368:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6368:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6375:1:13",
																					"nodeType": "YulLiteral",
																					"src": "6375:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6364:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6364:3:13"
																			},
																			"nativeSrc": "6364:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6364:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6355:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6355:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6335:2:13",
																"nodeType": "YulBlock",
																"src": "6335:2:13",
																"statements": []
															},
															"src": "6331:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6271:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6309:5:13",
														"nodeType": "YulTypedName",
														"src": "6309:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6316:3:13",
														"nodeType": "YulTypedName",
														"src": "6316:3:13",
														"type": ""
													}
												],
												"src": "6271:186:13"
											},
											{
												"body": {
													"nativeSrc": "6542:464:13",
													"nodeType": "YulBlock",
													"src": "6542:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6568:431:13",
																"nodeType": "YulBlock",
																"src": "6568:431:13",
																"statements": [
																	{
																		"nativeSrc": "6582:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6582:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6630:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "6630:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6598:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "6598:31:13"
																			},
																			"nativeSrc": "6598:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6598:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6586:8:13",
																				"nodeType": "YulTypedName",
																				"src": "6586:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6649:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6649:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6672:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "6672:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6700:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "6700:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6682:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "6682:17:13"
																					},
																					"nativeSrc": "6682:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6682:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6668:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "6668:3:13"
																			},
																			"nativeSrc": "6668:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6668:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6653:11:13",
																				"nodeType": "YulTypedName",
																				"src": "6653:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6869:27:13",
																			"nodeType": "YulBlock",
																			"src": "6869:27:13",
																			"statements": [
																				{
																					"nativeSrc": "6871:23:13",
																					"nodeType": "YulAssignment",
																					"src": "6871:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6886:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "6886:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6871:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "6871:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6853:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6853:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6865:2:13",
																					"nodeType": "YulLiteral",
																					"src": "6865:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6850:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "6850:2:13"
																			},
																			"nativeSrc": "6850:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6850:18:13"
																		},
																		"nativeSrc": "6847:49:13",
																		"nodeType": "YulIf",
																		"src": "6847:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6938:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "6938:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6955:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "6955:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6983:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "6983:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6965:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "6965:17:13"
																							},
																							"nativeSrc": "6965:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "6965:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6951:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6951:3:13"
																					},
																					"nativeSrc": "6951:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6951:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6909:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "6909:28:13"
																			},
																			"nativeSrc": "6909:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6909:80:13"
																		},
																		"nativeSrc": "6909:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6559:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6564:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6556:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "6556:2:13"
																},
																"nativeSrc": "6556:11:13",
																"nodeType": "YulFunctionCall",
																"src": "6556:11:13"
															},
															"nativeSrc": "6553:446:13",
															"nodeType": "YulIf",
															"src": "6553:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6463:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6518:5:13",
														"nodeType": "YulTypedName",
														"src": "6518:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6525:3:13",
														"nodeType": "YulTypedName",
														"src": "6525:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6530:10:13",
														"nodeType": "YulTypedName",
														"src": "6530:10:13",
														"type": ""
													}
												],
												"src": "6463:543:13"
											},
											{
												"body": {
													"nativeSrc": "7075:54:13",
													"nodeType": "YulBlock",
													"src": "7075:54:13",
													"statements": [
														{
															"nativeSrc": "7085:37:13",
															"nodeType": "YulAssignment",
															"src": "7085:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7110:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7110:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7116:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7116:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7106:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:13"
																},
																"nativeSrc": "7106:16:13",
																"nodeType": "YulFunctionCall",
																"src": "7106:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7085:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "7085:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7012:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7050:4:13",
														"nodeType": "YulTypedName",
														"src": "7050:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7056:5:13",
														"nodeType": "YulTypedName",
														"src": "7056:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7066:8:13",
														"nodeType": "YulTypedName",
														"src": "7066:8:13",
														"type": ""
													}
												],
												"src": "7012:117:13"
											},
											{
												"body": {
													"nativeSrc": "7186:118:13",
													"nodeType": "YulBlock",
													"src": "7186:118:13",
													"statements": [
														{
															"nativeSrc": "7196:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7196:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7245:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7245:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7248:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "7248:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7241:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:13"
																				},
																				"nativeSrc": "7241:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7241:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7260:1:13",
																						"nodeType": "YulLiteral",
																						"src": "7260:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7256:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7256:3:13"
																				},
																				"nativeSrc": "7256:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7256:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7212:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "7212:28:13"
																		},
																		"nativeSrc": "7212:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7208:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:13"
																},
																"nativeSrc": "7208:56:13",
																"nodeType": "YulFunctionCall",
																"src": "7208:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7200:4:13",
																	"nodeType": "YulTypedName",
																	"src": "7200:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7273:25:13",
															"nodeType": "YulAssignment",
															"src": "7273:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7287:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7293:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7293:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7283:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:13"
																},
																"nativeSrc": "7283:15:13",
																"nodeType": "YulFunctionCall",
																"src": "7283:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7273:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7135:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7163:4:13",
														"nodeType": "YulTypedName",
														"src": "7163:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7169:5:13",
														"nodeType": "YulTypedName",
														"src": "7169:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7179:6:13",
														"nodeType": "YulTypedName",
														"src": "7179:6:13",
														"type": ""
													}
												],
												"src": "7135:169:13"
											},
											{
												"body": {
													"nativeSrc": "7390:214:13",
													"nodeType": "YulBlock",
													"src": "7390:214:13",
													"statements": [
														{
															"nativeSrc": "7523:37:13",
															"nodeType": "YulAssignment",
															"src": "7523:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7550:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7556:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7531:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "7531:18:13"
																},
																"nativeSrc": "7531:29:13",
																"nodeType": "YulFunctionCall",
																"src": "7531:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7523:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7523:4:13"
																}
															]
														},
														{
															"nativeSrc": "7569:29:13",
															"nodeType": "YulAssignment",
															"src": "7569:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7580:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "7580:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7590:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7593:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "7593:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7586:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:13"
																		},
																		"nativeSrc": "7586:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7586:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7577:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:13"
																},
																"nativeSrc": "7577:21:13",
																"nodeType": "YulFunctionCall",
																"src": "7577:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7569:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7309:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7371:4:13",
														"nodeType": "YulTypedName",
														"src": "7371:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7377:3:13",
														"nodeType": "YulTypedName",
														"src": "7377:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7385:4:13",
														"nodeType": "YulTypedName",
														"src": "7385:4:13",
														"type": ""
													}
												],
												"src": "7309:295:13"
											},
											{
												"body": {
													"nativeSrc": "7701:1303:13",
													"nodeType": "YulBlock",
													"src": "7701:1303:13",
													"statements": [
														{
															"nativeSrc": "7712:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7712:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7759:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7759:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7726:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "7726:32:13"
																},
																"nativeSrc": "7726:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7726:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7716:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7716:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7848:22:13",
																"nodeType": "YulBlock",
																"src": "7848:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7850:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:13"
																			},
																			"nativeSrc": "7850:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:13"
																		},
																		"nativeSrc": "7850:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7820:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7828:18:13",
																		"nodeType": "YulLiteral",
																		"src": "7828:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7817:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:13"
																},
																"nativeSrc": "7817:30:13",
																"nodeType": "YulFunctionCall",
																"src": "7817:30:13"
															},
															"nativeSrc": "7814:56:13",
															"nodeType": "YulIf",
															"src": "7814:56:13"
														},
														{
															"nativeSrc": "7880:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "7880:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7926:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7920:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "7920:5:13"
																		},
																		"nativeSrc": "7920:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7920:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7894:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "7894:25:13"
																},
																"nativeSrc": "7894:38:13",
																"nodeType": "YulFunctionCall",
																"src": "7894:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7884:6:13",
																	"nodeType": "YulTypedName",
																	"src": "7884:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8025:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8025:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8031:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8039:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7979:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "7979:45:13"
																},
																"nativeSrc": "7979:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7979:67:13"
															},
															"nativeSrc": "7979:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7979:67:13"
														},
														{
															"nativeSrc": "8056:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8056:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8073:1:13",
																"nodeType": "YulLiteral",
																"src": "8073:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8060:9:13",
																	"nodeType": "YulTypedName",
																	"src": "8060:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8084:17:13",
															"nodeType": "YulAssignment",
															"src": "8084:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "8097:4:13",
																"nodeType": "YulLiteral",
																"src": "8097:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8084:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "8084:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8148:611:13",
																		"nodeType": "YulBlock",
																		"src": "8148:611:13",
																		"statements": [
																			{
																				"nativeSrc": "8162:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8162:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8181:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "8181:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8193:4:13",
																									"nodeType": "YulLiteral",
																									"src": "8193:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8189:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8189:3:13"
																							},
																							"nativeSrc": "8189:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8189:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8177:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "8177:3:13"
																					},
																					"nativeSrc": "8177:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8177:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8166:7:13",
																						"nodeType": "YulTypedName",
																						"src": "8166:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8213:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8213:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8259:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8259:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8227:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "8227:31:13"
																					},
																					"nativeSrc": "8227:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8227:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8217:6:13",
																						"nodeType": "YulTypedName",
																						"src": "8217:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8277:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8277:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8286:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8286:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8281:1:13",
																						"nodeType": "YulTypedName",
																						"src": "8281:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8345:163:13",
																					"nodeType": "YulBlock",
																					"src": "8345:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8370:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8370:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8388:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "8388:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8393:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "8393:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8384:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "8384:3:13"
																												},
																												"nativeSrc": "8384:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "8384:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8378:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "8378:5:13"
																										},
																										"nativeSrc": "8378:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8378:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8363:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8363:6:13"
																								},
																								"nativeSrc": "8363:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8363:42:13"
																							},
																							"nativeSrc": "8363:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8363:42:13"
																						},
																						{
																							"nativeSrc": "8422:24:13",
																							"nodeType": "YulAssignment",
																							"src": "8422:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8436:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8436:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8444:1:13",
																										"nodeType": "YulLiteral",
																										"src": "8444:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8432:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8432:3:13"
																								},
																								"nativeSrc": "8432:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8432:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8422:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8422:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8463:31:13",
																							"nodeType": "YulAssignment",
																							"src": "8463:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8480:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "8480:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8491:2:13",
																										"nodeType": "YulLiteral",
																										"src": "8491:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8476:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8476:3:13"
																								},
																								"nativeSrc": "8476:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8476:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8463:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "8463:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8311:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "8311:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8314:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "8314:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8308:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8308:2:13"
																					},
																					"nativeSrc": "8308:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8308:14:13"
																				},
																				"nativeSrc": "8300:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8323:21:13",
																					"nodeType": "YulBlock",
																					"src": "8323:21:13",
																					"statements": [
																						{
																							"nativeSrc": "8325:17:13",
																							"nodeType": "YulAssignment",
																							"src": "8325:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8334:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "8334:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8337:4:13",
																										"nodeType": "YulLiteral",
																										"src": "8337:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8330:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "8330:3:13"
																								},
																								"nativeSrc": "8330:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8330:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8325:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "8325:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8304:3:13",
																					"nodeType": "YulBlock",
																					"src": "8304:3:13",
																					"statements": []
																				},
																				"src": "8300:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "8544:156:13",
																					"nodeType": "YulBlock",
																					"src": "8544:156:13",
																					"statements": [
																						{
																							"nativeSrc": "8562:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8562:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8589:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "8589:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8594:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8594:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8585:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "8585:3:13"
																										},
																										"nativeSrc": "8585:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8585:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8579:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8579:5:13"
																								},
																								"nativeSrc": "8579:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8579:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8566:9:13",
																									"nodeType": "YulTypedName",
																									"src": "8566:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8629:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "8629:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8656:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8656:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8671:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "8671:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8679:4:13",
																														"nodeType": "YulLiteral",
																														"src": "8679:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8667:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "8667:3:13"
																												},
																												"nativeSrc": "8667:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "8667:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8637:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "8637:18:13"
																										},
																										"nativeSrc": "8637:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8637:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8622:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8622:6:13"
																								},
																								"nativeSrc": "8622:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8622:64:13"
																							},
																							"nativeSrc": "8622:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "8622:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8527:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "8527:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8536:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "8536:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8524:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "8524:2:13"
																					},
																					"nativeSrc": "8524:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8524:19:13"
																				},
																				"nativeSrc": "8521:179:13",
																				"nodeType": "YulIf",
																				"src": "8521:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8720:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8720:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8734:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "8734:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8742:1:13",
																											"nodeType": "YulLiteral",
																											"src": "8742:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8730:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "8730:3:13"
																									},
																									"nativeSrc": "8730:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "8730:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8746:1:13",
																									"nodeType": "YulLiteral",
																									"src": "8746:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8726:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "8726:3:13"
																							},
																							"nativeSrc": "8726:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8726:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8713:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8713:6:13"
																					},
																					"nativeSrc": "8713:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8713:36:13"
																				},
																				"nativeSrc": "8713:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8713:36:13"
																			}
																		]
																	},
																	"nativeSrc": "8141:618:13",
																	"nodeType": "YulCase",
																	"src": "8141:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8146:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8146:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8776:222:13",
																		"nodeType": "YulBlock",
																		"src": "8776:222:13",
																		"statements": [
																			{
																				"nativeSrc": "8790:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8790:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8803:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8803:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8794:5:13",
																						"nodeType": "YulTypedName",
																						"src": "8794:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8827:67:13",
																					"nodeType": "YulBlock",
																					"src": "8827:67:13",
																					"statements": [
																						{
																							"nativeSrc": "8845:35:13",
																							"nodeType": "YulAssignment",
																							"src": "8845:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8864:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "8864:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8869:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "8869:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8860:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "8860:3:13"
																										},
																										"nativeSrc": "8860:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "8860:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8854:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8854:5:13"
																								},
																								"nativeSrc": "8854:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "8854:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8845:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8845:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8820:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8820:6:13"
																				},
																				"nativeSrc": "8817:77:13",
																				"nodeType": "YulIf",
																				"src": "8817:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8914:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "8914:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8973:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "8973:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8980:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "8980:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8920:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "8920:52:13"
																							},
																							"nativeSrc": "8920:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "8920:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8907:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8907:6:13"
																					},
																					"nativeSrc": "8907:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "8907:81:13"
																				},
																				"nativeSrc": "8907:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "8907:81:13"
																			}
																		]
																	},
																	"nativeSrc": "8768:230:13",
																	"nodeType": "YulCase",
																	"src": "8768:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8121:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8121:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8129:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8118:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8118:2:13"
																},
																"nativeSrc": "8118:14:13",
																"nodeType": "YulFunctionCall",
																"src": "8118:14:13"
															},
															"nativeSrc": "8111:887:13",
															"nodeType": "YulSwitch",
															"src": "8111:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7609:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7690:4:13",
														"nodeType": "YulTypedName",
														"src": "7690:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7696:3:13",
														"nodeType": "YulTypedName",
														"src": "7696:3:13",
														"type": ""
													}
												],
												"src": "7609:1395:13"
											},
											{
												"body": {
													"nativeSrc": "9038:152:13",
													"nodeType": "YulBlock",
													"src": "9038:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9055:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9055:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9058:77:13",
																		"nodeType": "YulLiteral",
																		"src": "9058:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9048:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:13"
																},
																"nativeSrc": "9048:88:13",
																"nodeType": "YulFunctionCall",
																"src": "9048:88:13"
															},
															"nativeSrc": "9048:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "9048:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9152:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9152:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9155:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9145:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9145:6:13"
																},
																"nativeSrc": "9145:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9145:15:13"
															},
															"nativeSrc": "9145:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9145:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9176:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9176:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9179:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9179:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9169:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9169:6:13"
																},
																"nativeSrc": "9169:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9169:15:13"
															},
															"nativeSrc": "9169:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9169:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9010:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9010:180:13"
											},
											{
												"body": {
													"nativeSrc": "9247:51:13",
													"nodeType": "YulBlock",
													"src": "9247:51:13",
													"statements": [
														{
															"nativeSrc": "9257:34:13",
															"nodeType": "YulAssignment",
															"src": "9257:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9282:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9282:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9285:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9285:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9278:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9278:3:13"
																},
																"nativeSrc": "9278:13:13",
																"nodeType": "YulFunctionCall",
																"src": "9278:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9257:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "9257:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9196:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9228:5:13",
														"nodeType": "YulTypedName",
														"src": "9228:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9238:8:13",
														"nodeType": "YulTypedName",
														"src": "9238:8:13",
														"type": ""
													}
												],
												"src": "9196:102:13"
											},
											{
												"body": {
													"nativeSrc": "9377:775:13",
													"nodeType": "YulBlock",
													"src": "9377:775:13",
													"statements": [
														{
															"nativeSrc": "9387:15:13",
															"nodeType": "YulAssignment",
															"src": "9387:15:13",
															"value": {
																"name": "_power",
																"nativeSrc": "9396:6:13",
																"nodeType": "YulIdentifier",
																"src": "9396:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9387:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9387:5:13"
																}
															]
														},
														{
															"nativeSrc": "9411:14:13",
															"nodeType": "YulAssignment",
															"src": "9411:14:13",
															"value": {
																"name": "_base",
																"nativeSrc": "9420:5:13",
																"nodeType": "YulIdentifier",
																"src": "9420:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9411:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9411:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9469:677:13",
																"nodeType": "YulBlock",
																"src": "9469:677:13",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9557:22:13",
																			"nodeType": "YulBlock",
																			"src": "9557:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9559:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "9559:16:13"
																						},
																						"nativeSrc": "9559:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "9559:18:13"
																					},
																					"nativeSrc": "9559:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "9559:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9535:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "9535:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9545:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "9545:3:13"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9550:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "9550:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9541:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "9541:3:13"
																					},
																					"nativeSrc": "9541:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "9541:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9532:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "9532:2:13"
																			},
																			"nativeSrc": "9532:24:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9532:24:13"
																		},
																		"nativeSrc": "9529:50:13",
																		"nodeType": "YulIf",
																		"src": "9529:50:13"
																	},
																	{
																		"body": {
																			"nativeSrc": "9624:419:13",
																			"nodeType": "YulBlock",
																			"src": "9624:419:13",
																			"statements": [
																				{
																					"nativeSrc": "10004:25:13",
																					"nodeType": "YulAssignment",
																					"src": "10004:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10017:5:13",
																								"nodeType": "YulIdentifier",
																								"src": "10017:5:13"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10024:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "10024:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10013:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10013:3:13"
																						},
																						"nativeSrc": "10013:16:13",
																						"nodeType": "YulFunctionCall",
																						"src": "10013:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10004:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "10004:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9599:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "9599:8:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9609:1:13",
																					"nodeType": "YulLiteral",
																					"src": "9609:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9595:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "9595:3:13"
																			},
																			"nativeSrc": "9595:16:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9595:16:13"
																		},
																		"nativeSrc": "9592:451:13",
																		"nodeType": "YulIf",
																		"src": "9592:451:13"
																	},
																	{
																		"nativeSrc": "10056:23:13",
																		"nodeType": "YulAssignment",
																		"src": "10056:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10068:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "10068:4:13"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10074:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "10074:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10064:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10064:3:13"
																			},
																			"nativeSrc": "10064:15:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10064:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10056:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "10056:4:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10092:44:13",
																		"nodeType": "YulAssignment",
																		"src": "10092:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10127:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "10127:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10104:22:13",
																				"nodeType": "YulIdentifier",
																				"src": "10104:22:13"
																			},
																			"nativeSrc": "10104:32:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10104:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10092:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "10092:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9445:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "9445:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9455:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9455:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9442:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9442:2:13"
																},
																"nativeSrc": "9442:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9442:15:13"
															},
															"nativeSrc": "9434:712:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9458:2:13",
																"nodeType": "YulBlock",
																"src": "9458:2:13",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9438:3:13",
																"nodeType": "YulBlock",
																"src": "9438:3:13",
																"statements": []
															},
															"src": "9434:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9304:848:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9332:6:13",
														"nodeType": "YulTypedName",
														"src": "9332:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9340:5:13",
														"nodeType": "YulTypedName",
														"src": "9340:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9347:8:13",
														"nodeType": "YulTypedName",
														"src": "9347:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9357:3:13",
														"nodeType": "YulTypedName",
														"src": "9357:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9365:5:13",
														"nodeType": "YulTypedName",
														"src": "9365:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9372:4:13",
														"nodeType": "YulTypedName",
														"src": "9372:4:13",
														"type": ""
													}
												],
												"src": "9304:848:13"
											},
											{
												"body": {
													"nativeSrc": "10218:1013:13",
													"nodeType": "YulBlock",
													"src": "10218:1013:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10413:20:13",
																"nodeType": "YulBlock",
																"src": "10413:20:13",
																"statements": [
																	{
																		"nativeSrc": "10415:10:13",
																		"nodeType": "YulAssignment",
																		"src": "10415:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10424:1:13",
																			"nodeType": "YulLiteral",
																			"src": "10424:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10415:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10415:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10426:5:13",
																		"nodeType": "YulLeave",
																		"src": "10426:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10403:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "10403:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10396:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10396:6:13"
																},
																"nativeSrc": "10396:16:13",
																"nodeType": "YulFunctionCall",
																"src": "10396:16:13"
															},
															"nativeSrc": "10393:40:13",
															"nodeType": "YulIf",
															"src": "10393:40:13"
														},
														{
															"body": {
																"nativeSrc": "10458:20:13",
																"nodeType": "YulBlock",
																"src": "10458:20:13",
																"statements": [
																	{
																		"nativeSrc": "10460:10:13",
																		"nodeType": "YulAssignment",
																		"src": "10460:10:13",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10469:1:13",
																			"nodeType": "YulLiteral",
																			"src": "10469:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10460:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10460:5:13"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10471:5:13",
																		"nodeType": "YulLeave",
																		"src": "10471:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10452:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "10452:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10445:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10445:6:13"
																},
																"nativeSrc": "10445:12:13",
																"nodeType": "YulFunctionCall",
																"src": "10445:12:13"
															},
															"nativeSrc": "10442:36:13",
															"nodeType": "YulIf",
															"src": "10442:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10588:20:13",
																		"nodeType": "YulBlock",
																		"src": "10588:20:13",
																		"statements": [
																			{
																				"nativeSrc": "10590:10:13",
																				"nodeType": "YulAssignment",
																				"src": "10590:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "10599:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10590:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10590:5:13"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10601:5:13",
																				"nodeType": "YulLeave",
																				"src": "10601:5:13"
																			}
																		]
																	},
																	"nativeSrc": "10581:27:13",
																	"nodeType": "YulCase",
																	"src": "10581:27:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10586:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10586:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10632:176:13",
																		"nodeType": "YulBlock",
																		"src": "10632:176:13",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10667:22:13",
																					"nodeType": "YulBlock",
																					"src": "10667:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10669:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "10669:16:13"
																								},
																								"nativeSrc": "10669:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "10669:18:13"
																							},
																							"nativeSrc": "10669:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "10669:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10652:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "10652:8:13"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10662:3:13",
																							"nodeType": "YulLiteral",
																							"src": "10662:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10649:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "10649:2:13"
																					},
																					"nativeSrc": "10649:17:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10649:17:13"
																				},
																				"nativeSrc": "10646:43:13",
																				"nodeType": "YulIf",
																				"src": "10646:43:13"
																			},
																			{
																				"nativeSrc": "10702:25:13",
																				"nodeType": "YulAssignment",
																				"src": "10702:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10715:1:13",
																							"nodeType": "YulLiteral",
																							"src": "10715:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10718:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "10718:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10711:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "10711:3:13"
																					},
																					"nativeSrc": "10711:16:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10711:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10702:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10702:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10758:22:13",
																					"nodeType": "YulBlock",
																					"src": "10758:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10760:16:13",
																									"nodeType": "YulIdentifier",
																									"src": "10760:16:13"
																								},
																								"nativeSrc": "10760:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "10760:18:13"
																							},
																							"nativeSrc": "10760:18:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "10760:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10746:5:13",
																							"nodeType": "YulIdentifier",
																							"src": "10746:5:13"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10753:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "10753:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10743:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "10743:2:13"
																					},
																					"nativeSrc": "10743:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "10743:14:13"
																				},
																				"nativeSrc": "10740:40:13",
																				"nodeType": "YulIf",
																				"src": "10740:40:13"
																			},
																			{
																				"nativeSrc": "10793:5:13",
																				"nodeType": "YulLeave",
																				"src": "10793:5:13"
																			}
																		]
																	},
																	"nativeSrc": "10617:191:13",
																	"nodeType": "YulCase",
																	"src": "10617:191:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10622:1:13",
																		"nodeType": "YulLiteral",
																		"src": "10622:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10538:4:13",
																"nodeType": "YulIdentifier",
																"src": "10538:4:13"
															},
															"nativeSrc": "10531:277:13",
															"nodeType": "YulSwitch",
															"src": "10531:277:13"
														},
														{
															"body": {
																"nativeSrc": "10940:123:13",
																"nodeType": "YulBlock",
																"src": "10940:123:13",
																"statements": [
																	{
																		"nativeSrc": "10954:28:13",
																		"nodeType": "YulAssignment",
																		"src": "10954:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10967:4:13",
																					"nodeType": "YulIdentifier",
																					"src": "10967:4:13"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10973:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "10973:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10963:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "10963:3:13"
																			},
																			"nativeSrc": "10963:19:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10963:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10954:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10954:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11013:22:13",
																			"nodeType": "YulBlock",
																			"src": "11013:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11015:16:13",
																							"nodeType": "YulIdentifier",
																							"src": "11015:16:13"
																						},
																						"nativeSrc": "11015:18:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11015:18:13"
																					},
																					"nativeSrc": "11015:18:13",
																					"nodeType": "YulExpressionStatement",
																					"src": "11015:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11001:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "11001:5:13"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11008:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11008:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10998:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "10998:2:13"
																			},
																			"nativeSrc": "10998:14:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10998:14:13"
																		},
																		"nativeSrc": "10995:40:13",
																		"nodeType": "YulIf",
																		"src": "10995:40:13"
																	},
																	{
																		"nativeSrc": "11048:5:13",
																		"nodeType": "YulLeave",
																		"src": "11048:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10843:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "10843:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10849:2:13",
																						"nodeType": "YulLiteral",
																						"src": "10849:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10840:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "10840:2:13"
																				},
																				"nativeSrc": "10840:12:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10840:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10857:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "10857:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10867:2:13",
																						"nodeType": "YulLiteral",
																						"src": "10867:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10854:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "10854:2:13"
																				},
																				"nativeSrc": "10854:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10854:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10836:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10836:3:13"
																		},
																		"nativeSrc": "10836:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10836:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10892:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "10892:4:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10898:3:13",
																						"nodeType": "YulLiteral",
																						"src": "10898:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10889:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "10889:2:13"
																				},
																				"nativeSrc": "10889:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10889:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10907:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "10907:8:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10917:2:13",
																						"nodeType": "YulLiteral",
																						"src": "10917:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10904:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "10904:2:13"
																				},
																				"nativeSrc": "10904:16:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10904:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10885:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10885:3:13"
																		},
																		"nativeSrc": "10885:36:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10885:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10820:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "10820:2:13"
																},
																"nativeSrc": "10820:111:13",
																"nodeType": "YulFunctionCall",
																"src": "10820:111:13"
															},
															"nativeSrc": "10817:246:13",
															"nodeType": "YulIf",
															"src": "10817:246:13"
														},
														{
															"nativeSrc": "11073:57:13",
															"nodeType": "YulAssignment",
															"src": "11073:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11107:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11107:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11110:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11110:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11116:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "11116:8:13"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11126:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11126:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11088:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "11088:18:13"
																},
																"nativeSrc": "11088:42:13",
																"nodeType": "YulFunctionCall",
																"src": "11088:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11073:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11073:5:13"
																},
																{
																	"name": "base",
																	"nativeSrc": "11080:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11080:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11169:22:13",
																"nodeType": "YulBlock",
																"src": "11169:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11171:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11171:16:13"
																			},
																			"nativeSrc": "11171:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11171:18:13"
																		},
																		"nativeSrc": "11171:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11171:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11146:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11146:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11157:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "11157:3:13"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11162:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "11162:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11153:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "11153:3:13"
																		},
																		"nativeSrc": "11153:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11153:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11143:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11143:2:13"
																},
																"nativeSrc": "11143:25:13",
																"nodeType": "YulFunctionCall",
																"src": "11143:25:13"
															},
															"nativeSrc": "11140:51:13",
															"nodeType": "YulIf",
															"src": "11140:51:13"
														},
														{
															"nativeSrc": "11200:25:13",
															"nodeType": "YulAssignment",
															"src": "11200:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11213:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11213:5:13"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11220:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11220:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11209:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11209:3:13"
																},
																"nativeSrc": "11209:16:13",
																"nodeType": "YulFunctionCall",
																"src": "11209:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11200:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11200:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10158:1073:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10188:4:13",
														"nodeType": "YulTypedName",
														"src": "10188:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10194:8:13",
														"nodeType": "YulTypedName",
														"src": "10194:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10204:3:13",
														"nodeType": "YulTypedName",
														"src": "10204:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10212:5:13",
														"nodeType": "YulTypedName",
														"src": "10212:5:13",
														"type": ""
													}
												],
												"src": "10158:1073:13"
											},
											{
												"body": {
													"nativeSrc": "11303:219:13",
													"nodeType": "YulBlock",
													"src": "11303:219:13",
													"statements": [
														{
															"nativeSrc": "11313:31:13",
															"nodeType": "YulAssignment",
															"src": "11313:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11339:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11339:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11321:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11321:17:13"
																},
																"nativeSrc": "11321:23:13",
																"nodeType": "YulFunctionCall",
																"src": "11321:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11313:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "11313:4:13"
																}
															]
														},
														{
															"nativeSrc": "11353:39:13",
															"nodeType": "YulAssignment",
															"src": "11353:39:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11383:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "11383:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11365:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11365:17:13"
																},
																"nativeSrc": "11365:27:13",
																"nodeType": "YulFunctionCall",
																"src": "11365:27:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11353:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "11353:8:13"
																}
															]
														},
														{
															"nativeSrc": "11402:113:13",
															"nodeType": "YulAssignment",
															"src": "11402:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11432:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "11432:4:13"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11438:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "11438:8:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11448:66:13",
																		"nodeType": "YulLiteral",
																		"src": "11448:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11411:20:13",
																	"nodeType": "YulIdentifier",
																	"src": "11411:20:13"
																},
																"nativeSrc": "11411:104:13",
																"nodeType": "YulFunctionCall",
																"src": "11411:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11402:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11402:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "11237:285:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11278:4:13",
														"nodeType": "YulTypedName",
														"src": "11278:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11284:8:13",
														"nodeType": "YulTypedName",
														"src": "11284:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11297:5:13",
														"nodeType": "YulTypedName",
														"src": "11297:5:13",
														"type": ""
													}
												],
												"src": "11237:285:13"
											},
											{
												"body": {
													"nativeSrc": "11576:362:13",
													"nodeType": "YulBlock",
													"src": "11576:362:13",
													"statements": [
														{
															"nativeSrc": "11586:25:13",
															"nodeType": "YulAssignment",
															"src": "11586:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11609:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11609:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11591:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11591:17:13"
																},
																"nativeSrc": "11591:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11591:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11586:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11586:1:13"
																}
															]
														},
														{
															"nativeSrc": "11620:25:13",
															"nodeType": "YulAssignment",
															"src": "11620:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11643:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11643:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11625:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11625:17:13"
																},
																"nativeSrc": "11625:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11625:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11620:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11620:1:13"
																}
															]
														},
														{
															"nativeSrc": "11654:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "11654:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11677:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11677:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11680:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11680:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11673:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11673:3:13"
																},
																"nativeSrc": "11673:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11673:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11658:11:13",
																	"nodeType": "YulTypedName",
																	"src": "11658:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11691:41:13",
															"nodeType": "YulAssignment",
															"src": "11691:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11720:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "11720:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11702:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11702:17:13"
																},
																"nativeSrc": "11702:30:13",
																"nodeType": "YulFunctionCall",
																"src": "11702:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11691:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "11691:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11909:22:13",
																"nodeType": "YulBlock",
																"src": "11909:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11911:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11911:16:13"
																			},
																			"nativeSrc": "11911:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11911:18:13"
																		},
																		"nativeSrc": "11911:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11911:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11842:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "11842:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11835:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "11835:6:13"
																				},
																				"nativeSrc": "11835:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11835:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11865:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "11865:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11872:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "11872:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11881:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "11881:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11868:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "11868:3:13"
																						},
																						"nativeSrc": "11868:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "11868:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11862:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "11862:2:13"
																				},
																				"nativeSrc": "11862:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11862:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11815:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "11815:2:13"
																		},
																		"nativeSrc": "11815:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11815:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11795:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11795:6:13"
																},
																"nativeSrc": "11795:113:13",
																"nodeType": "YulFunctionCall",
																"src": "11795:113:13"
															},
															"nativeSrc": "11792:139:13",
															"nodeType": "YulIf",
															"src": "11792:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11528:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11559:1:13",
														"nodeType": "YulTypedName",
														"src": "11559:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11562:1:13",
														"nodeType": "YulTypedName",
														"src": "11562:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11568:7:13",
														"nodeType": "YulTypedName",
														"src": "11568:7:13",
														"type": ""
													}
												],
												"src": "11528:410:13"
											},
											{
												"body": {
													"nativeSrc": "11989:81:13",
													"nodeType": "YulBlock",
													"src": "11989:81:13",
													"statements": [
														{
															"nativeSrc": "11999:65:13",
															"nodeType": "YulAssignment",
															"src": "11999:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12014:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12014:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12021:42:13",
																		"nodeType": "YulLiteral",
																		"src": "12021:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12010:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12010:3:13"
																},
																"nativeSrc": "12010:54:13",
																"nodeType": "YulFunctionCall",
																"src": "12010:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11999:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "11999:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "11944:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11971:5:13",
														"nodeType": "YulTypedName",
														"src": "11971:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11981:7:13",
														"nodeType": "YulTypedName",
														"src": "11981:7:13",
														"type": ""
													}
												],
												"src": "11944:126:13"
											},
											{
												"body": {
													"nativeSrc": "12121:51:13",
													"nodeType": "YulBlock",
													"src": "12121:51:13",
													"statements": [
														{
															"nativeSrc": "12131:35:13",
															"nodeType": "YulAssignment",
															"src": "12131:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12160:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12160:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "12142:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12142:17:13"
																},
																"nativeSrc": "12142:24:13",
																"nodeType": "YulFunctionCall",
																"src": "12142:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12131:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "12131:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "12076:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12103:5:13",
														"nodeType": "YulTypedName",
														"src": "12103:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12113:7:13",
														"nodeType": "YulTypedName",
														"src": "12113:7:13",
														"type": ""
													}
												],
												"src": "12076:96:13"
											},
											{
												"body": {
													"nativeSrc": "12243:53:13",
													"nodeType": "YulBlock",
													"src": "12243:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12260:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12260:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12265:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "12265:17:13"
																		},
																		"nativeSrc": "12265:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12265:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12253:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12253:6:13"
																},
																"nativeSrc": "12253:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12253:37:13"
															},
															"nativeSrc": "12253:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "12253:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12178:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12231:5:13",
														"nodeType": "YulTypedName",
														"src": "12231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12238:3:13",
														"nodeType": "YulTypedName",
														"src": "12238:3:13",
														"type": ""
													}
												],
												"src": "12178:118:13"
											},
											{
												"body": {
													"nativeSrc": "12400:124:13",
													"nodeType": "YulBlock",
													"src": "12400:124:13",
													"statements": [
														{
															"nativeSrc": "12410:26:13",
															"nodeType": "YulAssignment",
															"src": "12410:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12422:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12422:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12433:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12433:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12418:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12418:3:13"
																},
																"nativeSrc": "12418:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12418:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12410:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12410:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12490:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "12490:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12503:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "12503:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12514:1:13",
																				"nodeType": "YulLiteral",
																				"src": "12514:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12499:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12499:3:13"
																		},
																		"nativeSrc": "12499:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12499:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12446:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "12446:43:13"
																},
																"nativeSrc": "12446:71:13",
																"nodeType": "YulFunctionCall",
																"src": "12446:71:13"
															},
															"nativeSrc": "12446:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "12446:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12302:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12372:9:13",
														"nodeType": "YulTypedName",
														"src": "12372:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12384:6:13",
														"nodeType": "YulTypedName",
														"src": "12384:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12395:4:13",
														"nodeType": "YulTypedName",
														"src": "12395:4:13",
														"type": ""
													}
												],
												"src": "12302:222:13"
											},
											{
												"body": {
													"nativeSrc": "12574:147:13",
													"nodeType": "YulBlock",
													"src": "12574:147:13",
													"statements": [
														{
															"nativeSrc": "12584:25:13",
															"nodeType": "YulAssignment",
															"src": "12584:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12607:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12607:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12589:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12589:17:13"
																},
																"nativeSrc": "12589:20:13",
																"nodeType": "YulFunctionCall",
																"src": "12589:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12584:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "12584:1:13"
																}
															]
														},
														{
															"nativeSrc": "12618:25:13",
															"nodeType": "YulAssignment",
															"src": "12618:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12641:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12641:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12623:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "12623:17:13"
																},
																"nativeSrc": "12623:20:13",
																"nodeType": "YulFunctionCall",
																"src": "12623:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12618:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "12618:1:13"
																}
															]
														},
														{
															"nativeSrc": "12652:16:13",
															"nodeType": "YulAssignment",
															"src": "12652:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12663:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12663:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12666:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12666:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12659:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12659:3:13"
																},
																"nativeSrc": "12659:9:13",
																"nodeType": "YulFunctionCall",
																"src": "12659:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12652:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12652:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12692:22:13",
																"nodeType": "YulBlock",
																"src": "12692:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12694:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12694:16:13"
																			},
																			"nativeSrc": "12694:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12694:18:13"
																		},
																		"nativeSrc": "12694:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12694:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12684:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "12684:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12687:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12687:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12681:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12681:2:13"
																},
																"nativeSrc": "12681:10:13",
																"nodeType": "YulFunctionCall",
																"src": "12681:10:13"
															},
															"nativeSrc": "12678:36:13",
															"nodeType": "YulIf",
															"src": "12678:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12530:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12561:1:13",
														"nodeType": "YulTypedName",
														"src": "12561:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12564:1:13",
														"nodeType": "YulTypedName",
														"src": "12564:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12570:3:13",
														"nodeType": "YulTypedName",
														"src": "12570:3:13",
														"type": ""
													}
												],
												"src": "12530:191:13"
											},
											{
												"body": {
													"nativeSrc": "12792:53:13",
													"nodeType": "YulBlock",
													"src": "12792:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12809:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12809:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12832:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12832:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12814:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "12814:17:13"
																		},
																		"nativeSrc": "12814:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12814:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12802:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12802:6:13"
																},
																"nativeSrc": "12802:37:13",
																"nodeType": "YulFunctionCall",
																"src": "12802:37:13"
															},
															"nativeSrc": "12802:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "12802:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12727:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12780:5:13",
														"nodeType": "YulTypedName",
														"src": "12780:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12787:3:13",
														"nodeType": "YulTypedName",
														"src": "12787:3:13",
														"type": ""
													}
												],
												"src": "12727:118:13"
											},
											{
												"body": {
													"nativeSrc": "13005:288:13",
													"nodeType": "YulBlock",
													"src": "13005:288:13",
													"statements": [
														{
															"nativeSrc": "13015:26:13",
															"nodeType": "YulAssignment",
															"src": "13015:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13027:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13027:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13038:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13038:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13023:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13023:3:13"
																},
																"nativeSrc": "13023:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13023:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13015:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13015:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13095:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13095:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13108:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13108:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13119:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13119:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13104:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13104:3:13"
																		},
																		"nativeSrc": "13104:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13104:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13051:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13051:43:13"
																},
																"nativeSrc": "13051:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13051:71:13"
															},
															"nativeSrc": "13051:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13051:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13176:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13176:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13189:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13189:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13200:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13200:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13185:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13185:3:13"
																		},
																		"nativeSrc": "13185:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13185:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13132:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13132:43:13"
																},
																"nativeSrc": "13132:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13132:72:13"
															},
															"nativeSrc": "13132:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13132:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13258:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13258:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13271:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13271:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13282:2:13",
																				"nodeType": "YulLiteral",
																				"src": "13282:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13267:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13267:3:13"
																		},
																		"nativeSrc": "13267:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13267:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13214:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13214:43:13"
																},
																"nativeSrc": "13214:72:13",
																"nodeType": "YulFunctionCall",
																"src": "13214:72:13"
															},
															"nativeSrc": "13214:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "13214:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12851:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12961:9:13",
														"nodeType": "YulTypedName",
														"src": "12961:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12973:6:13",
														"nodeType": "YulTypedName",
														"src": "12973:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12981:6:13",
														"nodeType": "YulTypedName",
														"src": "12981:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12989:6:13",
														"nodeType": "YulTypedName",
														"src": "12989:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13000:4:13",
														"nodeType": "YulTypedName",
														"src": "13000:4:13",
														"type": ""
													}
												],
												"src": "12851:442:13"
											},
											{
												"body": {
													"nativeSrc": "13397:124:13",
													"nodeType": "YulBlock",
													"src": "13397:124:13",
													"statements": [
														{
															"nativeSrc": "13407:26:13",
															"nodeType": "YulAssignment",
															"src": "13407:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13419:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "13419:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13430:2:13",
																		"nodeType": "YulLiteral",
																		"src": "13430:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13415:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13415:3:13"
																},
																"nativeSrc": "13415:18:13",
																"nodeType": "YulFunctionCall",
																"src": "13415:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13407:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "13407:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13487:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13487:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13500:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "13500:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13511:1:13",
																				"nodeType": "YulLiteral",
																				"src": "13511:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13496:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13496:3:13"
																		},
																		"nativeSrc": "13496:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13496:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13443:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13443:43:13"
																},
																"nativeSrc": "13443:71:13",
																"nodeType": "YulFunctionCall",
																"src": "13443:71:13"
															},
															"nativeSrc": "13443:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "13443:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13299:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13369:9:13",
														"nodeType": "YulTypedName",
														"src": "13369:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13381:6:13",
														"nodeType": "YulTypedName",
														"src": "13381:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13392:4:13",
														"nodeType": "YulTypedName",
														"src": "13392:4:13",
														"type": ""
													}
												],
												"src": "13299:222:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200258938038062002589833981810160405281019062000036919062000695565b828281600390816200004991906200095a565b5080600490816200005b91906200095a565b5050506200009d3362000073620000bb60201b60201c565b60ff16600a62000084919062000bbb565b8362000091919062000c0b565b620000c360201b60201c565b620000b15f801b336200014d60201b60201c565b5050505062000d54565b5f6008905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000136575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200012d919062000c98565b60405180910390fd5b620001495f83836200024960201b60201c565b5050565b5f6200016083836200046d60201b60201c565b6200023f57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620001db620004d160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000243565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200029d578060025f82825462000290919062000cb3565b925050819055506200036e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000329578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003209392919062000cfe565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003b7578060025f828254039250508190555062000401565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000460919062000d39565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200053982620004f1565b810181811067ffffffffffffffff821117156200055b576200055a62000501565b5b80604052505050565b5f6200056f620004d8565b90506200057d82826200052e565b919050565b5f67ffffffffffffffff8211156200059f576200059e62000501565b5b620005aa82620004f1565b9050602081019050919050565b5f5b83811015620005d6578082015181840152602081019050620005b9565b5f8484015250505050565b5f620005f7620005f18462000582565b62000564565b905082815260208101848484011115620006165762000615620004ed565b5b62000623848285620005b7565b509392505050565b5f82601f830112620006425762000641620004e9565b5b815162000654848260208601620005e1565b91505092915050565b5f819050919050565b62000671816200065d565b81146200067c575f80fd5b50565b5f815190506200068f8162000666565b92915050565b5f805f60608486031215620006af57620006ae620004e1565b5b5f84015167ffffffffffffffff811115620006cf57620006ce620004e5565b5b620006dd868287016200062b565b935050602084015167ffffffffffffffff811115620007015762000700620004e5565b5b6200070f868287016200062b565b925050604062000722868287016200067f565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200077b57607f821691505b60208210810362000791576200079062000736565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620007b8565b620008018683620007b8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620008426200083c62000836846200065d565b62000819565b6200065d565b9050919050565b5f819050919050565b6200085d8362000822565b620008756200086c8262000849565b848454620007c4565b825550505050565b5f90565b6200088b6200087d565b6200089881848462000852565b505050565b5b81811015620008bf57620008b35f8262000881565b6001810190506200089e565b5050565b601f8211156200090e57620008d88162000797565b620008e384620007a9565b81016020851015620008f3578190505b6200090b6200090285620007a9565b8301826200089d565b50505b505050565b5f82821c905092915050565b5f620009305f198460080262000913565b1980831691505092915050565b5f6200094a83836200091f565b9150826002028217905092915050565b62000965826200072c565b67ffffffffffffffff81111562000981576200098062000501565b5b6200098d825462000763565b6200099a828285620008c3565b5f60209050601f831160018114620009d0575f8415620009bb578287015190505b620009c785826200093d565b86555062000a36565b601f198416620009e08662000797565b5f5b8281101562000a0957848901518255600182019150602085019450602081019050620009e2565b8683101562000a29578489015162000a25601f8916826200091f565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000ac85780860481111562000aa05762000a9f62000a3e565b5b600185161562000ab05780820291505b808102905062000ac08562000a6b565b945062000a80565b94509492505050565b5f8262000ae2576001905062000bb4565b8162000af1575f905062000bb4565b816001811462000b0a576002811462000b155762000b4b565b600191505062000bb4565b60ff84111562000b2a5762000b2962000a3e565b5b8360020a91508482111562000b445762000b4362000a3e565b5b5062000bb4565b5060208310610133831016604e8410600b841016171562000b855782820a90508381111562000b7f5762000b7e62000a3e565b5b62000bb4565b62000b94848484600162000a77565b9250905081840481111562000bae5762000bad62000a3e565b5b81810290505b9392505050565b5f62000bc7826200065d565b915062000bd4836200065d565b925062000c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000ad1565b905092915050565b5f62000c17826200065d565b915062000c24836200065d565b925082820262000c34816200065d565b9150828204841483151762000c4e5762000c4d62000a3e565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000c808262000c55565b9050919050565b62000c928162000c74565b82525050565b5f60208201905062000cad5f83018462000c87565b92915050565b5f62000cbf826200065d565b915062000ccc836200065d565b925082820190508082111562000ce75762000ce662000a3e565b5b92915050565b62000cf8816200065d565b82525050565b5f60608201905062000d135f83018662000c87565b62000d22602083018562000ced565b62000d31604083018462000ced565b949350505050565b5f60208201905062000d4e5f83018462000ced565b92915050565b6118278062000d625f395ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c806340c10f19116100ab578063a217fddf1161006f578063a217fddf14610354578063a9059cbb14610372578063d5391393146103a2578063d547741f146103c0578063dd62ed3e146103dc5761012a565b806340c10f191461029e57806370a08231146102ba57806391d14854146102ea57806395d89b411461031a5780639dc29fac146103385761012a565b8063248a9ca3116100f2578063248a9ca3146101fa578063282c51f31461022a5780632f2ff15d14610248578063313ce5671461026457806336568abe146102825761012a565b806301ffc9a71461012e57806306fdde031461015e578063095ea7b31461017c57806318160ddd146101ac57806323b872dd146101ca575b5f80fd5b610148600480360381019061014391906112dd565b61040c565b6040516101559190611322565b60405180910390f35b610166610485565b60405161017391906113c5565b60405180910390f35b61019660048036038101906101919190611472565b610515565b6040516101a39190611322565b60405180910390f35b6101b4610537565b6040516101c191906114bf565b60405180910390f35b6101e460048036038101906101df91906114d8565b610540565b6040516101f19190611322565b60405180910390f35b610214600480360381019061020f919061155b565b61056e565b6040516102219190611595565b60405180910390f35b61023261058b565b60405161023f9190611595565b60405180910390f35b610262600480360381019061025d91906115ae565b6105af565b005b61026c6105d1565b6040516102799190611607565b60405180910390f35b61029c600480360381019061029791906115ae565b6105d9565b005b6102b860048036038101906102b39190611472565b610654565b005b6102d460048036038101906102cf9190611620565b6106c6565b6040516102e191906114bf565b60405180910390f35b61030460048036038101906102ff91906115ae565b61070b565b6040516103119190611322565b60405180910390f35b61032261076f565b60405161032f91906113c5565b60405180910390f35b610352600480360381019061034d9190611472565b6107ff565b005b61035c610871565b6040516103699190611595565b60405180910390f35b61038c60048036038101906103879190611472565b610877565b6040516103999190611322565b60405180910390f35b6103aa610899565b6040516103b79190611595565b60405180910390f35b6103da60048036038101906103d591906115ae565b6108bd565b005b6103f660048036038101906103f1919061164b565b6108df565b60405161040391906114bf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047e575061047d82610961565b5b9050919050565b606060038054610494906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546104c0906116b6565b801561050b5780601f106104e25761010080835404028352916020019161050b565b820191905f5260205f20905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b5f8061051f6109ca565b905061052c8185856109d1565b600191505092915050565b5f600254905090565b5f8061054a6109ca565b90506105578582856109e3565b610562858585610a75565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6105b88261056e565b6105c181610b65565b6105cb8383610b79565b50505050565b5f6008905090565b6105e16109ca565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610645576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61064f8282610c63565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661067e81610b65565b6106888383610d4d565b7f79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e83836040516106b99291906116f5565b60405180910390a1505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461077e906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa906116b6565b80156107f55780601f106107cc576101008083540402835291602001916107f5565b820191905f5260205f20905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861082981610b65565b6108338383610dcc565b7fd1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c583836040516108649291906116f5565b60405180910390a1505050565b5f801b81565b5f806108816109ca565b905061088e818585610a75565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6108c68261056e565b6108cf81610b65565b6108d98383610c63565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6109de8383836001610e4b565b505050565b5f6109ee84846108df565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a6f5781811015610a60578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a579392919061171c565b60405180910390fd5b610a6e84848484035f610e4b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ae5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610adc9190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b55575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b4c9190611751565b60405180910390fd5b610b6083838361101a565b505050565b610b7681610b716109ca565b611233565b50565b5f610b84838361070b565b610c5957600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bf66109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c5d565b5f90505b92915050565b5f610c6e838361070b565b15610d43575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ce06109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d47565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610db49190611751565b60405180910390fd5b610dc85f838361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e3c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e339190611751565b60405180910390fd5b610e47825f8361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ebb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610eb29190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f2b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f229190611751565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611014578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161100b91906114bf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106a578060025f82825461105e9190611797565b92505081905550611138565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110f3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ea9392919061171c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117f578060025f82825403925050819055506111c9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122691906114bf565b60405180910390a3505050565b61123d828261070b565b6112805780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016112779291906117ca565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112bc81611288565b81146112c6575f80fd5b50565b5f813590506112d7816112b3565b92915050565b5f602082840312156112f2576112f1611284565b5b5f6112ff848285016112c9565b91505092915050565b5f8115159050919050565b61131c81611308565b82525050565b5f6020820190506113355f830184611313565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611372578082015181840152602081019050611357565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113978261133b565b6113a18185611345565b93506113b1818560208601611355565b6113ba8161137d565b840191505092915050565b5f6020820190508181035f8301526113dd818461138d565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61140e826113e5565b9050919050565b61141e81611404565b8114611428575f80fd5b50565b5f8135905061143981611415565b92915050565b5f819050919050565b6114518161143f565b811461145b575f80fd5b50565b5f8135905061146c81611448565b92915050565b5f806040838503121561148857611487611284565b5b5f6114958582860161142b565b92505060206114a68582860161145e565b9150509250929050565b6114b98161143f565b82525050565b5f6020820190506114d25f8301846114b0565b92915050565b5f805f606084860312156114ef576114ee611284565b5b5f6114fc8682870161142b565b935050602061150d8682870161142b565b925050604061151e8682870161145e565b9150509250925092565b5f819050919050565b61153a81611528565b8114611544575f80fd5b50565b5f8135905061155581611531565b92915050565b5f602082840312156115705761156f611284565b5b5f61157d84828501611547565b91505092915050565b61158f81611528565b82525050565b5f6020820190506115a85f830184611586565b92915050565b5f80604083850312156115c4576115c3611284565b5b5f6115d185828601611547565b92505060206115e28582860161142b565b9150509250929050565b5f60ff82169050919050565b611601816115ec565b82525050565b5f60208201905061161a5f8301846115f8565b92915050565b5f6020828403121561163557611634611284565b5b5f6116428482850161142b565b91505092915050565b5f806040838503121561166157611660611284565b5b5f61166e8582860161142b565b925050602061167f8582860161142b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116cd57607f821691505b6020821081036116e0576116df611689565b5b50919050565b6116ef81611404565b82525050565b5f6040820190506117085f8301856116e6565b61171560208301846114b0565b9392505050565b5f60608201905061172f5f8301866116e6565b61173c60208301856114b0565b61174960408301846114b0565b949350505050565b5f6020820190506117645f8301846116e6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117a18261143f565b91506117ac8361143f565b92508282019050808211156117c4576117c361176a565b5b92915050565b5f6040820190506117dd5f8301856116e6565b6117ea6020830184611586565b939250505056fea2646970667358221220390c282ef5f50c2afc6c6b017d56e3edbdf791bbd5b31a69f908b75627fa10f264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2589 CODESIZE SUB DUP1 PUSH3 0x2589 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x695 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x95A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x95A JUMP JUMPDEST POP POP POP PUSH3 0x9D CALLER PUSH3 0x73 PUSH3 0xBB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x84 SWAP2 SWAP1 PUSH3 0xBBB JUMP JUMPDEST DUP4 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0xC0B JUMP JUMPDEST PUSH3 0xC3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB1 PUSH0 DUP1 SHL CALLER PUSH3 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0xD54 JUMP JUMPDEST PUSH0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x136 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12D SWAP2 SWAP1 PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x149 PUSH0 DUP4 DUP4 PUSH3 0x249 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH3 0x160 DUP4 DUP4 PUSH3 0x46D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x23F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1DB PUSH3 0x4D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x243 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x29D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x290 SWAP2 SWAP1 PUSH3 0xCB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x36E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x329 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x320 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3B7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x401 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x460 SWAP2 SWAP1 PUSH3 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x539 DUP3 PUSH3 0x4F1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x55B JUMPI PUSH3 0x55A PUSH3 0x501 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x56F PUSH3 0x4D8 JUMP JUMPDEST SWAP1 POP PUSH3 0x57D DUP3 DUP3 PUSH3 0x52E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x59F JUMPI PUSH3 0x59E PUSH3 0x501 JUMP JUMPDEST JUMPDEST PUSH3 0x5AA DUP3 PUSH3 0x4F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5B9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5F7 PUSH3 0x5F1 DUP5 PUSH3 0x582 JUMP JUMPDEST PUSH3 0x564 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x616 JUMPI PUSH3 0x615 PUSH3 0x4ED JUMP JUMPDEST JUMPDEST PUSH3 0x623 DUP5 DUP3 DUP6 PUSH3 0x5B7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x642 JUMPI PUSH3 0x641 PUSH3 0x4E9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x654 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x671 DUP2 PUSH3 0x65D JUMP JUMPDEST DUP2 EQ PUSH3 0x67C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x68F DUP2 PUSH3 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x6AF JUMPI PUSH3 0x6AE PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6CF JUMPI PUSH3 0x6CE PUSH3 0x4E5 JUMP JUMPDEST JUMPDEST PUSH3 0x6DD DUP7 DUP3 DUP8 ADD PUSH3 0x62B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x701 JUMPI PUSH3 0x700 PUSH3 0x4E5 JUMP JUMPDEST JUMPDEST PUSH3 0x70F DUP7 DUP3 DUP8 ADD PUSH3 0x62B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x722 DUP7 DUP3 DUP8 ADD PUSH3 0x67F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x77B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x791 JUMPI PUSH3 0x790 PUSH3 0x736 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x7F5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x7B8 JUMP JUMPDEST PUSH3 0x801 DUP7 DUP4 PUSH3 0x7B8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x842 PUSH3 0x83C PUSH3 0x836 DUP5 PUSH3 0x65D JUMP JUMPDEST PUSH3 0x819 JUMP JUMPDEST PUSH3 0x65D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x85D DUP4 PUSH3 0x822 JUMP JUMPDEST PUSH3 0x875 PUSH3 0x86C DUP3 PUSH3 0x849 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x7C4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x88B PUSH3 0x87D JUMP JUMPDEST PUSH3 0x898 DUP2 DUP5 DUP5 PUSH3 0x852 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8BF JUMPI PUSH3 0x8B3 PUSH0 DUP3 PUSH3 0x881 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x89E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x90E JUMPI PUSH3 0x8D8 DUP2 PUSH3 0x797 JUMP JUMPDEST PUSH3 0x8E3 DUP5 PUSH3 0x7A9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8F3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x90B PUSH3 0x902 DUP6 PUSH3 0x7A9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x89D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x930 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x913 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x94A DUP4 DUP4 PUSH3 0x91F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x965 DUP3 PUSH3 0x72C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x981 JUMPI PUSH3 0x980 PUSH3 0x501 JUMP JUMPDEST JUMPDEST PUSH3 0x98D DUP3 SLOAD PUSH3 0x763 JUMP JUMPDEST PUSH3 0x99A DUP3 DUP3 DUP6 PUSH3 0x8C3 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x9D0 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x9BB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x9C7 DUP6 DUP3 PUSH3 0x93D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA36 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9E0 DUP7 PUSH3 0x797 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xA09 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9E2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xA29 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xA25 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x91F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xAC8 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xAA0 JUMPI PUSH3 0xA9F PUSH3 0xA3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xAB0 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xAC0 DUP6 PUSH3 0xA6B JUMP JUMPDEST SWAP5 POP PUSH3 0xA80 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xAE2 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xBB4 JUMP JUMPDEST DUP2 PUSH3 0xAF1 JUMPI PUSH0 SWAP1 POP PUSH3 0xBB4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xB0A JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xB15 JUMPI PUSH3 0xB4B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xB2A JUMPI PUSH3 0xB29 PUSH3 0xA3E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xB44 JUMPI PUSH3 0xB43 PUSH3 0xA3E JUMP JUMPDEST JUMPDEST POP PUSH3 0xBB4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xB85 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xB7F JUMPI PUSH3 0xB7E PUSH3 0xA3E JUMP JUMPDEST JUMPDEST PUSH3 0xBB4 JUMP JUMPDEST PUSH3 0xB94 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xA77 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xBAE JUMPI PUSH3 0xBAD PUSH3 0xA3E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xBC7 DUP3 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP PUSH3 0xBD4 DUP4 PUSH3 0x65D JUMP JUMPDEST SWAP3 POP PUSH3 0xC03 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC17 DUP3 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP PUSH3 0xC24 DUP4 PUSH3 0x65D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xC34 DUP2 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xC4E JUMPI PUSH3 0xC4D PUSH3 0xA3E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xC80 DUP3 PUSH3 0xC55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC92 DUP2 PUSH3 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xCAD PUSH0 DUP4 ADD DUP5 PUSH3 0xC87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xCBF DUP3 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP PUSH3 0xCCC DUP4 PUSH3 0x65D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xCE7 JUMPI PUSH3 0xCE6 PUSH3 0xA3E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xCF8 DUP2 PUSH3 0x65D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xD13 PUSH0 DUP4 ADD DUP7 PUSH3 0xC87 JUMP JUMPDEST PUSH3 0xD22 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xCED JUMP JUMPDEST PUSH3 0xD31 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xCED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD4E PUSH0 DUP4 ADD DUP5 PUSH3 0xCED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1827 DUP1 PUSH3 0xD62 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x338 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x282 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x47E JUMPI POP PUSH2 0x47D DUP3 PUSH2 0x961 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x494 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C0 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51F PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x52C DUP2 DUP6 DUP6 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x54A PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x557 DUP6 DUP3 DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x562 DUP6 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x5B8 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x5CB DUP4 DUP4 PUSH2 0xB79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64F DUP3 DUP3 PUSH2 0xC63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x67E DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x688 DUP4 DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH32 0x79C65068F81072733B15AB3CBA61B23110793F90AB099D228A414B186333A81E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7AA SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x829 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x833 DUP4 DUP4 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0xD1DF306C742159C188C29D2C167874A39B84FD0F96F794AD7EA53295680EC1C5 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x864 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x881 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x8C6 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x8CF DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x8D9 DUP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EE DUP5 DUP5 PUSH2 0x8DF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA6F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA60 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE4B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB60 DUP4 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB76 DUP2 PUSH2 0xB71 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB84 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0xC59 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF6 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC5D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC6E DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST ISZERO PUSH2 0xD43 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE0 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD47 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC8 PUSH0 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE47 DUP3 PUSH0 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1014 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1138 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x123D DUP3 DUP3 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x1280 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP3 SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BC DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D7 DUP2 PUSH2 0x12B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F1 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FF DUP5 DUP3 DUP6 ADD PUSH2 0x12C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1308 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1335 PUSH0 DUP4 ADD DUP5 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1372 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1397 DUP3 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x13A1 DUP2 DUP6 PUSH2 0x1345 JUMP JUMPDEST SWAP4 POP PUSH2 0x13B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x137D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13DD DUP2 DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x140E DUP3 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141E DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP2 EQ PUSH2 0x1428 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x1415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP2 EQ PUSH2 0x145B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1495 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A6 DUP6 DUP3 DUP7 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B9 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FC DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x151E DUP7 DUP3 DUP8 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP2 EQ PUSH2 0x1544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1555 DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1570 JUMPI PUSH2 0x156F PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157D DUP5 DUP3 DUP6 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x158F DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E2 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1601 DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161A PUSH0 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1635 JUMPI PUSH2 0x1634 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1642 DUP5 DUP3 DUP6 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166E DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167F DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x1689 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EF DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1708 PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x1715 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x172F PUSH0 DUP4 ADD DUP7 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x173C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1749 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17A1 DUP3 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP PUSH2 0x17AC DUP4 PUSH2 0x143F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17C4 JUMPI PUSH2 0x17C3 PUSH2 0x176A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17DD PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x17EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC 0x28 0x2E CREATE2 CREATE2 0xC 0x2A 0xFC PUSH13 0x6B017D56E3EDBDF791BBD5B31A PUSH10 0xF908B75627FA10F26473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "188:1270:12:-:0;;;532:387;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;649:4;655:6;1970:5:4;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;674:62:12::1;680:10;723;:8;;;:10;;:::i;:::-;715:19;;709:2;:25;;;;:::i;:::-;692:13;:43;;;;:::i;:::-;674:5;;;:62;;:::i;:::-;869:42;2232:4:0;880:18:12::0;::::1;900:10;869;;;:42;;:::i;:::-;;532:387:::0;;;188:1270;;1363:92;1421:5;1446:1;1439:8;;1363:92;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6179:316:0:-;6256:4;6277:22;6285:4;6291:7;6277;;;:22;;:::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;;;:12;;:::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6271:1107:4:-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3357:1;3346:9;3342:17;3336:24;3387:18;3379:6;3376:30;3373:117;;;3409:79;;:::i;:::-;3373:117;3514:74;3580:7;3571:6;3560:9;3556:22;3514:74;:::i;:::-;3504:84;;3307:291;3658:2;3647:9;3643:18;3637:25;3689:18;3681:6;3678:30;3675:117;;;3711:79;;:::i;:::-;3675:117;3816:74;3882:7;3873:6;3862:9;3858:22;3816:74;:::i;:::-;3806:84;;3608:292;3939:2;3965:64;4021:7;4012:6;4001:9;3997:22;3965:64;:::i;:::-;3955:74;;3910:129;3037:1009;;;;;:::o;4052:99::-;4104:6;4138:5;4132:12;4122:22;;4052:99;;;:::o;4157:180::-;4205:77;4202:1;4195:88;4302:4;4299:1;4292:15;4326:4;4323:1;4316:15;4343:320;4387:6;4424:1;4418:4;4414:12;4404:22;;4471:1;4465:4;4461:12;4492:18;4482:81;;4548:4;4540:6;4536:17;4526:27;;4482:81;4610:2;4602:6;4599:14;4579:18;4576:38;4573:84;;4629:18;;:::i;:::-;4573:84;4394:269;4343:320;;;:::o;4669:141::-;4718:4;4741:3;4733:11;;4764:3;4761:1;4754:14;4798:4;4795:1;4785:18;4777:26;;4669:141;;;:::o;4816:93::-;4853:6;4900:2;4895;4888:5;4884:14;4880:23;4870:33;;4816:93;;;:::o;4915:107::-;4959:8;5009:5;5003:4;4999:16;4978:37;;4915:107;;;;:::o;5028:393::-;5097:6;5147:1;5135:10;5131:18;5170:97;5200:66;5189:9;5170:97;:::i;:::-;5288:39;5318:8;5307:9;5288:39;:::i;:::-;5276:51;;5360:4;5356:9;5349:5;5345:21;5336:30;;5409:4;5399:8;5395:19;5388:5;5385:30;5375:40;;5104:317;;5028:393;;;;;:::o;5427:60::-;5455:3;5476:5;5469:12;;5427:60;;;:::o;5493:142::-;5543:9;5576:53;5594:34;5603:24;5621:5;5603:24;:::i;:::-;5594:34;:::i;:::-;5576:53;:::i;:::-;5563:66;;5493:142;;;:::o;5641:75::-;5684:3;5705:5;5698:12;;5641:75;;;:::o;5722:269::-;5832:39;5863:7;5832:39;:::i;:::-;5893:91;5942:41;5966:16;5942:41;:::i;:::-;5934:6;5927:4;5921:11;5893:91;:::i;:::-;5887:4;5880:105;5798:193;5722:269;;;:::o;5997:73::-;6042:3;5997:73;:::o;6076:189::-;6153:32;;:::i;:::-;6194:65;6252:6;6244;6238:4;6194:65;:::i;:::-;6129:136;6076:189;;:::o;6271:186::-;6331:120;6348:3;6341:5;6338:14;6331:120;;;6402:39;6439:1;6432:5;6402:39;:::i;:::-;6375:1;6368:5;6364:13;6355:22;;6331:120;;;6271:186;;:::o;6463:543::-;6564:2;6559:3;6556:11;6553:446;;;6598:38;6630:5;6598:38;:::i;:::-;6682:29;6700:10;6682:29;:::i;:::-;6672:8;6668:44;6865:2;6853:10;6850:18;6847:49;;;6886:8;6871:23;;6847:49;6909:80;6965:22;6983:3;6965:22;:::i;:::-;6955:8;6951:37;6938:11;6909:80;:::i;:::-;6568:431;;6553:446;6463:543;;;:::o;7012:117::-;7066:8;7116:5;7110:4;7106:16;7085:37;;7012:117;;;;:::o;7135:169::-;7179:6;7212:51;7260:1;7256:6;7248:5;7245:1;7241:13;7212:51;:::i;:::-;7208:56;7293:4;7287;7283:15;7273:25;;7186:118;7135:169;;;;:::o;7309:295::-;7385:4;7531:29;7556:3;7550:4;7531:29;:::i;:::-;7523:37;;7593:3;7590:1;7586:11;7580:4;7577:21;7569:29;;7309:295;;;;:::o;7609:1395::-;7726:37;7759:3;7726:37;:::i;:::-;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7894:38;7926:4;7920:11;7894:38;:::i;:::-;7979:67;8039:6;8031;8025:4;7979:67;:::i;:::-;8073:1;8097:4;8084:17;;8129:2;8121:6;8118:14;8146:1;8141:618;;;;8803:1;8820:6;8817:77;;;8869:9;8864:3;8860:19;8854:26;8845:35;;8817:77;8920:67;8980:6;8973:5;8920:67;:::i;:::-;8914:4;8907:81;8776:222;8111:887;;8141:618;8193:4;8189:9;8181:6;8177:22;8227:37;8259:4;8227:37;:::i;:::-;8286:1;8300:208;8314:7;8311:1;8308:14;8300:208;;;8393:9;8388:3;8384:19;8378:26;8370:6;8363:42;8444:1;8436:6;8432:14;8422:24;;8491:2;8480:9;8476:18;8463:31;;8337:4;8334:1;8330:12;8325:17;;8300:208;;;8536:6;8527:7;8524:19;8521:179;;;8594:9;8589:3;8585:19;8579:26;8637:48;8679:4;8671:6;8667:17;8656:9;8637:48;:::i;:::-;8629:6;8622:64;8544:156;8521:179;8746:1;8742;8734:6;8730:14;8726:22;8720:4;8713:36;8148:611;;;8111:887;;7701:1303;;;7609:1395;;:::o;9010:180::-;9058:77;9055:1;9048:88;9155:4;9152:1;9145:15;9179:4;9176:1;9169:15;9196:102;9238:8;9285:5;9282:1;9278:13;9257:34;;9196:102;;;:::o;9304:848::-;9365:5;9372:4;9396:6;9387:15;;9420:5;9411:14;;9434:712;9455:1;9445:8;9442:15;9434:712;;;9550:4;9545:3;9541:14;9535:4;9532:24;9529:50;;;9559:18;;:::i;:::-;9529:50;9609:1;9599:8;9595:16;9592:451;;;10024:4;10017:5;10013:16;10004:25;;9592:451;10074:4;10068;10064:15;10056:23;;10104:32;10127:8;10104:32;:::i;:::-;10092:44;;9434:712;;;9304:848;;;;;;;:::o;10158:1073::-;10212:5;10403:8;10393:40;;10424:1;10415:10;;10426:5;;10393:40;10452:4;10442:36;;10469:1;10460:10;;10471:5;;10442:36;10538:4;10586:1;10581:27;;;;10622:1;10617:191;;;;10531:277;;10581:27;10599:1;10590:10;;10601:5;;;10617:191;10662:3;10652:8;10649:17;10646:43;;;10669:18;;:::i;:::-;10646:43;10718:8;10715:1;10711:16;10702:25;;10753:3;10746:5;10743:14;10740:40;;;10760:18;;:::i;:::-;10740:40;10793:5;;;10531:277;;10917:2;10907:8;10904:16;10898:3;10892:4;10889:13;10885:36;10867:2;10857:8;10854:16;10849:2;10843:4;10840:12;10836:35;10820:111;10817:246;;;10973:8;10967:4;10963:19;10954:28;;11008:3;11001:5;10998:14;10995:40;;;11015:18;;:::i;:::-;10995:40;11048:5;;10817:246;11088:42;11126:3;11116:8;11110:4;11107:1;11088:42;:::i;:::-;11073:57;;;;11162:4;11157:3;11153:14;11146:5;11143:25;11140:51;;;11171:18;;:::i;:::-;11140:51;11220:4;11213:5;11209:16;11200:25;;10158:1073;;;;;;:::o;11237:285::-;11297:5;11321:23;11339:4;11321:23;:::i;:::-;11313:31;;11365:27;11383:8;11365:27;:::i;:::-;11353:39;;11411:104;11448:66;11438:8;11432:4;11411:104;:::i;:::-;11402:113;;11237:285;;;;:::o;11528:410::-;11568:7;11591:20;11609:1;11591:20;:::i;:::-;11586:25;;11625:20;11643:1;11625:20;:::i;:::-;11620:25;;11680:1;11677;11673:9;11702:30;11720:11;11702:30;:::i;:::-;11691:41;;11881:1;11872:7;11868:15;11865:1;11862:22;11842:1;11835:9;11815:83;11792:139;;11911:18;;:::i;:::-;11792:139;11576:362;11528:410;;;;:::o;11944:126::-;11981:7;12021:42;12014:5;12010:54;11999:65;;11944:126;;;:::o;12076:96::-;12113:7;12142:24;12160:5;12142:24;:::i;:::-;12131:35;;12076:96;;;:::o;12178:118::-;12265:24;12283:5;12265:24;:::i;:::-;12260:3;12253:37;12178:118;;:::o;12302:222::-;12395:4;12433:2;12422:9;12418:18;12410:26;;12446:71;12514:1;12503:9;12499:17;12490:6;12446:71;:::i;:::-;12302:222;;;;:::o;12530:191::-;12570:3;12589:20;12607:1;12589:20;:::i;:::-;12584:25;;12623:20;12641:1;12623:20;:::i;:::-;12618:25;;12666:1;12663;12659:9;12652:16;;12687:3;12684:1;12681:10;12678:36;;;12694:18;;:::i;:::-;12678:36;12530:191;;;;:::o;12727:118::-;12814:24;12832:5;12814:24;:::i;:::-;12809:3;12802:37;12727:118;;:::o;12851:442::-;13000:4;13038:2;13027:9;13023:18;13015:26;;13051:71;13119:1;13108:9;13104:17;13095:6;13051:71;:::i;:::-;13132:72;13200:2;13189:9;13185:18;13176:6;13132:72;:::i;:::-;13214;13282:2;13271:9;13267:18;13258:6;13214:72;:::i;:::-;12851:442;;;;;;:::o;13299:222::-;13392:4;13430:2;13419:9;13415:18;13407:26;;13443:71;13511:1;13500:9;13496:17;13487:6;13443:71;:::i;:::-;13299:222;;;;:::o;188:1270:12:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1911": {
									"entryPoint": 1419,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": 2161,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1906": {
									"entryPoint": 2201,
									"id": 1906,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1069": {
									"entryPoint": 2513,
									"id": 1069,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1129": {
									"entryPoint": 3659,
									"id": 1129,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1051": {
									"entryPoint": 3532,
									"id": 1051,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 4659,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 2917,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 2937,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1018": {
									"entryPoint": 3405,
									"id": 1018,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1294": {
									"entryPoint": 2506,
									"id": 1294,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 3171,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1177": {
									"entryPoint": 2531,
									"id": 1177,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_908": {
									"entryPoint": 2677,
									"id": 908,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_985": {
									"entryPoint": 4122,
									"id": 985,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_805": {
									"entryPoint": 2271,
									"id": 805,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_829": {
									"entryPoint": 1301,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_764": {
									"entryPoint": 1734,
									"id": 764,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2001": {
									"entryPoint": 2047,
									"id": 2001,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_2010": {
									"entryPoint": 1489,
									"id": 2010,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": 1390,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1455,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": 1803,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1980": {
									"entryPoint": 1620,
									"id": 1980,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_724": {
									"entryPoint": 1157,
									"id": 724,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1497,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 2237,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1335": {
									"entryPoint": 2401,
									"id": 1335,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1036,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_733": {
									"entryPoint": 1903,
									"id": 733,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_751": {
									"entryPoint": 1335,
									"id": 751,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_861": {
									"entryPoint": 1344,
									"id": 861,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_788": {
									"entryPoint": 2167,
									"id": 788,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10316:13",
										"nodeType": "YulBlock",
										"src": "0:10316:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1577:40:13",
													"nodeType": "YulBlock",
													"src": "1577:40:13",
													"statements": [
														{
															"nativeSrc": "1588:22:13",
															"nodeType": "YulAssignment",
															"src": "1588:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:13"
																},
																"nativeSrc": "1598:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:13",
														"nodeType": "YulTypedName",
														"src": "1560:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:13",
														"nodeType": "YulTypedName",
														"src": "1570:6:13",
														"type": ""
													}
												],
												"src": "1518:99:13"
											},
											{
												"body": {
													"nativeSrc": "1719:73:13",
													"nodeType": "YulBlock",
													"src": "1719:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:13"
																},
																"nativeSrc": "1729:19:13",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:13"
															},
															"nativeSrc": "1729:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:13"
														},
														{
															"nativeSrc": "1757:29:13",
															"nodeType": "YulAssignment",
															"src": "1757:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:13",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:13"
																},
																"nativeSrc": "1772:14:13",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:13",
														"nodeType": "YulTypedName",
														"src": "1691:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:13",
														"nodeType": "YulTypedName",
														"src": "1696:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:13",
														"nodeType": "YulTypedName",
														"src": "1707:11:13",
														"type": ""
													}
												],
												"src": "1623:169:13"
											},
											{
												"body": {
													"nativeSrc": "1860:184:13",
													"nodeType": "YulBlock",
													"src": "1860:184:13",
													"statements": [
														{
															"nativeSrc": "1870:10:13",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:13",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:13",
																"nodeType": "YulLiteral",
																"src": "1879:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:13",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:13",
																"nodeType": "YulBlock",
																"src": "1939:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:13"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:13"
																					},
																					"nativeSrc": "1960:11:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:13"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:13"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:13"
																							},
																							"nativeSrc": "1979:11:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:13"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:13"
																					},
																					"nativeSrc": "1973:18:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:13"
																			},
																			"nativeSrc": "1953:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:13"
																		},
																		"nativeSrc": "1953:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:13"
																},
																"nativeSrc": "1897:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:13"
															},
															"nativeSrc": "1889:113:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:13",
																"nodeType": "YulBlock",
																"src": "1911:19:13",
																"statements": [
																	{
																		"nativeSrc": "1913:15:13",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:13",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:13",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:13"
																			},
																			"nativeSrc": "1918:10:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:13",
																"nodeType": "YulBlock",
																"src": "1893:3:13",
																"statements": []
															},
															"src": "1889:113:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:13"
																		},
																		"nativeSrc": "2018:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:13"
																},
																"nativeSrc": "2011:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:13"
															},
															"nativeSrc": "2011:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:13"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:13",
														"nodeType": "YulTypedName",
														"src": "1842:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:13",
														"nodeType": "YulTypedName",
														"src": "1847:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:13",
														"nodeType": "YulTypedName",
														"src": "1852:6:13",
														"type": ""
													}
												],
												"src": "1798:246:13"
											},
											{
												"body": {
													"nativeSrc": "2098:54:13",
													"nodeType": "YulBlock",
													"src": "2098:54:13",
													"statements": [
														{
															"nativeSrc": "2108:38:13",
															"nodeType": "YulAssignment",
															"src": "2108:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:13"
																		},
																		"nativeSrc": "2122:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:13",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:13"
																		},
																		"nativeSrc": "2138:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:13"
																},
																"nativeSrc": "2118:28:13",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:13",
														"nodeType": "YulTypedName",
														"src": "2081:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:13",
														"nodeType": "YulTypedName",
														"src": "2091:6:13",
														"type": ""
													}
												],
												"src": "2050:102:13"
											},
											{
												"body": {
													"nativeSrc": "2250:285:13",
													"nodeType": "YulBlock",
													"src": "2250:285:13",
													"statements": [
														{
															"nativeSrc": "2260:53:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:13"
																},
																"nativeSrc": "2274:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:13",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:13",
															"nodeType": "YulAssignment",
															"src": "2322:78:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:13"
																},
																"nativeSrc": "2329:71:13",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:13",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:13"
																		},
																		"nativeSrc": "2444:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:13"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:13",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:13"
																},
																"nativeSrc": "2409:65:13",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:13"
															},
															"nativeSrc": "2409:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:13"
														},
														{
															"nativeSrc": "2483:46:13",
															"nodeType": "YulAssignment",
															"src": "2483:46:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:13"
																		},
																		"nativeSrc": "2499:29:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:13"
																},
																"nativeSrc": "2490:39:13",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:13",
														"nodeType": "YulTypedName",
														"src": "2231:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:13",
														"nodeType": "YulTypedName",
														"src": "2238:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:13",
														"nodeType": "YulTypedName",
														"src": "2246:3:13",
														"type": ""
													}
												],
												"src": "2158:377:13"
											},
											{
												"body": {
													"nativeSrc": "2659:195:13",
													"nodeType": "YulBlock",
													"src": "2659:195:13",
													"statements": [
														{
															"nativeSrc": "2669:26:13",
															"nodeType": "YulAssignment",
															"src": "2669:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:13"
																},
																"nativeSrc": "2677:18:13",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:13",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:13"
																		},
																		"nativeSrc": "2712:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:13"
																		},
																		"nativeSrc": "2731:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:13"
																},
																"nativeSrc": "2705:47:13",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:13"
															},
															"nativeSrc": "2705:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:13"
														},
														{
															"nativeSrc": "2761:86:13",
															"nodeType": "YulAssignment",
															"src": "2761:86:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:13"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:13",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:13"
																},
																"nativeSrc": "2769:78:13",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:13",
														"nodeType": "YulTypedName",
														"src": "2631:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:13",
														"nodeType": "YulTypedName",
														"src": "2643:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:13",
														"nodeType": "YulTypedName",
														"src": "2654:4:13",
														"type": ""
													}
												],
												"src": "2541:313:13"
											},
											{
												"body": {
													"nativeSrc": "2905:81:13",
													"nodeType": "YulBlock",
													"src": "2905:81:13",
													"statements": [
														{
															"nativeSrc": "2915:65:13",
															"nodeType": "YulAssignment",
															"src": "2915:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:42:13",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2926:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:13"
																},
																"nativeSrc": "2926:54:13",
																"nodeType": "YulFunctionCall",
																"src": "2926:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2860:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:13",
														"nodeType": "YulTypedName",
														"src": "2887:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:13",
														"nodeType": "YulTypedName",
														"src": "2897:7:13",
														"type": ""
													}
												],
												"src": "2860:126:13"
											},
											{
												"body": {
													"nativeSrc": "3037:51:13",
													"nodeType": "YulBlock",
													"src": "3037:51:13",
													"statements": [
														{
															"nativeSrc": "3047:35:13",
															"nodeType": "YulAssignment",
															"src": "3047:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:13"
																},
																"nativeSrc": "3058:24:13",
																"nodeType": "YulFunctionCall",
																"src": "3058:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3047:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2992:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3019:5:13",
														"nodeType": "YulTypedName",
														"src": "3019:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3029:7:13",
														"nodeType": "YulTypedName",
														"src": "3029:7:13",
														"type": ""
													}
												],
												"src": "2992:96:13"
											},
											{
												"body": {
													"nativeSrc": "3137:79:13",
													"nodeType": "YulBlock",
													"src": "3137:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:16:13",
																"nodeType": "YulBlock",
																"src": "3194:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:13"
																			},
																			"nativeSrc": "3196:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:13"
																		},
																		"nativeSrc": "3196:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3160:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3185:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3167:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:13"
																				},
																				"nativeSrc": "3167:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3157:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:13"
																		},
																		"nativeSrc": "3157:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3150:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:13"
																},
																"nativeSrc": "3150:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3150:43:13"
															},
															"nativeSrc": "3147:63:13",
															"nodeType": "YulIf",
															"src": "3147:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3094:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3130:5:13",
														"nodeType": "YulTypedName",
														"src": "3130:5:13",
														"type": ""
													}
												],
												"src": "3094:122:13"
											},
											{
												"body": {
													"nativeSrc": "3274:87:13",
													"nodeType": "YulBlock",
													"src": "3274:87:13",
													"statements": [
														{
															"nativeSrc": "3284:29:13",
															"nodeType": "YulAssignment",
															"src": "3284:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3306:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3293:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:13"
																},
																"nativeSrc": "3293:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3293:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3284:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3349:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3322:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:13"
																},
																"nativeSrc": "3322:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3322:33:13"
															},
															"nativeSrc": "3322:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3222:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3252:6:13",
														"nodeType": "YulTypedName",
														"src": "3252:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3260:3:13",
														"nodeType": "YulTypedName",
														"src": "3260:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3268:5:13",
														"nodeType": "YulTypedName",
														"src": "3268:5:13",
														"type": ""
													}
												],
												"src": "3222:139:13"
											},
											{
												"body": {
													"nativeSrc": "3412:32:13",
													"nodeType": "YulBlock",
													"src": "3412:32:13",
													"statements": [
														{
															"nativeSrc": "3422:16:13",
															"nodeType": "YulAssignment",
															"src": "3422:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "3433:5:13",
																"nodeType": "YulIdentifier",
																"src": "3433:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3422:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3367:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:13",
														"nodeType": "YulTypedName",
														"src": "3394:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3404:7:13",
														"nodeType": "YulTypedName",
														"src": "3404:7:13",
														"type": ""
													}
												],
												"src": "3367:77:13"
											},
											{
												"body": {
													"nativeSrc": "3493:79:13",
													"nodeType": "YulBlock",
													"src": "3493:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:16:13",
																"nodeType": "YulBlock",
																"src": "3550:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3559:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3562:1:13",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3552:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:13"
																			},
																			"nativeSrc": "3552:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:13"
																		},
																		"nativeSrc": "3552:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3516:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3541:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3523:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:13"
																				},
																				"nativeSrc": "3523:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3513:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:13"
																		},
																		"nativeSrc": "3513:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3506:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:13"
																},
																"nativeSrc": "3506:43:13",
																"nodeType": "YulFunctionCall",
																"src": "3506:43:13"
															},
															"nativeSrc": "3503:63:13",
															"nodeType": "YulIf",
															"src": "3503:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3450:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:13",
														"nodeType": "YulTypedName",
														"src": "3486:5:13",
														"type": ""
													}
												],
												"src": "3450:122:13"
											},
											{
												"body": {
													"nativeSrc": "3630:87:13",
													"nodeType": "YulBlock",
													"src": "3630:87:13",
													"statements": [
														{
															"nativeSrc": "3640:29:13",
															"nodeType": "YulAssignment",
															"src": "3640:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3662:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3649:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:13"
																},
																"nativeSrc": "3649:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3649:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3640:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3678:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:13"
																},
																"nativeSrc": "3678:33:13",
																"nodeType": "YulFunctionCall",
																"src": "3678:33:13"
															},
															"nativeSrc": "3678:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3578:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3608:6:13",
														"nodeType": "YulTypedName",
														"src": "3608:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3616:3:13",
														"nodeType": "YulTypedName",
														"src": "3616:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3624:5:13",
														"nodeType": "YulTypedName",
														"src": "3624:5:13",
														"type": ""
													}
												],
												"src": "3578:139:13"
											},
											{
												"body": {
													"nativeSrc": "3806:391:13",
													"nodeType": "YulBlock",
													"src": "3806:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3852:83:13",
																"nodeType": "YulBlock",
																"src": "3852:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3854:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:13"
																			},
																			"nativeSrc": "3854:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:13"
																		},
																		"nativeSrc": "3854:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3827:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3836:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3823:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:13"
																		},
																		"nativeSrc": "3823:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3819:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:13"
																},
																"nativeSrc": "3819:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3819:32:13"
															},
															"nativeSrc": "3816:119:13",
															"nodeType": "YulIf",
															"src": "3816:119:13"
														},
														{
															"nativeSrc": "3945:117:13",
															"nodeType": "YulBlock",
															"src": "3945:117:13",
															"statements": [
																{
																	"nativeSrc": "3960:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3974:1:13",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3964:6:13",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3989:63:13",
																	"nodeType": "YulAssignment",
																	"src": "3989:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4024:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4035:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:13"
																				},
																				"nativeSrc": "4020:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4044:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3999:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:13"
																		},
																		"nativeSrc": "3999:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3989:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4072:118:13",
															"nodeType": "YulBlock",
															"src": "4072:118:13",
															"statements": [
																{
																	"nativeSrc": "4087:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4101:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4091:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4117:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4117:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:13"
																				},
																				"nativeSrc": "4148:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4127:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:13"
																		},
																		"nativeSrc": "4127:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4117:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3723:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3768:9:13",
														"nodeType": "YulTypedName",
														"src": "3768:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3779:7:13",
														"nodeType": "YulTypedName",
														"src": "3779:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3791:6:13",
														"nodeType": "YulTypedName",
														"src": "3791:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3799:6:13",
														"nodeType": "YulTypedName",
														"src": "3799:6:13",
														"type": ""
													}
												],
												"src": "3723:474:13"
											},
											{
												"body": {
													"nativeSrc": "4268:53:13",
													"nodeType": "YulBlock",
													"src": "4268:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4285:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4308:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4290:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:13"
																		},
																		"nativeSrc": "4290:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4278:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:13"
																},
																"nativeSrc": "4278:37:13",
																"nodeType": "YulFunctionCall",
																"src": "4278:37:13"
															},
															"nativeSrc": "4278:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4203:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4256:5:13",
														"nodeType": "YulTypedName",
														"src": "4256:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4263:3:13",
														"nodeType": "YulTypedName",
														"src": "4263:3:13",
														"type": ""
													}
												],
												"src": "4203:118:13"
											},
											{
												"body": {
													"nativeSrc": "4425:124:13",
													"nodeType": "YulBlock",
													"src": "4425:124:13",
													"statements": [
														{
															"nativeSrc": "4435:26:13",
															"nodeType": "YulAssignment",
															"src": "4435:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4447:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4443:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:13"
																},
																"nativeSrc": "4443:18:13",
																"nodeType": "YulFunctionCall",
																"src": "4443:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4435:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4515:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4539:1:13",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4524:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:13"
																		},
																		"nativeSrc": "4524:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4471:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:13"
																},
																"nativeSrc": "4471:71:13",
																"nodeType": "YulFunctionCall",
																"src": "4471:71:13"
															},
															"nativeSrc": "4471:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4327:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:13",
														"nodeType": "YulTypedName",
														"src": "4397:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4409:6:13",
														"nodeType": "YulTypedName",
														"src": "4409:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4420:4:13",
														"nodeType": "YulTypedName",
														"src": "4420:4:13",
														"type": ""
													}
												],
												"src": "4327:222:13"
											},
											{
												"body": {
													"nativeSrc": "4655:519:13",
													"nodeType": "YulBlock",
													"src": "4655:519:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4701:83:13",
																"nodeType": "YulBlock",
																"src": "4701:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4703:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:13"
																			},
																			"nativeSrc": "4703:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:13"
																		},
																		"nativeSrc": "4703:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4676:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4672:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:13"
																		},
																		"nativeSrc": "4672:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4668:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:13"
																},
																"nativeSrc": "4668:32:13",
																"nodeType": "YulFunctionCall",
																"src": "4668:32:13"
															},
															"nativeSrc": "4665:119:13",
															"nodeType": "YulIf",
															"src": "4665:119:13"
														},
														{
															"nativeSrc": "4794:117:13",
															"nodeType": "YulBlock",
															"src": "4794:117:13",
															"statements": [
																{
																	"nativeSrc": "4809:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4823:1:13",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4813:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4838:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4838:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4873:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4884:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4869:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:13"
																				},
																				"nativeSrc": "4869:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4893:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4848:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:13"
																		},
																		"nativeSrc": "4848:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4838:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4921:118:13",
															"nodeType": "YulBlock",
															"src": "4921:118:13",
															"statements": [
																{
																	"nativeSrc": "4936:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4950:2:13",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4940:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4966:63:13",
																	"nodeType": "YulAssignment",
																	"src": "4966:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5001:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5012:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4997:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:13"
																				},
																				"nativeSrc": "4997:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5021:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4976:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:13"
																		},
																		"nativeSrc": "4976:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4966:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5049:118:13",
															"nodeType": "YulBlock",
															"src": "5049:118:13",
															"statements": [
																{
																	"nativeSrc": "5064:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5078:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5068:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5094:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5094:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5129:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5140:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5125:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:13"
																				},
																				"nativeSrc": "5125:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5149:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5104:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:13"
																		},
																		"nativeSrc": "5104:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5094:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4555:619:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:13",
														"nodeType": "YulTypedName",
														"src": "4609:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4620:7:13",
														"nodeType": "YulTypedName",
														"src": "4620:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4632:6:13",
														"nodeType": "YulTypedName",
														"src": "4632:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4640:6:13",
														"nodeType": "YulTypedName",
														"src": "4640:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4648:6:13",
														"nodeType": "YulTypedName",
														"src": "4648:6:13",
														"type": ""
													}
												],
												"src": "4555:619:13"
											},
											{
												"body": {
													"nativeSrc": "5225:32:13",
													"nodeType": "YulBlock",
													"src": "5225:32:13",
													"statements": [
														{
															"nativeSrc": "5235:16:13",
															"nodeType": "YulAssignment",
															"src": "5235:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5246:5:13",
																"nodeType": "YulIdentifier",
																"src": "5246:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5235:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5235:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5180:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5207:5:13",
														"nodeType": "YulTypedName",
														"src": "5207:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5217:7:13",
														"nodeType": "YulTypedName",
														"src": "5217:7:13",
														"type": ""
													}
												],
												"src": "5180:77:13"
											},
											{
												"body": {
													"nativeSrc": "5306:79:13",
													"nodeType": "YulBlock",
													"src": "5306:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5363:16:13",
																"nodeType": "YulBlock",
																"src": "5363:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5372:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5375:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5365:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:13"
																			},
																			"nativeSrc": "5365:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5365:12:13"
																		},
																		"nativeSrc": "5365:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5329:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5354:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5354:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5336:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5336:17:13"
																				},
																				"nativeSrc": "5336:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5336:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5326:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5326:2:13"
																		},
																		"nativeSrc": "5326:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5319:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:13"
																},
																"nativeSrc": "5319:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5319:43:13"
															},
															"nativeSrc": "5316:63:13",
															"nodeType": "YulIf",
															"src": "5316:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5263:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5299:5:13",
														"nodeType": "YulTypedName",
														"src": "5299:5:13",
														"type": ""
													}
												],
												"src": "5263:122:13"
											},
											{
												"body": {
													"nativeSrc": "5443:87:13",
													"nodeType": "YulBlock",
													"src": "5443:87:13",
													"statements": [
														{
															"nativeSrc": "5453:29:13",
															"nodeType": "YulAssignment",
															"src": "5453:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5475:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5462:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5462:12:13"
																},
																"nativeSrc": "5462:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5462:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5453:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5453:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5518:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5491:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5491:26:13"
																},
																"nativeSrc": "5491:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5491:33:13"
															},
															"nativeSrc": "5491:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5491:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5391:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5421:6:13",
														"nodeType": "YulTypedName",
														"src": "5421:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5429:3:13",
														"nodeType": "YulTypedName",
														"src": "5429:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5437:5:13",
														"nodeType": "YulTypedName",
														"src": "5437:5:13",
														"type": ""
													}
												],
												"src": "5391:139:13"
											},
											{
												"body": {
													"nativeSrc": "5602:263:13",
													"nodeType": "YulBlock",
													"src": "5602:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5648:83:13",
																"nodeType": "YulBlock",
																"src": "5648:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5650:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5650:77:13"
																			},
																			"nativeSrc": "5650:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5650:79:13"
																		},
																		"nativeSrc": "5650:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5623:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5619:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:13"
																		},
																		"nativeSrc": "5619:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5615:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:13"
																},
																"nativeSrc": "5615:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5615:32:13"
															},
															"nativeSrc": "5612:119:13",
															"nodeType": "YulIf",
															"src": "5612:119:13"
														},
														{
															"nativeSrc": "5741:117:13",
															"nodeType": "YulBlock",
															"src": "5741:117:13",
															"statements": [
																{
																	"nativeSrc": "5756:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5770:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5760:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5785:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5785:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5820:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5820:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5831:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5816:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5816:3:13"
																				},
																				"nativeSrc": "5816:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5816:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5840:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5840:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5795:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5795:20:13"
																		},
																		"nativeSrc": "5795:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5785:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5536:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5572:9:13",
														"nodeType": "YulTypedName",
														"src": "5572:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5583:7:13",
														"nodeType": "YulTypedName",
														"src": "5583:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5595:6:13",
														"nodeType": "YulTypedName",
														"src": "5595:6:13",
														"type": ""
													}
												],
												"src": "5536:329:13"
											},
											{
												"body": {
													"nativeSrc": "5936:53:13",
													"nodeType": "YulBlock",
													"src": "5936:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5953:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5976:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5976:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5958:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5958:17:13"
																		},
																		"nativeSrc": "5958:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5946:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:13"
																},
																"nativeSrc": "5946:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5946:37:13"
															},
															"nativeSrc": "5946:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5946:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5871:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:13",
														"nodeType": "YulTypedName",
														"src": "5924:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5931:3:13",
														"nodeType": "YulTypedName",
														"src": "5931:3:13",
														"type": ""
													}
												],
												"src": "5871:118:13"
											},
											{
												"body": {
													"nativeSrc": "6093:124:13",
													"nodeType": "YulBlock",
													"src": "6093:124:13",
													"statements": [
														{
															"nativeSrc": "6103:26:13",
															"nodeType": "YulAssignment",
															"src": "6103:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6115:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6126:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6111:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:13"
																},
																"nativeSrc": "6111:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6111:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6103:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6103:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6183:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6207:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:13"
																		},
																		"nativeSrc": "6192:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6139:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6139:43:13"
																},
																"nativeSrc": "6139:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6139:71:13"
															},
															"nativeSrc": "6139:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6139:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5995:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6065:9:13",
														"nodeType": "YulTypedName",
														"src": "6065:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6077:6:13",
														"nodeType": "YulTypedName",
														"src": "6077:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6088:4:13",
														"nodeType": "YulTypedName",
														"src": "6088:4:13",
														"type": ""
													}
												],
												"src": "5995:222:13"
											},
											{
												"body": {
													"nativeSrc": "6306:391:13",
													"nodeType": "YulBlock",
													"src": "6306:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6352:83:13",
																"nodeType": "YulBlock",
																"src": "6352:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6354:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6354:77:13"
																			},
																			"nativeSrc": "6354:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6354:79:13"
																		},
																		"nativeSrc": "6354:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6327:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6327:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6323:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:13"
																		},
																		"nativeSrc": "6323:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6348:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6319:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:13"
																},
																"nativeSrc": "6319:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6319:32:13"
															},
															"nativeSrc": "6316:119:13",
															"nodeType": "YulIf",
															"src": "6316:119:13"
														},
														{
															"nativeSrc": "6445:117:13",
															"nodeType": "YulBlock",
															"src": "6445:117:13",
															"statements": [
																{
																	"nativeSrc": "6460:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6460:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6474:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6464:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6464:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6489:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6489:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:13"
																				},
																				"nativeSrc": "6520:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6499:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:13"
																		},
																		"nativeSrc": "6499:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6489:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:13",
															"nodeType": "YulBlock",
															"src": "6572:118:13",
															"statements": [
																{
																	"nativeSrc": "6587:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:13"
																				},
																				"nativeSrc": "6648:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6627:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:13"
																		},
																		"nativeSrc": "6627:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6617:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6223:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6268:9:13",
														"nodeType": "YulTypedName",
														"src": "6268:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6279:7:13",
														"nodeType": "YulTypedName",
														"src": "6279:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6291:6:13",
														"nodeType": "YulTypedName",
														"src": "6291:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6299:6:13",
														"nodeType": "YulTypedName",
														"src": "6299:6:13",
														"type": ""
													}
												],
												"src": "6223:474:13"
											},
											{
												"body": {
													"nativeSrc": "6746:43:13",
													"nodeType": "YulBlock",
													"src": "6746:43:13",
													"statements": [
														{
															"nativeSrc": "6756:27:13",
															"nodeType": "YulAssignment",
															"src": "6756:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6771:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6771:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:4:13",
																		"nodeType": "YulLiteral",
																		"src": "6778:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6767:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:13"
																},
																"nativeSrc": "6767:16:13",
																"nodeType": "YulFunctionCall",
																"src": "6767:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6756:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6756:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6703:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6728:5:13",
														"nodeType": "YulTypedName",
														"src": "6728:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6738:7:13",
														"nodeType": "YulTypedName",
														"src": "6738:7:13",
														"type": ""
													}
												],
												"src": "6703:86:13"
											},
											{
												"body": {
													"nativeSrc": "6856:51:13",
													"nodeType": "YulBlock",
													"src": "6856:51:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6873:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6894:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6894:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6878:15:13",
																			"nodeType": "YulIdentifier",
																			"src": "6878:15:13"
																		},
																		"nativeSrc": "6878:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:13"
																},
																"nativeSrc": "6866:35:13",
																"nodeType": "YulFunctionCall",
																"src": "6866:35:13"
															},
															"nativeSrc": "6866:35:13",
															"nodeType": "YulExpressionStatement",
															"src": "6866:35:13"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6795:112:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6844:5:13",
														"nodeType": "YulTypedName",
														"src": "6844:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6851:3:13",
														"nodeType": "YulTypedName",
														"src": "6851:3:13",
														"type": ""
													}
												],
												"src": "6795:112:13"
											},
											{
												"body": {
													"nativeSrc": "7007:120:13",
													"nodeType": "YulBlock",
													"src": "7007:120:13",
													"statements": [
														{
															"nativeSrc": "7017:26:13",
															"nodeType": "YulAssignment",
															"src": "7017:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7029:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7025:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:13"
																},
																"nativeSrc": "7025:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7025:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7017:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7017:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7093:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7106:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7117:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7102:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:13"
																		},
																		"nativeSrc": "7102:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7053:39:13",
																	"nodeType": "YulIdentifier",
																	"src": "7053:39:13"
																},
																"nativeSrc": "7053:67:13",
																"nodeType": "YulFunctionCall",
																"src": "7053:67:13"
															},
															"nativeSrc": "7053:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "7053:67:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6913:214:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6979:9:13",
														"nodeType": "YulTypedName",
														"src": "6979:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6991:6:13",
														"nodeType": "YulTypedName",
														"src": "6991:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7002:4:13",
														"nodeType": "YulTypedName",
														"src": "7002:4:13",
														"type": ""
													}
												],
												"src": "6913:214:13"
											},
											{
												"body": {
													"nativeSrc": "7199:263:13",
													"nodeType": "YulBlock",
													"src": "7199:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7245:83:13",
																"nodeType": "YulBlock",
																"src": "7245:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7247:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7247:77:13"
																			},
																			"nativeSrc": "7247:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7247:79:13"
																		},
																		"nativeSrc": "7247:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7247:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7220:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7220:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7216:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:13"
																		},
																		"nativeSrc": "7216:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7212:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:13"
																},
																"nativeSrc": "7212:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7212:32:13"
															},
															"nativeSrc": "7209:119:13",
															"nodeType": "YulIf",
															"src": "7209:119:13"
														},
														{
															"nativeSrc": "7338:117:13",
															"nodeType": "YulBlock",
															"src": "7338:117:13",
															"statements": [
																{
																	"nativeSrc": "7353:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7367:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7357:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7382:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7382:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:13"
																				},
																				"nativeSrc": "7413:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7392:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:13"
																		},
																		"nativeSrc": "7392:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7382:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7133:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7169:9:13",
														"nodeType": "YulTypedName",
														"src": "7169:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7180:7:13",
														"nodeType": "YulTypedName",
														"src": "7180:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7192:6:13",
														"nodeType": "YulTypedName",
														"src": "7192:6:13",
														"type": ""
													}
												],
												"src": "7133:329:13"
											},
											{
												"body": {
													"nativeSrc": "7551:391:13",
													"nodeType": "YulBlock",
													"src": "7551:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7597:83:13",
																"nodeType": "YulBlock",
																"src": "7597:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7599:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7599:77:13"
																			},
																			"nativeSrc": "7599:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7599:79:13"
																		},
																		"nativeSrc": "7599:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7599:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7572:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7572:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7581:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7568:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:13"
																		},
																		"nativeSrc": "7568:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7564:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7564:3:13"
																},
																"nativeSrc": "7564:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7564:32:13"
															},
															"nativeSrc": "7561:119:13",
															"nodeType": "YulIf",
															"src": "7561:119:13"
														},
														{
															"nativeSrc": "7690:117:13",
															"nodeType": "YulBlock",
															"src": "7690:117:13",
															"statements": [
																{
																	"nativeSrc": "7705:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7705:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7719:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7719:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7709:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7709:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7734:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7734:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7769:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7769:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7780:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7780:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7765:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7765:3:13"
																				},
																				"nativeSrc": "7765:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7765:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7789:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7789:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7744:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7744:20:13"
																		},
																		"nativeSrc": "7744:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7734:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7734:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7817:118:13",
															"nodeType": "YulBlock",
															"src": "7817:118:13",
															"statements": [
																{
																	"nativeSrc": "7832:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7832:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7846:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7836:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7836:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7862:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7862:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7897:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7897:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7908:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7908:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7893:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7893:3:13"
																				},
																				"nativeSrc": "7893:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7893:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7917:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7917:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7872:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7872:20:13"
																		},
																		"nativeSrc": "7872:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7872:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7862:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7862:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7468:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7513:9:13",
														"nodeType": "YulTypedName",
														"src": "7513:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7524:7:13",
														"nodeType": "YulTypedName",
														"src": "7524:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7536:6:13",
														"nodeType": "YulTypedName",
														"src": "7536:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7544:6:13",
														"nodeType": "YulTypedName",
														"src": "7544:6:13",
														"type": ""
													}
												],
												"src": "7468:474:13"
											},
											{
												"body": {
													"nativeSrc": "7976:152:13",
													"nodeType": "YulBlock",
													"src": "7976:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7993:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7993:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7996:77:13",
																		"nodeType": "YulLiteral",
																		"src": "7996:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7986:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:13"
																},
																"nativeSrc": "7986:88:13",
																"nodeType": "YulFunctionCall",
																"src": "7986:88:13"
															},
															"nativeSrc": "7986:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "7986:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8090:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8093:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8093:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8083:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:13"
																},
																"nativeSrc": "8083:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8083:15:13"
															},
															"nativeSrc": "8083:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8083:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8114:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8114:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8117:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8117:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8107:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:13"
																},
																"nativeSrc": "8107:15:13",
																"nodeType": "YulFunctionCall",
																"src": "8107:15:13"
															},
															"nativeSrc": "8107:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "8107:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7948:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "7948:180:13"
											},
											{
												"body": {
													"nativeSrc": "8185:269:13",
													"nodeType": "YulBlock",
													"src": "8185:269:13",
													"statements": [
														{
															"nativeSrc": "8195:22:13",
															"nodeType": "YulAssignment",
															"src": "8195:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8209:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8209:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8215:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8205:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8205:3:13"
																},
																"nativeSrc": "8205:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8205:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8195:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:13"
																}
															]
														},
														{
															"nativeSrc": "8226:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "8226:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8256:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "8256:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8262:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8262:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8252:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:13"
																},
																"nativeSrc": "8252:12:13",
																"nodeType": "YulFunctionCall",
																"src": "8252:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8230:18:13",
																	"nodeType": "YulTypedName",
																	"src": "8230:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8303:51:13",
																"nodeType": "YulBlock",
																"src": "8303:51:13",
																"statements": [
																	{
																		"nativeSrc": "8317:27:13",
																		"nodeType": "YulAssignment",
																		"src": "8317:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8331:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "8331:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8339:4:13",
																					"nodeType": "YulLiteral",
																					"src": "8339:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8327:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "8327:3:13"
																			},
																			"nativeSrc": "8327:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8317:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8317:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8283:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "8283:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8276:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8276:6:13"
																},
																"nativeSrc": "8276:26:13",
																"nodeType": "YulFunctionCall",
																"src": "8276:26:13"
															},
															"nativeSrc": "8273:81:13",
															"nodeType": "YulIf",
															"src": "8273:81:13"
														},
														{
															"body": {
																"nativeSrc": "8406:42:13",
																"nodeType": "YulBlock",
																"src": "8406:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8420:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "8420:16:13"
																			},
																			"nativeSrc": "8420:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8420:18:13"
																		},
																		"nativeSrc": "8420:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8420:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8370:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "8370:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8393:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8393:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8401:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8401:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8390:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8390:2:13"
																		},
																		"nativeSrc": "8390:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8367:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "8367:2:13"
																},
																"nativeSrc": "8367:38:13",
																"nodeType": "YulFunctionCall",
																"src": "8367:38:13"
															},
															"nativeSrc": "8364:84:13",
															"nodeType": "YulIf",
															"src": "8364:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8134:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8169:4:13",
														"nodeType": "YulTypedName",
														"src": "8169:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8178:6:13",
														"nodeType": "YulTypedName",
														"src": "8178:6:13",
														"type": ""
													}
												],
												"src": "8134:320:13"
											},
											{
												"body": {
													"nativeSrc": "8525:53:13",
													"nodeType": "YulBlock",
													"src": "8525:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8542:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "8542:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8565:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8565:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8547:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "8547:17:13"
																		},
																		"nativeSrc": "8547:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8547:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8535:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8535:6:13"
																},
																"nativeSrc": "8535:37:13",
																"nodeType": "YulFunctionCall",
																"src": "8535:37:13"
															},
															"nativeSrc": "8535:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "8535:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8460:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8513:5:13",
														"nodeType": "YulTypedName",
														"src": "8513:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8520:3:13",
														"nodeType": "YulTypedName",
														"src": "8520:3:13",
														"type": ""
													}
												],
												"src": "8460:118:13"
											},
											{
												"body": {
													"nativeSrc": "8710:206:13",
													"nodeType": "YulBlock",
													"src": "8710:206:13",
													"statements": [
														{
															"nativeSrc": "8720:26:13",
															"nodeType": "YulAssignment",
															"src": "8720:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8732:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "8732:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8743:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8743:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8728:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8728:3:13"
																},
																"nativeSrc": "8728:18:13",
																"nodeType": "YulFunctionCall",
																"src": "8728:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8720:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "8720:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8800:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8800:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8813:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8813:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8824:1:13",
																				"nodeType": "YulLiteral",
																				"src": "8824:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8809:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8809:3:13"
																		},
																		"nativeSrc": "8809:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8809:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8756:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8756:43:13"
																},
																"nativeSrc": "8756:71:13",
																"nodeType": "YulFunctionCall",
																"src": "8756:71:13"
															},
															"nativeSrc": "8756:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "8756:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8881:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8881:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8894:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8894:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8905:2:13",
																				"nodeType": "YulLiteral",
																				"src": "8905:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8890:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:13"
																		},
																		"nativeSrc": "8890:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8890:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8837:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "8837:43:13"
																},
																"nativeSrc": "8837:72:13",
																"nodeType": "YulFunctionCall",
																"src": "8837:72:13"
															},
															"nativeSrc": "8837:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "8837:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8584:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8674:9:13",
														"nodeType": "YulTypedName",
														"src": "8674:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8686:6:13",
														"nodeType": "YulTypedName",
														"src": "8686:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8694:6:13",
														"nodeType": "YulTypedName",
														"src": "8694:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8705:4:13",
														"nodeType": "YulTypedName",
														"src": "8705:4:13",
														"type": ""
													}
												],
												"src": "8584:332:13"
											},
											{
												"body": {
													"nativeSrc": "9076:288:13",
													"nodeType": "YulBlock",
													"src": "9076:288:13",
													"statements": [
														{
															"nativeSrc": "9086:26:13",
															"nodeType": "YulAssignment",
															"src": "9086:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9098:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9098:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9109:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9109:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9094:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9094:3:13"
																},
																"nativeSrc": "9094:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9094:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9086:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9086:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9166:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9166:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9179:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9179:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9190:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9190:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9175:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9175:3:13"
																		},
																		"nativeSrc": "9175:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9122:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9122:43:13"
																},
																"nativeSrc": "9122:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9122:71:13"
															},
															"nativeSrc": "9122:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9122:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9247:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9247:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9260:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9260:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9271:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9271:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9256:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9256:3:13"
																		},
																		"nativeSrc": "9256:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9256:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9203:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9203:43:13"
																},
																"nativeSrc": "9203:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9203:72:13"
															},
															"nativeSrc": "9203:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9203:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9329:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9329:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9342:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9342:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9353:2:13",
																				"nodeType": "YulLiteral",
																				"src": "9353:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9338:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9338:3:13"
																		},
																		"nativeSrc": "9338:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9338:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9285:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9285:43:13"
																},
																"nativeSrc": "9285:72:13",
																"nodeType": "YulFunctionCall",
																"src": "9285:72:13"
															},
															"nativeSrc": "9285:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "9285:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8922:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9032:9:13",
														"nodeType": "YulTypedName",
														"src": "9032:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9044:6:13",
														"nodeType": "YulTypedName",
														"src": "9044:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9052:6:13",
														"nodeType": "YulTypedName",
														"src": "9052:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9060:6:13",
														"nodeType": "YulTypedName",
														"src": "9060:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9071:4:13",
														"nodeType": "YulTypedName",
														"src": "9071:4:13",
														"type": ""
													}
												],
												"src": "8922:442:13"
											},
											{
												"body": {
													"nativeSrc": "9468:124:13",
													"nodeType": "YulBlock",
													"src": "9468:124:13",
													"statements": [
														{
															"nativeSrc": "9478:26:13",
															"nodeType": "YulAssignment",
															"src": "9478:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9490:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "9490:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9501:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9501:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9486:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:13"
																},
																"nativeSrc": "9486:18:13",
																"nodeType": "YulFunctionCall",
																"src": "9486:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9478:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "9478:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9558:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9558:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9571:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9571:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9582:1:13",
																				"nodeType": "YulLiteral",
																				"src": "9582:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9567:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9567:3:13"
																		},
																		"nativeSrc": "9567:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9567:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9514:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "9514:43:13"
																},
																"nativeSrc": "9514:71:13",
																"nodeType": "YulFunctionCall",
																"src": "9514:71:13"
															},
															"nativeSrc": "9514:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "9514:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9370:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9440:9:13",
														"nodeType": "YulTypedName",
														"src": "9440:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9452:6:13",
														"nodeType": "YulTypedName",
														"src": "9452:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9463:4:13",
														"nodeType": "YulTypedName",
														"src": "9463:4:13",
														"type": ""
													}
												],
												"src": "9370:222:13"
											},
											{
												"body": {
													"nativeSrc": "9626:152:13",
													"nodeType": "YulBlock",
													"src": "9626:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9643:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9643:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9646:77:13",
																		"nodeType": "YulLiteral",
																		"src": "9646:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9636:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9636:6:13"
																},
																"nativeSrc": "9636:88:13",
																"nodeType": "YulFunctionCall",
																"src": "9636:88:13"
															},
															"nativeSrc": "9636:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "9636:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9740:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9740:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9743:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9743:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9733:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:13"
																},
																"nativeSrc": "9733:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9733:15:13"
															},
															"nativeSrc": "9733:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9733:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9764:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9764:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9767:4:13",
																		"nodeType": "YulLiteral",
																		"src": "9767:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9757:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:13"
																},
																"nativeSrc": "9757:15:13",
																"nodeType": "YulFunctionCall",
																"src": "9757:15:13"
															},
															"nativeSrc": "9757:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "9757:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9598:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "9598:180:13"
											},
											{
												"body": {
													"nativeSrc": "9828:147:13",
													"nodeType": "YulBlock",
													"src": "9828:147:13",
													"statements": [
														{
															"nativeSrc": "9838:25:13",
															"nodeType": "YulAssignment",
															"src": "9838:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9861:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9861:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9843:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9843:17:13"
																},
																"nativeSrc": "9843:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9843:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9838:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9838:1:13"
																}
															]
														},
														{
															"nativeSrc": "9872:25:13",
															"nodeType": "YulAssignment",
															"src": "9872:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9895:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9895:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9877:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "9877:17:13"
																},
																"nativeSrc": "9877:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9877:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9872:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "9872:1:13"
																}
															]
														},
														{
															"nativeSrc": "9906:16:13",
															"nodeType": "YulAssignment",
															"src": "9906:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9917:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9917:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9920:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9920:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9913:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:13"
																},
																"nativeSrc": "9913:9:13",
																"nodeType": "YulFunctionCall",
																"src": "9913:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9906:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9946:22:13",
																"nodeType": "YulBlock",
																"src": "9946:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9948:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "9948:16:13"
																			},
																			"nativeSrc": "9948:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9948:18:13"
																		},
																		"nativeSrc": "9948:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9948:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9938:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "9938:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9941:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "9941:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9935:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "9935:2:13"
																},
																"nativeSrc": "9935:10:13",
																"nodeType": "YulFunctionCall",
																"src": "9935:10:13"
															},
															"nativeSrc": "9932:36:13",
															"nodeType": "YulIf",
															"src": "9932:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9784:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9815:1:13",
														"nodeType": "YulTypedName",
														"src": "9815:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9818:1:13",
														"nodeType": "YulTypedName",
														"src": "9818:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9824:3:13",
														"nodeType": "YulTypedName",
														"src": "9824:3:13",
														"type": ""
													}
												],
												"src": "9784:191:13"
											},
											{
												"body": {
													"nativeSrc": "10107:206:13",
													"nodeType": "YulBlock",
													"src": "10107:206:13",
													"statements": [
														{
															"nativeSrc": "10117:26:13",
															"nodeType": "YulAssignment",
															"src": "10117:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10129:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10129:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10140:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10140:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10125:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:13"
																},
																"nativeSrc": "10125:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10125:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10117:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10117:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10197:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10197:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10210:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10210:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10221:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10221:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10206:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10206:3:13"
																		},
																		"nativeSrc": "10206:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10206:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10153:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10153:43:13"
																},
																"nativeSrc": "10153:71:13",
																"nodeType": "YulFunctionCall",
																"src": "10153:71:13"
															},
															"nativeSrc": "10153:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "10153:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10278:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10278:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10291:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10291:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10302:2:13",
																				"nodeType": "YulLiteral",
																				"src": "10302:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10287:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10287:3:13"
																		},
																		"nativeSrc": "10287:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10287:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10234:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "10234:43:13"
																},
																"nativeSrc": "10234:72:13",
																"nodeType": "YulFunctionCall",
																"src": "10234:72:13"
															},
															"nativeSrc": "10234:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "10234:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "9981:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10071:9:13",
														"nodeType": "YulTypedName",
														"src": "10071:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10083:6:13",
														"nodeType": "YulTypedName",
														"src": "10083:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10091:6:13",
														"nodeType": "YulTypedName",
														"src": "10091:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10102:4:13",
														"nodeType": "YulTypedName",
														"src": "10102:4:13",
														"type": ""
													}
												],
												"src": "9981:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061012a575f3560e01c806340c10f19116100ab578063a217fddf1161006f578063a217fddf14610354578063a9059cbb14610372578063d5391393146103a2578063d547741f146103c0578063dd62ed3e146103dc5761012a565b806340c10f191461029e57806370a08231146102ba57806391d14854146102ea57806395d89b411461031a5780639dc29fac146103385761012a565b8063248a9ca3116100f2578063248a9ca3146101fa578063282c51f31461022a5780632f2ff15d14610248578063313ce5671461026457806336568abe146102825761012a565b806301ffc9a71461012e57806306fdde031461015e578063095ea7b31461017c57806318160ddd146101ac57806323b872dd146101ca575b5f80fd5b610148600480360381019061014391906112dd565b61040c565b6040516101559190611322565b60405180910390f35b610166610485565b60405161017391906113c5565b60405180910390f35b61019660048036038101906101919190611472565b610515565b6040516101a39190611322565b60405180910390f35b6101b4610537565b6040516101c191906114bf565b60405180910390f35b6101e460048036038101906101df91906114d8565b610540565b6040516101f19190611322565b60405180910390f35b610214600480360381019061020f919061155b565b61056e565b6040516102219190611595565b60405180910390f35b61023261058b565b60405161023f9190611595565b60405180910390f35b610262600480360381019061025d91906115ae565b6105af565b005b61026c6105d1565b6040516102799190611607565b60405180910390f35b61029c600480360381019061029791906115ae565b6105d9565b005b6102b860048036038101906102b39190611472565b610654565b005b6102d460048036038101906102cf9190611620565b6106c6565b6040516102e191906114bf565b60405180910390f35b61030460048036038101906102ff91906115ae565b61070b565b6040516103119190611322565b60405180910390f35b61032261076f565b60405161032f91906113c5565b60405180910390f35b610352600480360381019061034d9190611472565b6107ff565b005b61035c610871565b6040516103699190611595565b60405180910390f35b61038c60048036038101906103879190611472565b610877565b6040516103999190611322565b60405180910390f35b6103aa610899565b6040516103b79190611595565b60405180910390f35b6103da60048036038101906103d591906115ae565b6108bd565b005b6103f660048036038101906103f1919061164b565b6108df565b60405161040391906114bf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047e575061047d82610961565b5b9050919050565b606060038054610494906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546104c0906116b6565b801561050b5780601f106104e25761010080835404028352916020019161050b565b820191905f5260205f20905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b5f8061051f6109ca565b905061052c8185856109d1565b600191505092915050565b5f600254905090565b5f8061054a6109ca565b90506105578582856109e3565b610562858585610a75565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6105b88261056e565b6105c181610b65565b6105cb8383610b79565b50505050565b5f6008905090565b6105e16109ca565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610645576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61064f8282610c63565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661067e81610b65565b6106888383610d4d565b7f79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e83836040516106b99291906116f5565b60405180910390a1505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461077e906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa906116b6565b80156107f55780601f106107cc576101008083540402835291602001916107f5565b820191905f5260205f20905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861082981610b65565b6108338383610dcc565b7fd1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c583836040516108649291906116f5565b60405180910390a1505050565b5f801b81565b5f806108816109ca565b905061088e818585610a75565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6108c68261056e565b6108cf81610b65565b6108d98383610c63565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6109de8383836001610e4b565b505050565b5f6109ee84846108df565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a6f5781811015610a60578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a579392919061171c565b60405180910390fd5b610a6e84848484035f610e4b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ae5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610adc9190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b55575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b4c9190611751565b60405180910390fd5b610b6083838361101a565b505050565b610b7681610b716109ca565b611233565b50565b5f610b84838361070b565b610c5957600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bf66109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c5d565b5f90505b92915050565b5f610c6e838361070b565b15610d43575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ce06109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d47565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610db49190611751565b60405180910390fd5b610dc85f838361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e3c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e339190611751565b60405180910390fd5b610e47825f8361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ebb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610eb29190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f2b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f229190611751565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611014578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161100b91906114bf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106a578060025f82825461105e9190611797565b92505081905550611138565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110f3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ea9392919061171c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117f578060025f82825403925050819055506111c9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122691906114bf565b60405180910390a3505050565b61123d828261070b565b6112805780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016112779291906117ca565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112bc81611288565b81146112c6575f80fd5b50565b5f813590506112d7816112b3565b92915050565b5f602082840312156112f2576112f1611284565b5b5f6112ff848285016112c9565b91505092915050565b5f8115159050919050565b61131c81611308565b82525050565b5f6020820190506113355f830184611313565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611372578082015181840152602081019050611357565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113978261133b565b6113a18185611345565b93506113b1818560208601611355565b6113ba8161137d565b840191505092915050565b5f6020820190508181035f8301526113dd818461138d565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61140e826113e5565b9050919050565b61141e81611404565b8114611428575f80fd5b50565b5f8135905061143981611415565b92915050565b5f819050919050565b6114518161143f565b811461145b575f80fd5b50565b5f8135905061146c81611448565b92915050565b5f806040838503121561148857611487611284565b5b5f6114958582860161142b565b92505060206114a68582860161145e565b9150509250929050565b6114b98161143f565b82525050565b5f6020820190506114d25f8301846114b0565b92915050565b5f805f606084860312156114ef576114ee611284565b5b5f6114fc8682870161142b565b935050602061150d8682870161142b565b925050604061151e8682870161145e565b9150509250925092565b5f819050919050565b61153a81611528565b8114611544575f80fd5b50565b5f8135905061155581611531565b92915050565b5f602082840312156115705761156f611284565b5b5f61157d84828501611547565b91505092915050565b61158f81611528565b82525050565b5f6020820190506115a85f830184611586565b92915050565b5f80604083850312156115c4576115c3611284565b5b5f6115d185828601611547565b92505060206115e28582860161142b565b9150509250929050565b5f60ff82169050919050565b611601816115ec565b82525050565b5f60208201905061161a5f8301846115f8565b92915050565b5f6020828403121561163557611634611284565b5b5f6116428482850161142b565b91505092915050565b5f806040838503121561166157611660611284565b5b5f61166e8582860161142b565b925050602061167f8582860161142b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116cd57607f821691505b6020821081036116e0576116df611689565b5b50919050565b6116ef81611404565b82525050565b5f6040820190506117085f8301856116e6565b61171560208301846114b0565b9392505050565b5f60608201905061172f5f8301866116e6565b61173c60208301856114b0565b61174960408301846114b0565b949350505050565b5f6020820190506117645f8301846116e6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117a18261143f565b91506117ac8361143f565b92508282019050808211156117c4576117c361176a565b5b92915050565b5f6040820190506117dd5f8301856116e6565b6117ea6020830184611586565b939250505056fea2646970667358221220390c282ef5f50c2afc6c6b017d56e3edbdf791bbd5b31a69f908b75627fa10f264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x338 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x282 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x47E JUMPI POP PUSH2 0x47D DUP3 PUSH2 0x961 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x494 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C0 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51F PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x52C DUP2 DUP6 DUP6 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x54A PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x557 DUP6 DUP3 DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x562 DUP6 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x5B8 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x5CB DUP4 DUP4 PUSH2 0xB79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64F DUP3 DUP3 PUSH2 0xC63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x67E DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x688 DUP4 DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH32 0x79C65068F81072733B15AB3CBA61B23110793F90AB099D228A414B186333A81E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7AA SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x829 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x833 DUP4 DUP4 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0xD1DF306C742159C188C29D2C167874A39B84FD0F96F794AD7EA53295680EC1C5 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x864 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x881 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x8C6 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x8CF DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x8D9 DUP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EE DUP5 DUP5 PUSH2 0x8DF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA6F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA60 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE4B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB60 DUP4 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB76 DUP2 PUSH2 0xB71 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB84 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0xC59 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF6 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC5D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC6E DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST ISZERO PUSH2 0xD43 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE0 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD47 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC8 PUSH0 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE47 DUP3 PUSH0 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1014 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1138 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x123D DUP3 DUP3 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x1280 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP3 SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BC DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D7 DUP2 PUSH2 0x12B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F1 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FF DUP5 DUP3 DUP6 ADD PUSH2 0x12C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1308 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1335 PUSH0 DUP4 ADD DUP5 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1372 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1397 DUP3 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x13A1 DUP2 DUP6 PUSH2 0x1345 JUMP JUMPDEST SWAP4 POP PUSH2 0x13B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x137D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13DD DUP2 DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x140E DUP3 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141E DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP2 EQ PUSH2 0x1428 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x1415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP2 EQ PUSH2 0x145B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1495 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A6 DUP6 DUP3 DUP7 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B9 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FC DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x151E DUP7 DUP3 DUP8 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP2 EQ PUSH2 0x1544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1555 DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1570 JUMPI PUSH2 0x156F PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157D DUP5 DUP3 DUP6 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x158F DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E2 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1601 DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161A PUSH0 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1635 JUMPI PUSH2 0x1634 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1642 DUP5 DUP3 DUP6 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166E DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167F DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x1689 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EF DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1708 PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x1715 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x172F PUSH0 DUP4 ADD DUP7 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x173C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1749 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17A1 DUP3 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP PUSH2 0x17AC DUP4 PUSH2 0x143F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17C4 JUMPI PUSH2 0x17C3 PUSH2 0x176A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17DD PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x17EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CODECOPY 0xC 0x28 0x2E CREATE2 CREATE2 0xC 0x2A 0xFC PUSH13 0x6B017D56E3EDBDF791BBD5B31A PUSH10 0xF908B75627FA10F26473 PUSH16 0x6C634300081800330000000000000000 ",
							"sourceMap": "188:1270:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3810:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;370:62:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1363:92:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5328:245:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1033:154:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2854:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1195:160:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2187:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;301:62:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4642:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3846:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2565:202:0;2650:4;2688:32;2673:47;;;:11;:47;;;;:87;;;;2724:36;2748:11;2724:23;:36::i;:::-;2673:87;2666:94;;2565:202;;;:::o;2074:89:4:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3810:120:0:-;3875:7;3901:6;:12;3908:4;3901:12;;;;;;;;;;;:22;;;3894:29;;3810:120;;;:::o;370:62:12:-;408:24;370:62;:::o;4226:136:0:-;4300:18;4313:4;4300:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;1363:92:12:-;1421:5;1446:1;1439:8;;1363:92;:::o;5328:245:0:-;5443:12;:10;:12::i;:::-;5421:34;;:18;:34;;;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1033:154:12:-;339:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1125:17:12::1;1131:2;1135:6;1125:5;:17::i;:::-;1158:21;1168:2;1172:6;1158:21;;;;;;;:::i;:::-;;;;;;;;1033:154:::0;;;:::o;3299:116:4:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2854:136:0:-;2931:4;2954:6;:12;2961:4;2954:12;;;;;;;;;;;:20;;:29;2975:7;2954:29;;;;;;;;;;;;;;;;;;;;;;;;;2947:36;;2854:136;;;;:::o;2276:93:4:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;1195:160:12:-;408:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1289:19:12::1;1295:4;1301:6;1289:5;:19::i;:::-;1324:23;1334:4;1340:6;1324:23;;;;;;;:::i;:::-;;;;;;;;1195:160:::0;;;:::o;2187:49:0:-;2232:4;2187:49;;;:::o;3610:178:4:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;301:62:12:-;339:24;301:62;:::o;4642:138:0:-;4717:18;4730:4;4717:12;:18::i;:::-;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;:::-;;4642:138:::0;;;:::o;3846:140:4:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;762:146:8:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;8989:128:4:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;3199:103:0:-;3265:30;3276:4;3282:12;:10;:12::i;:::-;3265:10;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6347:4;6315:6;:12;6322:4;6315:12;;;;;;;;;;;:20;;:29;6336:7;6315:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6397:12;:10;:12::i;:::-;6370:40;;6388:7;6370:40;;6382:4;6370:40;;;;;;;;;;6431:4;6424:11;;;;6272:217;6473:5;6466:12;;6179:316;;;;;:::o;6730:317::-;6808:4;6828:22;6836:4;6842:7;6828;:22::i;:::-;6824:217;;;6898:5;6866:6;:12;6873:4;6866:12;;;;;;;;;;;:20;;:29;6887:7;6866:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6949:12;:10;:12::i;:::-;6922:40;;6940:7;6922:40;;6934:4;6922:40;;;;;;;;;;6983:4;6976:11;;;;6824:217;7025:5;7018:12;;6730:317;;;;;:::o;7721:208:4:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3598:7;3607:4;3565:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3515:108;3432:197;;:::o;88:117:13:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:474::-;7536:6;7544;7593:2;7581:9;7572:7;7568:23;7564:32;7561:119;;;7599:79;;:::i;:::-;7561:119;7719:1;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;:::i;:::-;7734:63;;7690:117;7846:2;7872:53;7917:7;7908:6;7897:9;7893:22;7872:53;:::i;:::-;7862:63;;7817:118;7468:474;;;;;:::o;7948:180::-;7996:77;7993:1;7986:88;8093:4;8090:1;8083:15;8117:4;8114:1;8107:15;8134:320;8178:6;8215:1;8209:4;8205:12;8195:22;;8262:1;8256:4;8252:12;8283:18;8273:81;;8339:4;8331:6;8327:17;8317:27;;8273:81;8401:2;8393:6;8390:14;8370:18;8367:38;8364:84;;8420:18;;:::i;:::-;8364:84;8185:269;8134:320;;;:::o;8460:118::-;8547:24;8565:5;8547:24;:::i;:::-;8542:3;8535:37;8460:118;;:::o;8584:332::-;8705:4;8743:2;8732:9;8728:18;8720:26;;8756:71;8824:1;8813:9;8809:17;8800:6;8756:71;:::i;:::-;8837:72;8905:2;8894:9;8890:18;8881:6;8837:72;:::i;:::-;8584:332;;;;;:::o;8922:442::-;9071:4;9109:2;9098:9;9094:18;9086:26;;9122:71;9190:1;9179:9;9175:17;9166:6;9122:71;:::i;:::-;9203:72;9271:2;9260:9;9256:18;9247:6;9203:72;:::i;:::-;9285;9353:2;9342:9;9338:18;9329:6;9285:72;:::i;:::-;8922:442;;;;;;:::o;9370:222::-;9463:4;9501:2;9490:9;9486:18;9478:26;;9514:71;9582:1;9571:9;9567:17;9558:6;9514:71;:::i;:::-;9370:222;;;;:::o;9598:180::-;9646:77;9643:1;9636:88;9743:4;9740:1;9733:15;9767:4;9764:1;9757:15;9784:191;9824:3;9843:20;9861:1;9843:20;:::i;:::-;9838:25;;9877:20;9895:1;9877:20;:::i;:::-;9872:25;;9920:1;9917;9913:9;9906:16;;9941:3;9938:1;9935:10;9932:36;;;9948:18;;:::i;:::-;9932:36;9784:191;;;;:::o;9981:332::-;10102:4;10140:2;10129:9;10125:18;10117:26;;10153:71;10221:1;10210:9;10206:17;10197:6;10153:71;:::i;:::-;10234:72;10302:2;10291:9;10287:18;10278:6;10234:72;:::i;:::-;9981:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1236600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "352",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"burn(address,uint256)": "infinite",
								"decimals()": "427",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 188,
									"end": 1458,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 532,
									"end": 919,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 919,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 532,
									"end": 919,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 919,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 919,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 532,
									"end": 919,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 532,
									"end": 919,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 532,
									"end": 919,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 649,
									"end": 653,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 674,
									"end": 736,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 680,
									"end": 690,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 723,
									"end": 733,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 723,
									"end": 731,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 723,
									"end": 731,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 723,
									"end": 731,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 723,
									"end": 733,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 723,
									"end": 733,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 723,
									"end": 733,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 723,
									"end": 733,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 723,
									"end": 733,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 715,
									"end": 734,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 715,
									"end": 734,
									"modifierDepth": 1,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 709,
									"end": 711,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "A"
								},
								{
									"begin": 709,
									"end": 734,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 709,
									"end": 734,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 709,
									"end": 734,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 709,
									"end": 734,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 709,
									"end": 734,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 709,
									"end": 734,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 709,
									"end": 734,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 692,
									"end": 705,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 692,
									"end": 735,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 692,
									"end": 735,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 692,
									"end": 735,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 692,
									"end": 735,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "17"
								},
								{
									"begin": 692,
									"end": 735,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 692,
									"end": 735,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "16"
								},
								{
									"begin": 692,
									"end": 735,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 674,
									"end": 679,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "18"
								},
								{
									"begin": 674,
									"end": 679,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 674,
									"end": 679,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 674,
									"end": 736,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 674,
									"end": 736,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 674,
									"end": 736,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 674,
									"end": 736,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 674,
									"end": 736,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 869,
									"end": 911,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 880,
									"end": 898,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 880,
									"end": 898,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 900,
									"end": 910,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 869,
									"end": 879,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 869,
									"end": 879,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 869,
									"end": 879,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 869,
									"end": 911,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 869,
									"end": 911,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 869,
									"end": 911,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 869,
									"end": 911,
									"modifierDepth": 1,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 869,
									"end": 911,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 869,
									"end": 911,
									"modifierDepth": 1,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 919,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1363,
									"end": 1455,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 1363,
									"end": 1455,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1421,
									"end": 1426,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1446,
									"end": 1447,
									"name": "PUSH",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1439,
									"end": 1447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1363,
									"end": 1455,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1363,
									"end": 1455,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6285,
									"end": 6289,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6298,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6284,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 6277,
									"end": 6299,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6322,
									"end": 6326,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6335,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6336,
									"end": 6343,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6407,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6466,
									"end": 6478,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2931,
									"end": 2935,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2974,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2975,
									"end": 2982,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2947,
									"end": 2983,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2854,
									"end": 2990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 7,
									"value": "34"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 13,
									"value": "101"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 13,
									"value": "103"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 13,
									"value": "102"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 13,
									"value": "105"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "57"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 13,
									"value": "106"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 13,
									"value": "109"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 13,
									"value": "108"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "55"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 13,
									"value": "110"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "112"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 13,
									"value": "114"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "59"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 13,
									"value": "117"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "58"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 13,
									"value": "116"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "54"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 13,
									"value": "119"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 13,
									"value": "118"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 13,
									"value": "120"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "53"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 13,
									"value": "123"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 13,
									"value": "122"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "61"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 13,
									"value": "124"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 13,
									"value": "127"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 13,
									"value": "128"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "64"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 13,
									"value": "130"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3159,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 3161,
									"end": 3167,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 3198,
									"end": 3207,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3189,
									"end": 3196,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3185,
									"end": 3208,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 3181,
									"end": 3213,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 3216,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "tag",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "tag",
									"source": 13,
									"value": "132"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3336,
									"end": 3360,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3387,
									"end": 3405,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3376,
									"end": 3406,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3409,
									"end": 3488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "tag",
									"source": 13,
									"value": "135"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "tag",
									"source": 13,
									"value": "134"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 3580,
									"end": 3587,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3571,
									"end": 3577,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3560,
									"end": 3569,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3556,
									"end": 3578,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 3514,
									"end": 3588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "tag",
									"source": 13,
									"value": "136"
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3307,
									"end": 3598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3658,
									"end": 3660,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 3647,
									"end": 3656,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3637,
									"end": 3662,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 3689,
									"end": 3707,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3681,
									"end": 3687,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 3678,
									"end": 3708,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 3711,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "tag",
									"source": 13,
									"value": "138"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "tag",
									"source": 13,
									"value": "137"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3882,
									"end": 3889,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 3873,
									"end": 3879,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 3862,
									"end": 3871,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "62"
								},
								{
									"begin": 3816,
									"end": 3890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "tag",
									"source": 13,
									"value": "139"
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3608,
									"end": 3900,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3939,
									"end": 3941,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 4021,
									"end": 4028,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 4012,
									"end": 4018,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4001,
									"end": 4010,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 3997,
									"end": 4019,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "65"
								},
								{
									"begin": 3965,
									"end": 4029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "tag",
									"source": 13,
									"value": "140"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3910,
									"end": 4039,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 3037,
									"end": 4046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "tag",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4143,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4132,
									"end": 4144,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4052,
									"end": 4151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "tag",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4205,
									"end": 4282,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4202,
									"end": 4203,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4195,
									"end": 4283,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4302,
									"end": 4306,
									"name": "PUSH",
									"source": 13,
									"value": "22"
								},
								{
									"begin": 4299,
									"end": 4300,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 4292,
									"end": 4307,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4326,
									"end": 4330,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 4323,
									"end": 4324,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4316,
									"end": 4331,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "tag",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4387,
									"end": 4393,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 4418,
									"end": 4422,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4414,
									"end": 4426,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4471,
									"end": 4472,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 4465,
									"end": 4469,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4461,
									"end": 4473,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4492,
									"end": 4510,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 13,
									"value": "7F"
								},
								{
									"begin": 4540,
									"end": 4546,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4536,
									"end": 4553,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "tag",
									"source": 13,
									"value": "144"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4610,
									"end": 4612,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4602,
									"end": 4608,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4599,
									"end": 4613,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4576,
									"end": 4614,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "67"
								},
								{
									"begin": 4629,
									"end": 4647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "tag",
									"source": 13,
									"value": "146"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "tag",
									"source": 13,
									"value": "145"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4394,
									"end": 4663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4343,
									"end": 4663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "tag",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4718,
									"end": 4722,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4764,
									"end": 4767,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4768,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4796,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4803,
									"name": "KECCAK256",
									"source": 13
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4669,
									"end": 4810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "tag",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 4900,
									"end": 4902,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 4888,
									"end": 4893,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 4884,
									"end": 4898,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 4880,
									"end": 4903,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4816,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "tag",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 4959,
									"end": 4967,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5009,
									"end": 5014,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 4999,
									"end": 5015,
									"name": "SHL",
									"source": 13
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 4915,
									"end": 5022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "tag",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5097,
									"end": 5103,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5147,
									"end": 5148,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 5135,
									"end": 5145,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5131,
									"end": 5149,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 5200,
									"end": 5266,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5189,
									"end": 5198,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 5170,
									"end": 5267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "tag",
									"source": 13,
									"value": "151"
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5307,
									"end": 5316,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "71"
								},
								{
									"begin": 5288,
									"end": 5327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "tag",
									"source": 13,
									"value": "152"
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "SWAP6",
									"source": 13
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5360,
									"end": 5364,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5356,
									"end": 5365,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 5349,
									"end": 5354,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5345,
									"end": 5366,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5409,
									"end": 5413,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 5399,
									"end": 5407,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5385,
									"end": 5415,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5028,
									"end": 5421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "tag",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5455,
									"end": 5458,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5481,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5427,
									"end": 5487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "tag",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5543,
									"end": 5552,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 5621,
									"end": 5626,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 5603,
									"end": 5627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "tag",
									"source": 13,
									"value": "157"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 5594,
									"end": 5628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "tag",
									"source": 13,
									"value": "156"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 5576,
									"end": 5629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "tag",
									"source": 13,
									"value": "155"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5493,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "tag",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5684,
									"end": 5687,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5705,
									"end": 5710,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5641,
									"end": 5716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "tag",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 5863,
									"end": 5870,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "74"
								},
								{
									"begin": 5832,
									"end": 5871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "tag",
									"source": 13,
									"value": "160"
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5966,
									"end": 5982,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "75"
								},
								{
									"begin": 5942,
									"end": 5983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "tag",
									"source": 13,
									"value": "162"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5934,
									"end": 5940,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5927,
									"end": 5931,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 5921,
									"end": 5932,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "72"
								},
								{
									"begin": 5893,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "tag",
									"source": 13,
									"value": "161"
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 5887,
									"end": 5891,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 5880,
									"end": 5985,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 5798,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 5722,
									"end": 5991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "tag",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6042,
									"end": 6045,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 5997,
									"end": 6070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "tag",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "77"
								},
								{
									"begin": 6153,
									"end": 6185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "tag",
									"source": 13,
									"value": "165"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 6252,
									"end": 6258,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6244,
									"end": 6250,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6238,
									"end": 6242,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "76"
								},
								{
									"begin": 6194,
									"end": 6259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "tag",
									"source": 13,
									"value": "166"
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6129,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6076,
									"end": 6265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "tag",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6348,
									"end": 6351,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6341,
									"end": 6346,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6338,
									"end": 6352,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 6439,
									"end": 6440,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 6432,
									"end": 6437,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "78"
								},
								{
									"begin": 6402,
									"end": 6441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "tag",
									"source": 13,
									"value": "171"
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6375,
									"end": 6376,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 6368,
									"end": 6373,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6364,
									"end": 6377,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "168"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 13,
									"value": "170"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6271,
									"end": 6457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "tag",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6564,
									"end": 6566,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 6559,
									"end": 6562,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6630,
									"end": 6635,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 6598,
									"end": 6636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "tag",
									"source": 13,
									"value": "174"
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 6700,
									"end": 6710,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 6682,
									"end": 6711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "tag",
									"source": 13,
									"value": "175"
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6672,
									"end": 6680,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6668,
									"end": 6712,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6865,
									"end": 6867,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 6853,
									"end": 6863,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6850,
									"end": 6868,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 6886,
									"end": 6894,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "tag",
									"source": 13,
									"value": "176"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "178"
								},
								{
									"begin": 6983,
									"end": 6986,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "70"
								},
								{
									"begin": 6965,
									"end": 6987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "tag",
									"source": 13,
									"value": "178"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6955,
									"end": 6963,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 6951,
									"end": 6988,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 6938,
									"end": 6949,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "79"
								},
								{
									"begin": 6909,
									"end": 6989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "tag",
									"source": 13,
									"value": "177"
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "tag",
									"source": 13,
									"value": "173"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 6463,
									"end": 7006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "tag",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7066,
									"end": 7074,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7121,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7110,
									"end": 7114,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7106,
									"end": 7122,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7012,
									"end": 7129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "tag",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7179,
									"end": 7185,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 7260,
									"end": 7261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7256,
									"end": 7262,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7248,
									"end": 7253,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 7245,
									"end": 7246,
									"name": "PUSH",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7241,
									"end": 7254,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "81"
								},
								{
									"begin": 7212,
									"end": 7263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "tag",
									"source": 13,
									"value": "181"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7208,
									"end": 7264,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 7293,
									"end": 7297,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 7287,
									"end": 7291,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7283,
									"end": 7298,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7186,
									"end": 7304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7135,
									"end": 7304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "tag",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7385,
									"end": 7389,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 7556,
									"end": 7559,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 7531,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "tag",
									"source": 13,
									"value": "183"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7593,
									"end": 7596,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7577,
									"end": 7598,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7309,
									"end": 7604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "tag",
									"source": 13,
									"value": "8"
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 7759,
									"end": 7762,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "66"
								},
								{
									"begin": 7726,
									"end": 7763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "tag",
									"source": 13,
									"value": "185"
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7828,
									"end": 7846,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 7817,
									"end": 7847,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "56"
								},
								{
									"begin": 7850,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "tag",
									"source": 13,
									"value": "187"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "tag",
									"source": 13,
									"value": "186"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 7926,
									"end": 7930,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 7920,
									"end": 7931,
									"name": "SLOAD",
									"source": 13
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "68"
								},
								{
									"begin": 7894,
									"end": 7932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "tag",
									"source": 13,
									"value": "188"
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 8039,
									"end": 8045,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8025,
									"end": 8029,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 7979,
									"end": 8046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "tag",
									"source": 13,
									"value": "189"
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8073,
									"end": 8074,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8097,
									"end": 8101,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8129,
									"end": 8131,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8121,
									"end": 8127,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8118,
									"end": 8132,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 8146,
									"end": 8147,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8803,
									"end": 8804,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8869,
									"end": 8878,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8864,
									"end": 8867,
									"name": "DUP8",
									"source": 13
								},
								{
									"begin": 8860,
									"end": 8879,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "tag",
									"source": 13,
									"value": "192"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 8980,
									"end": 8986,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "83"
								},
								{
									"begin": 8920,
									"end": 8987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "tag",
									"source": 13,
									"value": "193"
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8914,
									"end": 8918,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8907,
									"end": 8988,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8776,
									"end": 8998,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "tag",
									"source": 13,
									"value": "191"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8193,
									"end": 8197,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8189,
									"end": 8198,
									"name": "NOT",
									"source": 13
								},
								{
									"begin": 8181,
									"end": 8187,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8177,
									"end": 8199,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "69"
								},
								{
									"begin": 8227,
									"end": 8264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "tag",
									"source": 13,
									"value": "194"
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8314,
									"end": 8321,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8308,
									"end": 8322,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8393,
									"end": 8402,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8388,
									"end": 8391,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8384,
									"end": 8403,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8378,
									"end": 8404,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8370,
									"end": 8376,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8363,
									"end": 8405,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8444,
									"end": 8445,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 8442,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8432,
									"end": 8446,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8491,
									"end": 8493,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8480,
									"end": 8489,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 8476,
									"end": 8494,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8337,
									"end": 8341,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 8334,
									"end": 8335,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 8330,
									"end": 8342,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "195"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 13,
									"value": "197"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8536,
									"end": 8542,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8524,
									"end": 8543,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 8594,
									"end": 8603,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8585,
									"end": 8604,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8579,
									"end": 8605,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8679,
									"end": 8683,
									"name": "PUSH",
									"source": 13,
									"value": "1F"
								},
								{
									"begin": 8671,
									"end": 8677,
									"name": "DUP10",
									"source": 13
								},
								{
									"begin": 8667,
									"end": 8684,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 8656,
									"end": 8665,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "82"
								},
								{
									"begin": 8637,
									"end": 8685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "tag",
									"source": 13,
									"value": "199"
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 8622,
									"end": 8686,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8544,
									"end": 8700,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "tag",
									"source": 13,
									"value": "198"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 8742,
									"end": 8743,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 8734,
									"end": 8740,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8730,
									"end": 8744,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 8726,
									"end": 8748,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 8720,
									"end": 8724,
									"name": "DUP9",
									"source": 13
								},
								{
									"begin": 8713,
									"end": 8749,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "tag",
									"source": 13,
									"value": "190"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 7609,
									"end": 9004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9010,
									"end": 9190,
									"name": "tag",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 9010,
									"end": 9190,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9058,
									"end": 9135,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9055,
									"end": 9056,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9048,
									"end": 9136,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9155,
									"end": 9159,
									"name": "PUSH",
									"source": 13,
									"value": "11"
								},
								{
									"begin": 9152,
									"end": 9153,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 9145,
									"end": 9160,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 9179,
									"end": 9183,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 9176,
									"end": 9177,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9169,
									"end": 9184,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "tag",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9238,
									"end": 9246,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9285,
									"end": 9290,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9282,
									"end": 9283,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9278,
									"end": 9291,
									"name": "SHR",
									"source": 13
								},
								{
									"begin": 9257,
									"end": 9291,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9257,
									"end": 9291,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9196,
									"end": 9298,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "tag",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9365,
									"end": 9370,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 9372,
									"end": 9376,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 9396,
									"end": 9402,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9402,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 9387,
									"end": 9402,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9420,
									"end": 9425,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 9411,
									"end": 9425,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 9411,
									"end": 9425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "tag",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9455,
									"end": 9456,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9445,
									"end": 9453,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9442,
									"end": 9457,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9550,
									"end": 9554,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 9545,
									"end": 9548,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 9541,
									"end": 9555,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 9535,
									"end": 9539,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 9532,
									"end": 9556,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 9559,
									"end": 9577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "tag",
									"source": 13,
									"value": "207"
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "tag",
									"source": 13,
									"value": "206"
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9609,
									"end": 9610,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 9599,
									"end": 9607,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 9595,
									"end": 9611,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10024,
									"end": 10028,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 10017,
									"end": 10022,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10013,
									"end": 10029,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 10004,
									"end": 10029,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10004,
									"end": 10029,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "tag",
									"source": 13,
									"value": "208"
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10074,
									"end": 10078,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 10068,
									"end": 10072,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10064,
									"end": 10079,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 10056,
									"end": 10079,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10056,
									"end": 10079,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 10127,
									"end": 10135,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "85"
								},
								{
									"begin": 10104,
									"end": 10136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "tag",
									"source": 13,
									"value": "209"
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10092,
									"end": 10136,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 10092,
									"end": 10136,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "203"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "tag",
									"source": 13,
									"value": "205"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 9304,
									"end": 10152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "tag",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10212,
									"end": 10217,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10403,
									"end": 10411,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10424,
									"end": 10425,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 10415,
									"end": 10425,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10415,
									"end": 10425,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10426,
									"end": 10431,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 10426,
									"end": 10431,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "tag",
									"source": 13,
									"value": "211"
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10452,
									"end": 10456,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10469,
									"end": 10470,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 10460,
									"end": 10470,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10460,
									"end": 10470,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10471,
									"end": 10476,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 10471,
									"end": 10476,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "tag",
									"source": 13,
									"value": "212"
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10538,
									"end": 10542,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10586,
									"end": 10587,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10622,
									"end": 10623,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "tag",
									"source": 13,
									"value": "214"
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10599,
									"end": 10600,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 10590,
									"end": 10600,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10590,
									"end": 10600,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10601,
									"end": 10606,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10601,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 10601,
									"end": 10606,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "tag",
									"source": 13,
									"value": "215"
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10662,
									"end": 10665,
									"name": "PUSH",
									"source": 13,
									"value": "FF"
								},
								{
									"begin": 10652,
									"end": 10660,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10649,
									"end": 10666,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 10669,
									"end": 10687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "tag",
									"source": 13,
									"value": "217"
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "tag",
									"source": 13,
									"value": "216"
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10718,
									"end": 10726,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10715,
									"end": 10716,
									"name": "PUSH",
									"source": 13,
									"value": "2"
								},
								{
									"begin": 10711,
									"end": 10727,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 10702,
									"end": 10727,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 10702,
									"end": 10727,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10753,
									"end": 10756,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10746,
									"end": 10751,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10743,
									"end": 10757,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 10760,
									"end": 10778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "tag",
									"source": 13,
									"value": "219"
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "tag",
									"source": 13,
									"value": "218"
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10793,
									"end": 10798,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10793,
									"end": 10798,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 10793,
									"end": 10798,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "tag",
									"source": 13,
									"value": "213"
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10917,
									"end": 10919,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 10907,
									"end": 10915,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10904,
									"end": 10920,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 10898,
									"end": 10901,
									"name": "PUSH",
									"source": 13,
									"value": "133"
								},
								{
									"begin": 10892,
									"end": 10896,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 10889,
									"end": 10902,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 10885,
									"end": 10921,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 10867,
									"end": 10869,
									"name": "PUSH",
									"source": 13,
									"value": "4E"
								},
								{
									"begin": 10857,
									"end": 10865,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10854,
									"end": 10870,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 10849,
									"end": 10851,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 10843,
									"end": 10847,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 10840,
									"end": 10852,
									"name": "LT",
									"source": 13
								},
								{
									"begin": 10836,
									"end": 10871,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 10820,
									"end": 10931,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 10973,
									"end": 10981,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10967,
									"end": 10971,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 10963,
									"end": 10982,
									"name": "EXP",
									"source": 13
								},
								{
									"begin": 10954,
									"end": 10982,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 10954,
									"end": 10982,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11008,
									"end": 11011,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11001,
									"end": 11006,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 10998,
									"end": 11012,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 11015,
									"end": 11033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "tag",
									"source": 13,
									"value": "222"
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "tag",
									"source": 13,
									"value": "221"
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11048,
									"end": 11053,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 11048,
									"end": 11053,
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "tag",
									"source": 13,
									"value": "220"
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 11126,
									"end": 11129,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11116,
									"end": 11124,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11110,
									"end": 11114,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11107,
									"end": 11108,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "86"
								},
								{
									"begin": 11088,
									"end": 11130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "tag",
									"source": 13,
									"value": "223"
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11162,
									"end": 11166,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11157,
									"end": 11160,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11153,
									"end": 11167,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 11146,
									"end": 11151,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11143,
									"end": 11168,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 11171,
									"end": 11189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "tag",
									"source": 13,
									"value": "225"
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "tag",
									"source": 13,
									"value": "224"
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11220,
									"end": 11224,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11213,
									"end": 11218,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11209,
									"end": 11225,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 11200,
									"end": 11225,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11200,
									"end": 11225,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "tag",
									"source": 13,
									"value": "210"
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 10158,
									"end": 11231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "tag",
									"source": 13,
									"value": "15"
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11297,
									"end": 11302,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 11339,
									"end": 11343,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 11321,
									"end": 11344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "tag",
									"source": 13,
									"value": "227"
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11313,
									"end": 11344,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11313,
									"end": 11344,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "228"
								},
								{
									"begin": 11383,
									"end": 11391,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 11365,
									"end": 11392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "tag",
									"source": 13,
									"value": "228"
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11353,
									"end": 11392,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11353,
									"end": 11392,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 11448,
									"end": 11514,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11438,
									"end": 11446,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11432,
									"end": 11436,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "87"
								},
								{
									"begin": 11411,
									"end": 11515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "tag",
									"source": 13,
									"value": "229"
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11402,
									"end": 11515,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11402,
									"end": 11515,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11237,
									"end": 11522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "tag",
									"source": 13,
									"value": "17"
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11568,
									"end": 11575,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 11609,
									"end": 11610,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 11591,
									"end": 11611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "tag",
									"source": 13,
									"value": "231"
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11586,
									"end": 11611,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11586,
									"end": 11611,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 11643,
									"end": 11644,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 11625,
									"end": 11645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "tag",
									"source": 13,
									"value": "232"
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11620,
									"end": 11645,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11620,
									"end": 11645,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11680,
									"end": 11681,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11677,
									"end": 11678,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11673,
									"end": 11682,
									"name": "MUL",
									"source": 13
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 11720,
									"end": 11731,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 11702,
									"end": 11732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "tag",
									"source": 13,
									"value": "233"
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11691,
									"end": 11732,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11691,
									"end": 11732,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11881,
									"end": 11882,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11872,
									"end": 11879,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 11868,
									"end": 11883,
									"name": "DIV",
									"source": 13
								},
								{
									"begin": 11865,
									"end": 11866,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 11862,
									"end": 11884,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 11842,
									"end": 11843,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 11835,
									"end": 11844,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 11815,
									"end": 11898,
									"name": "OR",
									"source": 13
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 11911,
									"end": 11929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "tag",
									"source": 13,
									"value": "235"
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "tag",
									"source": 13,
									"value": "234"
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11576,
									"end": 11938,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11528,
									"end": 11938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "tag",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 11981,
									"end": 11988,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12021,
									"end": 12063,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12014,
									"end": 12019,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12010,
									"end": 12064,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 11999,
									"end": 12064,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11999,
									"end": 12064,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 11944,
									"end": 12070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "tag",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12113,
									"end": 12120,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 12160,
									"end": 12165,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "88"
								},
								{
									"begin": 12142,
									"end": 12166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "tag",
									"source": 13,
									"value": "238"
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12131,
									"end": 12166,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12131,
									"end": 12166,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12076,
									"end": 12172,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "tag",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 12283,
									"end": 12288,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "89"
								},
								{
									"begin": 12265,
									"end": 12289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "tag",
									"source": 13,
									"value": "240"
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12260,
									"end": 12263,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12253,
									"end": 12290,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12178,
									"end": 12296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12395,
									"end": 12399,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12433,
									"end": 12435,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 12422,
									"end": 12431,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12418,
									"end": 12436,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12410,
									"end": 12436,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12410,
									"end": 12436,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 12514,
									"end": 12515,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12503,
									"end": 12512,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12499,
									"end": 12516,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12490,
									"end": 12496,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 12446,
									"end": 12517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "tag",
									"source": 13,
									"value": "242"
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12302,
									"end": 12524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12570,
									"end": 12573,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "244"
								},
								{
									"begin": 12607,
									"end": 12608,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 12589,
									"end": 12609,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "tag",
									"source": 13,
									"value": "244"
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12584,
									"end": 12609,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12584,
									"end": 12609,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 12641,
									"end": 12642,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 12623,
									"end": 12643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "tag",
									"source": 13,
									"value": "245"
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12618,
									"end": 12643,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 12618,
									"end": 12643,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12666,
									"end": 12667,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12663,
									"end": 12664,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12659,
									"end": 12668,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 12652,
									"end": 12668,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 12652,
									"end": 12668,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12687,
									"end": 12690,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 12684,
									"end": 12685,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12681,
									"end": 12691,
									"name": "GT",
									"source": 13
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "246"
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "84"
								},
								{
									"begin": 12694,
									"end": 12712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "tag",
									"source": 13,
									"value": "247"
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "tag",
									"source": 13,
									"value": "246"
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12530,
									"end": 12721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "tag",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "249"
								},
								{
									"begin": 12832,
									"end": 12837,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "63"
								},
								{
									"begin": 12814,
									"end": 12838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "tag",
									"source": 13,
									"value": "249"
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12809,
									"end": 12812,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 12802,
									"end": 12839,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12727,
									"end": 12845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "tag",
									"source": 13,
									"value": "43"
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13000,
									"end": 13004,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 13038,
									"end": 13040,
									"name": "PUSH",
									"source": 13,
									"value": "60"
								},
								{
									"begin": 13027,
									"end": 13036,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 13023,
									"end": 13041,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13015,
									"end": 13041,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13015,
									"end": 13041,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 13119,
									"end": 13120,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 13108,
									"end": 13117,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13104,
									"end": 13121,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13095,
									"end": 13101,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "90"
								},
								{
									"begin": 13051,
									"end": 13122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "tag",
									"source": 13,
									"value": "251"
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "252"
								},
								{
									"begin": 13200,
									"end": 13202,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 13189,
									"end": 13198,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13185,
									"end": 13203,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13176,
									"end": 13182,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 13132,
									"end": 13204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "tag",
									"source": 13,
									"value": "252"
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 13282,
									"end": 13284,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 13271,
									"end": 13280,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13267,
									"end": 13285,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13258,
									"end": 13264,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 13214,
									"end": 13286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "tag",
									"source": 13,
									"value": "253"
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "SWAP5",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "SWAP4",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 12851,
									"end": 13293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13392,
									"end": 13396,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 13430,
									"end": 13432,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 13419,
									"end": 13428,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 13415,
									"end": 13433,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13407,
									"end": 13433,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 13407,
									"end": 13433,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "255"
								},
								{
									"begin": 13511,
									"end": 13512,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 13500,
									"end": 13509,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 13496,
									"end": 13513,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 13487,
									"end": 13493,
									"name": "DUP5",
									"source": 13
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "91"
								},
								{
									"begin": 13443,
									"end": 13514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "tag",
									"source": 13,
									"value": "255"
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 13299,
									"end": 13521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 188,
									"end": 1458,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220390c282ef5f50c2afc6c6b017d56e3edbdf791bbd5b31a69f908b75627fa10f264736f6c63430008180033",
									".code": [
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "40C10F19"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "A9059CBB"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "D5391393"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "DD62ED3E"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "40C10F19"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "70A08231"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "95D89B41"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "9DC29FAC"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "282C51F3"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "313CE567"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "6FDDE03"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "95EA7B3"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "18160DDD"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "23B872DD"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 188,
											"end": 1458,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 370,
											"end": 432,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 370,
											"end": 432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 370,
											"end": 432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "tag",
											"source": 12,
											"value": "58"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1363,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1363,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1033,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1033,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 1195,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1195,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 301,
											"end": 363,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 301,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "tag",
											"source": 12,
											"value": "95"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 301,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2748,
											"end": 2759,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2724,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3894,
											"end": 3923,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 370,
											"end": 432,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 408,
											"end": 432,
											"name": "PUSH",
											"source": 12,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 370,
											"end": 432,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 370,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4313,
											"end": 4317,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4300,
											"end": 4318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 4300,
											"end": 4318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1421,
											"end": 1426,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1447,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1439,
											"end": 1447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1439,
											"end": 1447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5443,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 5443,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5443,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 339,
											"end": 363,
											"name": "PUSH",
											"source": 12,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1125,
											"end": 1142,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1131,
											"end": 1133,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1135,
											"end": 1141,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1130,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1125,
											"end": 1142,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1142,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1125,
											"end": 1142,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "79C65068F81072733B15AB3CBA61B23110793F90AB099D228A414B186333A81E"
										},
										{
											"begin": 1168,
											"end": 1170,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1172,
											"end": 1178,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1158,
											"end": 1179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1158,
											"end": 1179,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1033,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2974,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2975,
											"end": 2982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2947,
											"end": 2983,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 408,
											"end": 432,
											"name": "PUSH",
											"source": 12,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1289,
											"end": 1308,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1295,
											"end": 1299,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1301,
											"end": 1307,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 1289,
											"end": 1308,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1289,
											"end": 1308,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 1289,
											"end": 1308,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D1DF306C742159C188C29D2C167874A39B84FD0F96F794AD7EA53295680EC1C5"
										},
										{
											"begin": 1334,
											"end": 1338,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1340,
											"end": 1346,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 1324,
											"end": 1347,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1347,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1195,
											"end": 1355,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 301,
											"end": 363,
											"name": "tag",
											"source": 12,
											"value": "96"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 339,
											"end": 363,
											"name": "PUSH",
											"source": 12,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 301,
											"end": 363,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 301,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4717,
											"end": 4735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3282,
											"end": 3292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3282,
											"end": 3294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3282,
											"end": 3294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6285,
											"end": 6289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6277,
											"end": 6299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 6277,
											"end": 6299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6322,
											"end": 6326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6336,
											"end": 6343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6397,
											"end": 6407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6397,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6836,
											"end": 6840,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6842,
											"end": 6849,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6828,
											"end": 6850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 6828,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6898,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6878,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6887,
											"end": 6894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6895,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6866,
											"end": 6903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6949,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6949,
											"end": 6961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 6949,
											"end": 6961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6940,
											"end": 6947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6934,
											"end": 6938,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6922,
											"end": 6962,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6983,
											"end": 6987,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6976,
											"end": 6987,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 6824,
											"end": 7041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7025,
											"end": 7030,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7018,
											"end": 7030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6730,
											"end": 7047,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 4,
											"value": "228"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 4,
											"value": "231"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3520,
											"end": 3542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 3520,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3611,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 3565,
											"end": 3612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3432,
											"end": 3629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "279"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "278"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "280"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "243"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "283"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "244"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "285"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "296"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "249"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 13,
											"value": "299"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "250"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 13,
											"value": "302"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 13,
											"value": "304"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "252"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 13,
											"value": "307"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "255"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 13,
											"value": "315"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 13,
											"value": "317"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "256"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "tag",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5180,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "tag",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5336,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5326,
											"end": 5361,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5263,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "259"
										},
										{
											"begin": 5491,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5391,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5816,
											"end": 5838,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5741,
											"end": 5858,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5536,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "258"
										},
										{
											"begin": 5958,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5946,
											"end": 5983,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6192,
											"end": 6209,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 6139,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5995,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6327,
											"end": 6334,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6323,
											"end": 6346,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 6354,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6445,
											"end": 6562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6223,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "tag",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6767,
											"end": 6783,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6703,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 6894,
											"end": 6899,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "262"
										},
										{
											"begin": 6878,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "263"
										},
										{
											"begin": 7053,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6913,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7212,
											"end": 7244,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7247,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7338,
											"end": 7455,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7133,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7572,
											"end": 7579,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7568,
											"end": 7591,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7564,
											"end": 7596,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "238"
										},
										{
											"begin": 7599,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7719,
											"end": 7720,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7769,
											"end": 7778,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7765,
											"end": 7787,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7744,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7690,
											"end": 7807,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 7917,
											"end": 7924,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7893,
											"end": 7915,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "253"
										},
										{
											"begin": 7872,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7817,
											"end": 7935,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7468,
											"end": 7942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "tag",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7996,
											"end": 8073,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8074,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 8083,
											"end": 8098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8107,
											"end": 8122,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8205,
											"end": 8217,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8252,
											"end": 8264,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8401,
											"end": 8403,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8390,
											"end": 8404,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8367,
											"end": 8405,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "264"
										},
										{
											"begin": 8420,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8185,
											"end": 8454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8134,
											"end": 8454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "tag",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8565,
											"end": 8570,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "251"
										},
										{
											"begin": 8547,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8542,
											"end": 8545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8535,
											"end": 8572,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8460,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8705,
											"end": 8709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8743,
											"end": 8745,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8746,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8822,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8826,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8800,
											"end": 8806,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 8756,
											"end": 8827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 8905,
											"end": 8907,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8894,
											"end": 8903,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8890,
											"end": 8908,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8881,
											"end": 8887,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 8837,
											"end": 8909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8584,
											"end": 8916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9071,
											"end": 9075,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9111,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9098,
											"end": 9107,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9094,
											"end": 9112,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9112,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9086,
											"end": 9112,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9188,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9175,
											"end": 9192,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 9122,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 9271,
											"end": 9273,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9260,
											"end": 9269,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9247,
											"end": 9253,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 9203,
											"end": 9275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 9353,
											"end": 9355,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9329,
											"end": 9335,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "257"
										},
										{
											"begin": 9285,
											"end": 9357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8922,
											"end": 9364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9463,
											"end": 9467,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9501,
											"end": 9503,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9499,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 9582,
											"end": 9583,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9580,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9558,
											"end": 9564,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 9514,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9370,
											"end": 9592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9598,
											"end": 9778,
											"name": "tag",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 9598,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9646,
											"end": 9723,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9643,
											"end": 9644,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9724,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9733,
											"end": 9748,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9767,
											"end": 9771,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9772,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "tag",
											"source": 13,
											"value": "225"
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9824,
											"end": 9827,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9861,
											"end": 9862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 9843,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9838,
											"end": 9863,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9838,
											"end": 9863,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 9895,
											"end": 9896,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 9877,
											"end": 9897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9872,
											"end": 9897,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9872,
											"end": 9897,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 9921,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9917,
											"end": 9918,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9913,
											"end": 9922,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9922,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9906,
											"end": 9922,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9941,
											"end": 9944,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9935,
											"end": 9945,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "266"
										},
										{
											"begin": 9948,
											"end": 9966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9784,
											"end": 9975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10102,
											"end": 10106,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10140,
											"end": 10142,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10129,
											"end": 10138,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10117,
											"end": 10143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10117,
											"end": 10143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10219,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10206,
											"end": 10223,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10197,
											"end": 10203,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "265"
										},
										{
											"begin": 10153,
											"end": 10224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 10302,
											"end": 10304,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10291,
											"end": 10300,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10287,
											"end": 10305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 10234,
											"end": 10306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9981,
											"end": 10313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"assignment3/Swap.sol",
								"assignment3/interfaces/ISwap.sol",
								"assignment3/sAsset.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"assignment3/sAsset.sol\":\"sAsset\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xa0e92d42942f4f57c5be50568dac11e9d00c93efcb458026e18d2d9b9b2e7308\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46326c0bb1e296b67185e81c918e0b40501b8b6386165855df0a3f3c634b6a80\",\"dweb:/ipfs/QmTwyrDYtsxsk6pymJTK94PnEpzsmkpUxFuzEiakDopy4Z\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"assignment3/sAsset.sol\":{\"keccak256\":\"0x3e5e0163bcba4c9da5b8faaf8ff82e54502f0a582acd3f77c9b18174715da8ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://10a76734a93a62837cd177ff1a969d2977c53aadd992e55f09a90fed87204c3d\",\"dweb:/ipfs/QmZu42zyucwRt1sdCwQArjHH7oBNuKUzcQxydCfwZUqBXW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 686,
								"contract": "assignment3/sAsset.sol:sAsset",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 692,
								"contract": "assignment3/sAsset.sol:sAsset",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 694,
								"contract": "assignment3/sAsset.sol:sAsset",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 696,
								"contract": "assignment3/sAsset.sol:sAsset",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 698,
								"contract": "assignment3/sAsset.sol:sAsset",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "assignment3/sAsset.sol:sAsset",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "assignment3/sAsset.sol:sAsset",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "assignment3/sAsset.sol:sAsset",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1312
						],
						"ERC165": [
							1336
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1313,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1337,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1336,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1336,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1336,
								1348,
								378,
								1312
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1335
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1335,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6814:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6836:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6842:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6828:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6828:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7004:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7025:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7018:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6824:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6852:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6866:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6873:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6866:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6879:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6866:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6887:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6866:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6898:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6866:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6866:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6934:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6940:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "6949:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6949:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6922:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6922:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6917:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6983:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6976:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6739:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6759:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6751:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6773:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6765:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6750:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6808:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6808:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6807:6:0"
									},
									"scope": 295,
									"src": "6730:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5096:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6942:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "356:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "373:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:1"
									},
									"src": "317:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:1"
									},
									"src": "552:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "877:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "899:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "934:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:1"
									},
									"src": "854:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1193:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1205:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1227:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1252:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:1"
									},
									"src": "1187:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1580:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1602:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1627:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:1"
									},
									"src": "1562:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1755:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1769:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:1"
									},
									"scope": 378,
									"src": "1738:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2032:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:1"
									},
									"scope": 378,
									"src": "2010:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2347:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2361:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:1"
									},
									"scope": 378,
									"src": "2328:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2641:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2655:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:1"
									},
									"scope": 378,
									"src": "2621:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3205:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3219:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:1"
									},
									"scope": 378,
									"src": "3183:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "225:3033:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3150:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1312
						],
						"Ownable": [
							526
						]
					},
					"id": 527,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 527,
							"sourceUnit": 1313,
							"src": "128:45:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 381,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "136:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "Context",
										"nameLocations": [
											"692:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "692:7:2"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 383,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 526,
							"linearizedBaseContracts": [
								526,
								1312
							],
							"name": "Ownable",
							"nameLocation": "681:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 387,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 526,
									"src": "706:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 386,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 392,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "858:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:2"
									},
									"src": "825:50:2"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 397,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "994:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:2"
									},
									"src": "968:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 403,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1042:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 403,
												"src": "1073:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:2"
									},
									"src": "1015:84:2"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1259:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 406,
														"src": "1273:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "1269:95:2",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "1301:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 415,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "1322:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "RevertStatement",
															"src": "1315:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 425,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "1392:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "1373:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 427,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:2"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 429,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "1237:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:2"
									},
									"scope": 526,
									"src": "1225:187:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "1521:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 432,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 463,
														"src": "1531:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 434,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:2"
											},
											{
												"id": 435,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 437,
									"name": "onlyOwner",
									"nameLocation": "1509:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:2"
									},
									"src": "1500:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "1693:30:2",
										"statements": [
											{
												"expression": {
													"id": 443,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "1710:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 442,
												"id": 444,
												"nodeType": "Return",
												"src": "1703:13:2"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:2"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1684:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:2"
									},
									"scope": 526,
									"src": "1638:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "1841:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 450,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1855:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 452,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1294,
															"src": "1866:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 461,
												"nodeType": "IfStatement",
												"src": "1851:101:2",
												"trueBody": {
													"id": 460,
													"nodeType": "Block",
													"src": "1880:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 456,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1928:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "1901:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 459,
															"nodeType": "RevertStatement",
															"src": "1894:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:2"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:2"
									},
									"scope": 526,
									"src": "1796:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "2347:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 470,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 469,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2357:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 475,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:2"
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 467,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 466,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2337:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:2"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:2"
									},
									"scope": 526,
									"src": "2293:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "2613:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 485,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "2627:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 486,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 499,
												"nodeType": "IfStatement",
												"src": "2623:91:2",
												"trueBody": {
													"id": 498,
													"nodeType": "Block",
													"src": "2651:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 493,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 492,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 491,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "2672:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 497,
															"nodeType": "RevertStatement",
															"src": "2665:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 501,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 480,
															"src": "2742:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 500,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 525,
														"src": "2723:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:2"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 483,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 482,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "2603:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "2570:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:2"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:2"
									},
									"scope": 526,
									"src": "2543:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "2975:124:2",
										"statements": [
											{
												"assignments": [
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 524,
														"src": "2985:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 511,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 514,
												"initialValue": {
													"id": 513,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 387,
													"src": "3004:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:2"
											},
											{
												"expression": {
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 515,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "3020:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 516,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 508,
														"src": "3029:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 518,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 520,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "3073:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3083:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 519,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3052:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 523,
												"nodeType": "EmitStatement",
												"src": "3047:45:2"
											}
										]
									},
									"documentation": {
										"id": 506,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 525,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 525,
												"src": "2940:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:2"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:2"
									},
									"scope": 526,
									"src": "2912:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 527,
							"src": "663:2438:2",
							"usedErrors": [
								392,
								397
							],
							"usedEvents": [
								403
							]
						}
					],
					"src": "102:3000:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							663
						],
						"IERC20Errors": [
							568
						],
						"IERC721Errors": [
							616
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 528,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 529,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 538,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 543,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 548,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 557,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 557,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 558,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 562,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 567,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 664,
							"src": "278:1764:3",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 574,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 579,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 588,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 593,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 598,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 598,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 605,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 610,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 610,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 611,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 615,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 664,
							"src": "2186:2092:3",
							"usedErrors": [
								574,
								579,
								588,
								593,
								598,
								605,
								610,
								615
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 617,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 628,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 633,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 633,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 634,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 638,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 645,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 650,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 655,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 662,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 664,
							"src": "4424:2107:3",
							"usedErrors": [
								628,
								633,
								638,
								645,
								650,
								655,
								662
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1312
						],
						"ERC20": [
							1178
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1179,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 667,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1257,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 666,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 669,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1283,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 668,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1282,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 671,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 1313,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 670,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 673,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1179,
							"sourceUnit": 664,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 672,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 568,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 675,
										"name": "Context",
										"nameLocations": [
											"1428:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1312,
										"src": "1428:7:4"
									},
									"id": 676,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:4"
								},
								{
									"baseName": {
										"id": 677,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "1437:6:4"
									},
									"id": 678,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:4"
								},
								{
									"baseName": {
										"id": 679,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1282,
										"src": "1445:14:4"
									},
									"id": 680,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:4"
								},
								{
									"baseName": {
										"id": 681,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 568,
										"src": "1461:12:4"
									},
									"id": 682,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 674,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1178,
							"linearizedBaseContracts": [
								1178,
								568,
								1282,
								1256,
								1312
							],
							"name": "ERC20",
							"nameLocation": "1419:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 686,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1480:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 685,
										"keyName": "account",
										"keyNameLocation": "1496:7:4",
										"keyType": {
											"id": 683,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 684,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 692,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1540:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 691,
										"keyName": "account",
										"keyNameLocation": "1556:7:4",
										"keyType": {
											"id": 687,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 690,
											"keyName": "spender",
											"keyNameLocation": "1583:7:4",
											"keyType": {
												"id": 688,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 689,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 694,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1630:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 693,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 696,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1665:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 695,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 698,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1178,
									"src": "1691:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 697,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "1952:57:4",
										"statements": [
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "1962:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 707,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "1970:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:4"
											},
											{
												"expression": {
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 710,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 698,
														"src": "1985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 711,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 703,
														"src": "1995:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:4"
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 715,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1908:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "1929:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 702,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:4"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:4"
									},
									"scope": 1178,
									"src": "1896:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1269
									],
									"body": {
										"id": 723,
										"nodeType": "Block",
										"src": "2134:29:4",
										"statements": [
											{
												"expression": {
													"id": 721,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 696,
													"src": "2151:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 720,
												"id": 722,
												"nodeType": "Return",
												"src": "2144:12:4"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:4"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "2119:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:4"
									},
									"scope": 1178,
									"src": "2074:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "2338:31:4",
										"statements": [
											{
												"expression": {
													"id": 730,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 698,
													"src": "2355:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 729,
												"id": 731,
												"nodeType": "Return",
												"src": "2348:14:4"
											}
										]
									},
									"documentation": {
										"id": 725,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "2323:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 727,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:4"
									},
									"scope": 1178,
									"src": "2276:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1281
									],
									"body": {
										"id": 741,
										"nodeType": "Block",
										"src": "3058:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 738,
												"id": 740,
												"nodeType": "Return",
												"src": "3068:9:4"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 742,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 735,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:4"
									},
									"returnParameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "3051:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 736,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:4"
									},
									"scope": 1178,
									"src": "3002:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1205
									],
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "3205:36:4",
										"statements": [
											{
												"expression": {
													"id": 748,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 694,
													"src": "3222:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 747,
												"id": 749,
												"nodeType": "Return",
												"src": "3215:19:4"
											}
										]
									},
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:4"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "3196:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:4"
									},
									"scope": 1178,
									"src": "3144:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1213
									],
									"body": {
										"id": 763,
										"nodeType": "Block",
										"src": "3373:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 759,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 686,
														"src": "3390:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 761,
													"indexExpression": {
														"id": 760,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "3400:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 758,
												"id": 762,
												"nodeType": "Return",
												"src": "3383:25:4"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3318:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:4"
									},
									"returnParameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 764,
												"src": "3364:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:4"
									},
									"scope": 1178,
									"src": "3299:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1223
									],
									"body": {
										"id": 787,
										"nodeType": "Block",
										"src": "3685:103:4",
										"statements": [
											{
												"assignments": [
													775
												],
												"declarations": [
													{
														"constant": false,
														"id": 775,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 787,
														"src": "3695:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 774,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 778,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 776,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3711:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 775,
															"src": "3743:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "3750:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 769,
															"src": "3754:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "3733:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 773,
												"id": 786,
												"nodeType": "Return",
												"src": "3770:11:4"
											}
										]
									},
									"documentation": {
										"id": 765,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 788,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3628:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3640:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:4"
									},
									"returnParameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 788,
												"src": "3679:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 771,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:4"
									},
									"scope": 1178,
									"src": "3610:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1233
									],
									"body": {
										"id": 804,
										"nodeType": "Block",
										"src": "3935:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 798,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "3952:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 800,
														"indexExpression": {
															"id": 799,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3964:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 802,
													"indexExpression": {
														"id": 801,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3971:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 803,
												"nodeType": "Return",
												"src": "3945:34:4"
											}
										]
									},
									"documentation": {
										"id": 789,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 805,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3865:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3880:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 805,
												"src": "3926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:4"
									},
									"scope": 1178,
									"src": "3846:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1243
									],
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "4372:107:4",
										"statements": [
											{
												"assignments": [
													816
												],
												"declarations": [
													{
														"constant": false,
														"id": 816,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "4382:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 815,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 819,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 817,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4398:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 821,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 816,
															"src": "4429:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 822,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "4436:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 810,
															"src": "4445:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 820,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1069,
														"src": "4420:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 825,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 814,
												"id": 827,
												"nodeType": "Return",
												"src": "4461:11:4"
											}
										]
									},
									"documentation": {
										"id": 806,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4310:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4327:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:4"
									},
									"returnParameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "4366:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 812,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:4"
									},
									"scope": 1178,
									"src": "4293:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1255
									],
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "5132:151:4",
										"statements": [
											{
												"assignments": [
													842
												],
												"declarations": [
													{
														"constant": false,
														"id": 842,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 860,
														"src": "5142:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 841,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 845,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "5160:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5198:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 848,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "5204:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 849,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5213:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "5182:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 851,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 853,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "5239:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 854,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "5245:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "5249:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 852,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "5229:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 840,
												"id": 859,
												"nodeType": "Return",
												"src": "5265:11:4"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:4",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5061:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5075:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5087:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:4"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "5126:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 838,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:4"
									},
									"scope": 1178,
									"src": "5039:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "5725:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "5739:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 872,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 885,
												"nodeType": "IfStatement",
												"src": "5735:86:4",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "5759:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 880,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 878,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 881,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 877,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "5780:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 883,
															"nodeType": "RevertStatement",
															"src": "5773:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "5834:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "5830:86:4",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "5852:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 893,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 892,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "5873:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "5866:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 902,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "5933:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 903,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "5939:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 904,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "5943:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "5925:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 906,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:4"
											}
										]
									},
									"documentation": {
										"id": 862,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5675:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5689:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "5701:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:4"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:4"
									},
									"scope": 1178,
									"src": "5656:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "6346:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "6360:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 919,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "6534:362:4",
													"statements": [
														{
															"assignments": [
																930
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 930,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 955,
																	"src": "6548:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 929,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 934,
															"initialValue": {
																"baseExpression": {
																	"id": 931,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "6570:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 933,
																"indexExpression": {
																	"id": 932,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "6580:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "6603:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 936,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6617:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 945,
															"nodeType": "IfStatement",
															"src": "6599:115:4",
															"trueBody": {
																"id": 944,
																"nodeType": "Block",
																"src": "6624:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 939,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "6674:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 940,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "6680:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 941,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 915,
																					"src": "6693:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 938,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6649:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 943,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:4"
																	}
																]
															}
														},
														{
															"id": 954,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 946,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "6834:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 948,
																			"indexExpression": {
																				"id": 947,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "6844:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 949,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 930,
																				"src": "6852:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 950,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 915,
																				"src": "6866:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 953,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:4"
																}
															]
														}
													]
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "6356:540:4",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "6380:148:4",
													"statements": [
														{
															"expression": {
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 924,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "6496:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 925,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 915,
																	"src": "6512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 927,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 913,
														"src": "6910:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "7125:206:4",
													"statements": [
														{
															"id": 975,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 969,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 686,
																				"src": "7284:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 971,
																			"indexExpression": {
																				"id": 970,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "7294:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7301:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 974,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:4"
																}
															]
														}
													]
												},
												"id": 977,
												"nodeType": "IfStatement",
												"src": "6906:425:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "6928:191:4",
													"statements": [
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 963,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "7073:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 964,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "7089:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 979,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "7355:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 980,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "7361:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 981,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "7365:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 978,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "7346:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "EmitStatement",
												"src": "7341:30:4"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6288:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6302:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "6314:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:4"
									},
									"returnParameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:4"
									},
									"scope": 1178,
									"src": "6271:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "7777:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 993,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "7791:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 994,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "7787:91:4",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "7814:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1002,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1001,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1000,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 999,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 548,
																	"src": "7835:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "RevertStatement",
															"src": "7828:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1009,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "7907:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "7916:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1008,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "7887:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:4"
											}
										]
									},
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7736:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "7753:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:4"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:4"
									},
									"scope": 1178,
									"src": "7721:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "8303:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1026,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "8317:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1027,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1040,
												"nodeType": "IfStatement",
												"src": "8313:89:4",
												"trueBody": {
													"id": 1039,
													"nodeType": "Block",
													"src": "8340:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1035,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1033,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1032,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "8361:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1038,
															"nodeType": "RevertStatement",
															"src": "8354:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "8419:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1043,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1047,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "8440:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1041,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "8411:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:4"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8262:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "8279:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:4"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:4"
									},
									"scope": 1178,
									"src": "8247:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1068,
										"nodeType": "Block",
										"src": "9063:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "9082:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "9089:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "9098:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1061,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1069,
															1129
														],
														"referencedDeclaration": 1129,
														"src": "9073:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1067,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:4"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1069,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9007:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9022:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "9039:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:4"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:4"
									},
									"scope": 1178,
									"src": "8989:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1128,
										"nodeType": "Block",
										"src": "10047:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1081,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "10061:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1082,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1095,
												"nodeType": "IfStatement",
												"src": "10057:89:4",
												"trueBody": {
													"id": 1094,
													"nodeType": "Block",
													"src": "10082:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1089,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1088,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1087,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 562,
																	"src": "10103:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1093,
															"nodeType": "RevertStatement",
															"src": "10096:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1096,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "10159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1097,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1110,
												"nodeType": "IfStatement",
												"src": "10155:90:4",
												"trueBody": {
													"id": 1109,
													"nodeType": "Block",
													"src": "10182:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1103,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1102,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 567,
																	"src": "10203:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1108,
															"nodeType": "RevertStatement",
															"src": "10196:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1111,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "10254:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1114,
															"indexExpression": {
																"id": 1112,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1072,
																"src": "10266:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1115,
														"indexExpression": {
															"id": 1113,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1074,
															"src": "10273:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1116,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "10284:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1118,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:4"
											},
											{
												"condition": {
													"id": 1119,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1078,
													"src": "10303:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1127,
												"nodeType": "IfStatement",
												"src": "10299:76:4",
												"trueBody": {
													"id": 1126,
													"nodeType": "Block",
													"src": "10314:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1121,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "10342:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1122,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1074,
																		"src": "10349:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1123,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "10358:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1120,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1199,
																	"src": "10333:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1125,
															"nodeType": "EmitStatement",
															"src": "10328:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9967:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "9999:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1129,
												"src": "10014:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1077,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:4"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:4"
									},
									"scope": 1178,
									"src": "9949:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1176,
										"nodeType": "Block",
										"src": "10752:388:4",
										"statements": [
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 1176,
														"src": "10762:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1145,
												"initialValue": {
													"arguments": [
														{
															"id": 1142,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10799:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "10806:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1141,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 805,
														"src": "10789:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1146,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "10828:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1148,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1147,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1175,
												"nodeType": "IfStatement",
												"src": "10824:310:4",
												"trueBody": {
													"id": 1174,
													"nodeType": "Block",
													"src": "10867:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1153,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "10885:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1154,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "10904:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1163,
															"nodeType": "IfStatement",
															"src": "10881:130:4",
															"trueBody": {
																"id": 1162,
																"nodeType": "Block",
																"src": "10911:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1157,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1134,
																					"src": "10963:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1158,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "10972:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1159,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "10990:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1156,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 557,
																				"src": "10936:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1160,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1161,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:4"
																	}
																]
															}
														},
														{
															"id": 1173,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1165,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1132,
																				"src": "11061:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1166,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "11068:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1169,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1167,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1140,
																					"src": "11077:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1168,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "11096:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1170,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1164,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1069,
																				1129
																			],
																			"referencedDeclaration": 1129,
																			"src": "11052:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1172,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1130,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1177,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10688:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10703:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1136,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "10720:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:4"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:4"
									},
									"scope": 1178,
									"src": "10663:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1179,
							"src": "1401:9741:4",
							"usedErrors": [
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "105:11038:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						]
					},
					"id": 1257,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1180,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1181,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1256,
							"linearizedBaseContracts": [
								1256
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1182,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1190,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1191,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1199,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1199,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 1200,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1205,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1205,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 1256,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1213,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1213,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 1256,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1214,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1220,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 1256,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1233,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 1256,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1243,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1243,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1240,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 1256,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1244,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1255,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1248,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1255,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1252,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 1256,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1257,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1256
						],
						"IERC20Metadata": [
							1282
						]
					},
					"id": 1283,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1258,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1260,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1283,
							"sourceUnit": 1257,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1259,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1256,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1262,
										"name": "IERC20",
										"nameLocations": [
											"305:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1256,
										"src": "305:6:6"
									},
									"id": 1263,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1261,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:6",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1282,
							"linearizedBaseContracts": [
								1282,
								1256
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1264,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1269,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:6"
									},
									"returnParameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "416:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1266,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:6"
									},
									"scope": 1282,
									"src": "377:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:6"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "539:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1272,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:6"
									},
									"scope": 1282,
									"src": "498:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1281,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:6"
									},
									"returnParameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1281,
												"src": "673:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1278,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:6"
									},
									"scope": 1282,
									"src": "630:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1283,
							"src": "277:405:6",
							"usedErrors": [],
							"usedEvents": [
								1190,
								1199
							]
						}
					],
					"src": "125:558:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1284,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1285,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1290,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1289,
												"id": 1292,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 1312,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1302,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1299,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1298,
												"id": 1301,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 1303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1303,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 1312,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1307,
												"id": 1309,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 1312,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1313,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1336
						],
						"IERC165": [
							1348
						]
					},
					"id": 1337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1337,
							"sourceUnit": 1349,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1348,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1318,
										"name": "IERC165",
										"nameLocations": [
											"687:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1348,
										"src": "687:7:8"
									},
									"id": 1319,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1317,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1336,
							"linearizedBaseContracts": [
								1336,
								1348
							],
							"name": "ERC165",
							"nameLocation": "677:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1347
									],
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "844:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1327,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1322,
														"src": "861:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1329,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1348,
																	"src": "881:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1348_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1348_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1328,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1348",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1326,
												"id": 1333,
												"nodeType": "Return",
												"src": "854:47:8"
											}
										]
									},
									"documentation": {
										"id": 1320,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "789:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:8"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "838:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:8"
									},
									"scope": 1336,
									"src": "762:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1337,
							"src": "659:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1348
						]
					},
					"id": 1349,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1339,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1348,
							"linearizedBaseContracts": [
								1348
							],
							"name": "IERC165",
							"nameLocation": "431:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1340,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "817:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1341,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:9"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "860:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:9"
									},
									"scope": 1348,
									"src": "790:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1349,
							"src": "421:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:9"
				},
				"id": 9
			},
			"assignment3/Swap.sol": {
				"ast": {
					"absolutePath": "assignment3/Swap.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1312
						],
						"ERC165": [
							1336
						],
						"ERC20": [
							1178
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						],
						"ISwap": [
							1893
						],
						"Ownable": [
							526
						],
						"Swap": [
							1863
						],
						"sAsset": [
							2011
						]
					},
					"id": 1864,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1350,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1351,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1864,
							"sourceUnit": 527,
							"src": "66:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "assignment3/interfaces/ISwap.sol",
							"file": "./interfaces/ISwap.sol",
							"id": 1352,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1864,
							"sourceUnit": 1894,
							"src": "120:32:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "assignment3/sAsset.sol",
							"file": "./sAsset.sol",
							"id": 1353,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1864,
							"sourceUnit": 2012,
							"src": "154:22:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": [
										{
											"expression": {
												"id": 1355,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "205:3:10",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1356,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "209:6:10",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "205:10:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1354,
										"name": "Ownable",
										"nameLocations": [
											"197:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 526,
										"src": "197:7:10"
									},
									"id": 1357,
									"nodeType": "InheritanceSpecifier",
									"src": "197:19:10"
								},
								{
									"baseName": {
										"id": 1358,
										"name": "ISwap",
										"nameLocations": [
											"218:5:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1893,
										"src": "218:5:10"
									},
									"id": 1359,
									"nodeType": "InheritanceSpecifier",
									"src": "218:5:10"
								}
							],
							"canonicalName": "Swap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1863,
							"linearizedBaseContracts": [
								1863,
								1893,
								526,
								1312
							],
							"name": "Swap",
							"nameLocation": "189:4:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1361,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "241:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1863,
									"src": "233:14:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1360,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1363,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "262:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1863,
									"src": "254:14:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1362,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "254:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1365,
									"mutability": "mutable",
									"name": "reserve0",
									"nameLocation": "280:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1863,
									"src": "275:13:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1364,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "275:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1367,
									"mutability": "mutable",
									"name": "reserve1",
									"nameLocation": "300:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1863,
									"src": "295:13:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1366,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "295:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 1371,
									"mutability": "mutable",
									"name": "shares",
									"nameLocation": "341:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1863,
									"src": "315:32:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1370,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1368,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "324:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "315:25:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1369,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "335:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3a98ef39",
									"id": 1373,
									"mutability": "mutable",
									"name": "totalShares",
									"nameLocation": "366:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1863,
									"src": "354:23:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1372,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "354:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "428:58:10",
										"statements": [
											{
												"expression": {
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1380,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "439:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1381,
														"name": "addr0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "448:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "439:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1383,
												"nodeType": "ExpressionStatement",
												"src": "439:14:10"
											},
											{
												"expression": {
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1384,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "464:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1385,
														"name": "addr1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1377,
														"src": "473:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "464:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "464:14:10"
											}
										]
									},
									"id": 1389,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "addr0",
												"nameLocation": "406:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "398:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "398:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "addr1",
												"nameLocation": "421:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1389,
												"src": "413:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "413:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "397:30:10"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "428:0:10"
									},
									"scope": 1863,
									"src": "386:100:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1872
									],
									"body": {
										"id": 1474,
										"nodeType": "Block",
										"src": "574:534:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1400,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "593:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "605:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "593:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1403,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "610:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "622:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "610:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "593:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e6974202d20616c726561647920686173206c6971756964697479",
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "625:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0",
																"typeString": "literal_string \"init - already has liquidity\""
															},
															"value": "init - already has liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0235b9bf43b807b223ed04cc4244011b89fab7edec1ba3b55ae4d2c6ce560a0",
																"typeString": "literal_string \"init - already has liquidity\""
															}
														],
														"id": 1399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "585:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "585:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "ExpressionStatement",
												"src": "585:71:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1411,
																	"name": "token0Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "675:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "690:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "675:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1414,
																	"name": "token1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "695:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "710:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "695:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "675:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "696e6974202d20626f746820746f6b656e7320617265206e6565646564",
															"id": 1418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "713:31:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7",
																"typeString": "literal_string \"init - both tokens are needed\""
															},
															"value": "init - both tokens are needed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_830f0603f94cb7eec4da768545e9e1b6e7c2bca83369376bfdcbc0fbe7271ef7",
																"typeString": "literal_string \"init - both tokens are needed\""
															}
														],
														"id": 1410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "667:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "667:78:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "667:78:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1426,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "802:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "806:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "802:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1430,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "822:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		],
																		"id": 1429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "814:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1428,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "814:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "814:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1432,
																	"name": "token0Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "829:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1423,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "781:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1422,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "774:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "774:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "789:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "774:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "774:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1421,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "766:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "766:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "766:77:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1441,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "890:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "894:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "890:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1445,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "910:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		],
																		"id": 1444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "902:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1443,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "902:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "902:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1447,
																	"name": "token1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "917:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1438,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "869:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1437,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "862:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "862:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "877:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "862:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "862:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "854:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "854:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "854:77:10"
											},
											{
												"expression": {
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1451,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "942:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1452,
														"name": "token0Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1391,
														"src": "953:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "942:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "942:23:10"
											},
											{
												"expression": {
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1455,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "976:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1456,
														"name": "token1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1393,
														"src": "987:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "976:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "976:23:10"
											},
											{
												"expression": {
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1459,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "1010:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1461,
																	"name": "token0Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1391,
																	"src": "1029:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1462,
																	"name": "token1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1393,
																	"src": "1044:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1029:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1460,
															"name": "sqrt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "1024:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint256)"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1024:33:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1010:47:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1466,
												"nodeType": "ExpressionStatement",
												"src": "1010:47:10"
											},
											{
												"expression": {
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1467,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "1068:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1470,
														"indexExpression": {
															"expression": {
																"id": 1468,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1075:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1079:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1075:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1068:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1471,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "1089:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1068:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1473,
												"nodeType": "ExpressionStatement",
												"src": "1068:32:10"
											}
										]
									},
									"functionSelector": "a5843f08",
									"id": 1475,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1397,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1396,
												"name": "onlyOwner",
												"nameLocations": [
													"564:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 437,
												"src": "564:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "564:9:10"
										}
									],
									"name": "init",
									"nameLocation": "503:4:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "555:8:10"
									},
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "513:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "508:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "508:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "532:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "527:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "527:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "507:38:10"
									},
									"returnParameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:0:10"
									},
									"scope": 1863,
									"src": "494:614:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "1253:250:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1482,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1477,
														"src": "1268:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1272:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "1268:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1518,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1477,
															"src": "1456:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1461:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1456:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1526,
													"nodeType": "IfStatement",
													"src": "1452:44:10",
													"trueBody": {
														"id": 1525,
														"nodeType": "Block",
														"src": "1464:32:10",
														"statements": [
															{
																"expression": {
																	"id": 1523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 1521,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "1479:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1483:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1479:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1524,
																"nodeType": "ExpressionStatement",
																"src": "1479:5:10"
															}
														]
													}
												},
												"id": 1527,
												"nodeType": "IfStatement",
												"src": "1264:232:10",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "1275:171:10",
													"statements": [
														{
															"expression": {
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1485,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "1290:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 1486,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "1294:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1290:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1488,
															"nodeType": "ExpressionStatement",
															"src": "1290:5:10"
														},
														{
															"assignments": [
																1490
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1490,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "1315:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1517,
																	"src": "1310:6:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1489,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1310:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1496,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1495,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1491,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "1319:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1323:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1319:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1327:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1319:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1310:18:10"
														},
														{
															"body": {
																"id": 1515,
																"nodeType": "Block",
																"src": "1357:78:10",
																"statements": [
																	{
																		"expression": {
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1500,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1480,
																				"src": "1376:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1501,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1490,
																				"src": "1380:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1376:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1503,
																		"nodeType": "ExpressionStatement",
																		"src": "1376:5:10"
																	},
																	{
																		"expression": {
																			"id": 1513,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1504,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1490,
																				"src": "1400:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1509,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1507,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1505,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1477,
																									"src": "1405:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 1506,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1490,
																									"src": "1409:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "1405:5:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 1508,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1490,
																								"src": "1413:1:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1405:9:10",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1510,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1404:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 1511,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1418:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "1404:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1400:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1514,
																		"nodeType": "ExpressionStatement",
																		"src": "1400:19:10"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1497,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1490,
																	"src": "1350:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1498,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "1354:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1350:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1516,
															"nodeType": "WhileStatement",
															"src": "1343:92:10"
														}
													]
												}
											}
										]
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "1209:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1219:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "1214:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1214:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:8:10"
									},
									"returnParameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "1250:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "1245:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1245:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1244:8:10"
									},
									"scope": 1863,
									"src": "1200:303:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1540,
										"nodeType": "Block",
										"src": "1569:46:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1536,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "1588:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1537,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "1598:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1538,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1587:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1535,
												"id": 1539,
												"nodeType": "Return",
												"src": "1580:27:10"
											}
										]
									},
									"functionSelector": "0902f1ac",
									"id": 1541,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "1520:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1531:2:10"
									},
									"returnParameters": {
										"id": 1535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1557:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1557:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1541,
												"src": "1563:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1533,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1563:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:12:10"
									},
									"scope": 1863,
									"src": "1511:104:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1552,
										"nodeType": "Block",
										"src": "1685:42:10",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1548,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "1704:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1549,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "1712:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"id": 1550,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1703:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
														"typeString": "tuple(address,address)"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1551,
												"nodeType": "Return",
												"src": "1696:23:10"
											}
										]
									},
									"functionSelector": "aa6ca808",
									"id": 1553,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokens",
									"nameLocation": "1632:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1641:2:10"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1667:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1553,
												"src": "1676:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:18:10"
									},
									"scope": 1863,
									"src": "1623:104:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1564,
										"nodeType": "Block",
										"src": "1795:36:10",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1560,
														"name": "shares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "1813:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1562,
													"indexExpression": {
														"id": 1561,
														"name": "LP",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1555,
														"src": "1820:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1813:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1559,
												"id": 1563,
												"nodeType": "Return",
												"src": "1806:17:10"
											}
										]
									},
									"functionSelector": "f04da65b",
									"id": 1565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getShares",
									"nameLocation": "1744:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "LP",
												"nameLocation": "1762:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1754:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:12:10"
									},
									"returnParameters": {
										"id": 1559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "1789:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1789:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1788:6:10"
									},
									"scope": 1863,
									"src": "1735:96:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1877
									],
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "1945:586:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1572,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1365,
																	"src": "1964:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1976:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1964:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "reserve1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "1981:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1993:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1981:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1964:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c206e6f7420696e6974696c697a6564",
															"id": 1579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1996:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7",
																"typeString": "literal_string \"pool not initilized\""
															},
															"value": "pool not initilized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9cc22718e9be30d96220a5f0c0210969aa20aa5ad459732f826a686b0a9bdeb7",
																"typeString": "literal_string \"pool not initilized\""
															}
														],
														"id": 1571,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1956:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1956:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1581,
												"nodeType": "ExpressionStatement",
												"src": "1956:62:10"
											},
											{
												"assignments": [
													1583
												],
												"declarations": [
													{
														"constant": false,
														"id": 1583,
														"mutability": "mutable",
														"name": "token1Amount",
														"nameLocation": "2034:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "2029:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1582,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2029:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1584,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2049:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1585,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "2062:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2049:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1587,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "2071:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2049:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2029:50:10"
											},
											{
												"assignments": [
													1591
												],
												"declarations": [
													{
														"constant": false,
														"id": 1591,
														"mutability": "mutable",
														"name": "newShares",
														"nameLocation": "2095:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1649,
														"src": "2090:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1590,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2090:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1597,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1592,
															"name": "totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1373,
															"src": "2107:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1593,
															"name": "token0Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1567,
															"src": "2119:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2107:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1595,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "2132:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2107:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2090:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1603,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2189:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2193:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2189:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1607,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2209:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		],
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2201:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1605,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2201:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2201:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1609,
																	"name": "token0Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "2216:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1600,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "2168:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1599,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "2161:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2161:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2176:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "2161:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2161:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e30",
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2231:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															},
															"value": "failed to transfer token0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															}
														],
														"id": 1598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2153:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2153:106:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "2153:106:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1619,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2306:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2310:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2306:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1623,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2326:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		],
																		"id": 1622,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2318:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1621,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2318:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2318:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1625,
																	"name": "token1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1583,
																	"src": "2333:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1616,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2285:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1615,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "2278:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2278:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2293:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "2278:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2278:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e31",
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2348:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															},
															"value": "failed to transfer token1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															}
														],
														"id": 1614,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2270:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2270:106:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "2270:106:10"
											},
											{
												"expression": {
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1630,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "2387:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1631,
														"name": "token0Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "2399:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2387:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1633,
												"nodeType": "ExpressionStatement",
												"src": "2387:24:10"
											},
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1634,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "2422:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1635,
														"name": "token1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "2434:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2422:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "2422:24:10"
											},
											{
												"expression": {
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1638,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "2457:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1641,
														"indexExpression": {
															"expression": {
																"id": 1639,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2464:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2468:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2464:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2457:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1642,
														"name": "newShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "2479:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2457:31:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1644,
												"nodeType": "ExpressionStatement",
												"src": "2457:31:10"
											},
											{
												"expression": {
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1645,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2499:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1646,
														"name": "newShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1591,
														"src": "2514:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2499:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1648,
												"nodeType": "ExpressionStatement",
												"src": "2499:24:10"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1895:12:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1569,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1936:8:10"
									},
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "1913:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "1908:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1566,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1908:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:19:10"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:10"
									},
									"scope": 1863,
									"src": "1886:645:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1882
									],
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "2603:581:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1657,
																"name": "withdrawShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1652,
																"src": "2622:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"baseExpression": {
																	"id": 1658,
																	"name": "shares",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "2640:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1661,
																"indexExpression": {
																	"expression": {
																		"id": 1659,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2647:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2651:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2647:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2640:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2622:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420656e6f75676820736861726520746f207769746864726177",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2660:30:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27",
																"typeString": "literal_string \"not enough share to withdraw\""
															},
															"value": "not enough share to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_67bf133b2798a0cf7991969568b76c7f191ced71e55f316b82d20b4f0eb8fb27",
																"typeString": "literal_string \"not enough share to withdraw\""
															}
														],
														"id": 1656,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2614:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2614:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1665,
												"nodeType": "ExpressionStatement",
												"src": "2614:77:10"
											},
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "token0Amount",
														"nameLocation": "2707:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "2702:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1666,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2702:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1668,
															"name": "reserve0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "2722:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1669,
															"name": "withdrawShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "2731:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2722:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1671,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2746:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2722:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2702:55:10"
											},
											{
												"assignments": [
													1675
												],
												"declarations": [
													{
														"constant": false,
														"id": 1675,
														"mutability": "mutable",
														"name": "token1Amount",
														"nameLocation": "2773:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1725,
														"src": "2768:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1674,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2768:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1681,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1676,
															"name": "reserve1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "2788:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1677,
															"name": "withdrawShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "2797:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2788:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1679,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2812:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2788:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2768:55:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1687,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2866:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2870:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2866:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1689,
																	"name": "token0Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "2878:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1684,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "2849:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1683,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "2842:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2842:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2857:8:10",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 788,
																"src": "2842:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2842:49:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e30",
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2893:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															},
															"value": "failed to transfer token0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															}
														],
														"id": 1682,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2834:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2834:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1693,
												"nodeType": "ExpressionStatement",
												"src": "2834:87:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1699,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2964:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2968:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2964:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1701,
																	"name": "token1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "2976:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1696,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "2947:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1695,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "2940:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2940:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2955:8:10",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 788,
																"src": "2940:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2940:49:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e31",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2991:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															},
															"value": "failed to transfer token1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															}
														],
														"id": 1694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2932:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2932:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "2932:87:10"
											},
											{
												"expression": {
													"id": 1708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1706,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "3030:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1707,
														"name": "token0Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1667,
														"src": "3042:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3030:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1709,
												"nodeType": "ExpressionStatement",
												"src": "3030:24:10"
											},
											{
												"expression": {
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1710,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "3065:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1711,
														"name": "token1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1675,
														"src": "3077:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3065:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1713,
												"nodeType": "ExpressionStatement",
												"src": "3065:24:10"
											},
											{
												"expression": {
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1714,
															"name": "shares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1371,
															"src": "3100:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1717,
														"indexExpression": {
															"expression": {
																"id": 1715,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3107:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3111:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3107:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3100:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1718,
														"name": "withdrawShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "3122:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3100:36:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1720,
												"nodeType": "ExpressionStatement",
												"src": "3100:36:10"
											},
											{
												"expression": {
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1721,
														"name": "totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "3147:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1722,
														"name": "withdrawShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "3162:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3147:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1724,
												"nodeType": "ExpressionStatement",
												"src": "3147:29:10"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "2548:15:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1654,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2594:8:10"
									},
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "withdrawShares",
												"nameLocation": "2569:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "2564:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2564:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2563:21:10"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:0:10"
									},
									"scope": 1863,
									"src": "2539:645:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1887
									],
									"body": {
										"id": 1793,
										"nodeType": "Block",
										"src": "3248:449:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1733,
																"name": "token0Amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1728,
																"src": "3267:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1734,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3282:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3267:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420746f6b656e302070726f7669646564",
															"id": 1736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3285:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8",
																"typeString": "literal_string \"not token0 provided\""
															},
															"value": "not token0 provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8",
																"typeString": "literal_string \"not token0 provided\""
															}
														],
														"id": 1732,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3259:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3259:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "3259:48:10"
											},
											{
												"assignments": [
													1740
												],
												"declarations": [
													{
														"constant": false,
														"id": 1740,
														"mutability": "mutable",
														"name": "token1Amount",
														"nameLocation": "3323:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1793,
														"src": "3318:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1739,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3318:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1756,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1755,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1741,
																		"name": "token0Amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "3339:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1742,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "3352:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3339:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3361:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "3339:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1746,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3338:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1747,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "3369:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3378:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "3369:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1750,
																		"name": "token0Amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "3385:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "393937",
																		"id": 1751,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3398:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_997_by_1",
																			"typeString": "int_const 997"
																		},
																		"value": "997"
																	},
																	"src": "3385:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3369:32:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1754,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3368:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3338:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3318:84:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1762,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3449:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1763,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3453:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3449:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1766,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3469:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		],
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3461:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1764,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3461:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3461:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1768,
																	"name": "token0Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1728,
																	"src": "3476:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1759,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "3428:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1758,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "3421:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1760,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3421:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3436:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "3421:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3421:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e30",
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3491:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															},
															"value": "failed to transfer token0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															}
														],
														"id": 1757,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3413:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3413:106:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "ExpressionStatement",
												"src": "3413:106:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1778,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3564:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1779,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3568:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3564:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1780,
																	"name": "token1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "3576:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1775,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "3547:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1774,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "3540:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3540:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3555:8:10",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 788,
																"src": "3540:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3540:49:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e31",
															"id": 1782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3591:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															},
															"value": "failed to transfer token1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															}
														],
														"id": 1773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3532:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3532:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1784,
												"nodeType": "ExpressionStatement",
												"src": "3532:87:10"
											},
											{
												"expression": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1785,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "3630:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1786,
														"name": "token0Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1728,
														"src": "3642:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3630:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1788,
												"nodeType": "ExpressionStatement",
												"src": "3630:24:10"
											},
											{
												"expression": {
													"id": 1791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1789,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "3665:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1790,
														"name": "token1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "3677:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3665:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1792,
												"nodeType": "ExpressionStatement",
												"src": "3665:24:10"
											}
										]
									},
									"functionSelector": "26ef80c9",
									"id": 1794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token0To1",
									"nameLocation": "3201:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1730,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3239:8:10"
									},
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "3216:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1794,
												"src": "3211:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1727,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3211:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:19:10"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3248:0:10"
									},
									"scope": 1863,
									"src": "3192:505:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1892
									],
									"body": {
										"id": 1861,
										"nodeType": "Block",
										"src": "3761:449:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1801,
																"name": "token1Amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1796,
																"src": "3780:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3795:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3780:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f7420746f6b656e302070726f7669646564",
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3798:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8",
																"typeString": "literal_string \"not token0 provided\""
															},
															"value": "not token0 provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d74137603a06a095a6c9524477ad42d4e67484e9fabc77c5fbfd3ff75b97a4f8",
																"typeString": "literal_string \"not token0 provided\""
															}
														],
														"id": 1800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3772:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1806,
												"nodeType": "ExpressionStatement",
												"src": "3772:48:10"
											},
											{
												"assignments": [
													1808
												],
												"declarations": [
													{
														"constant": false,
														"id": 1808,
														"mutability": "mutable",
														"name": "token0Amount",
														"nameLocation": "3836:12:10",
														"nodeType": "VariableDeclaration",
														"scope": 1861,
														"src": "3831:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1807,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3831:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1824,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1809,
																		"name": "token1Amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "3852:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1810,
																		"name": "reserve0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "3865:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3852:21:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "393937",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3874:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_997_by_1",
																		"typeString": "int_const 997"
																	},
																	"value": "997"
																},
																"src": "3852:25:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1814,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3851:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1815,
																		"name": "reserve1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1367,
																		"src": "3882:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31303030",
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3891:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	},
																	"src": "3882:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1818,
																		"name": "token1Amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1796,
																		"src": "3898:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "393937",
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3911:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_997_by_1",
																			"typeString": "int_const 997"
																		},
																		"value": "997"
																	},
																	"src": "3898:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3882:32:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1822,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3881:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:64:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3831:84:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1830,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3962:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1831,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3966:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3962:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1834,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "3982:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Swap_$1863",
																				"typeString": "contract Swap"
																			}
																		],
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3974:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1832,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "3974:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3974:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1836,
																	"name": "token1Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1796,
																	"src": "3989:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1827,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1363,
																			"src": "3941:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1826,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "3934:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3934:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3949:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 861,
																"src": "3934:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3934:68:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e31",
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4004:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															},
															"value": "failed to transfer token1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a5860db8a1007b649a35c40ec7e710e53ba71d3cc7a6f6d56af9c683fb5fb51f",
																"typeString": "literal_string \"failed to transfer token1\""
															}
														],
														"id": 1825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3926:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3926:106:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1840,
												"nodeType": "ExpressionStatement",
												"src": "3926:106:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1846,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4077:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4081:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4077:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1848,
																	"name": "token0Amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "4089:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1843,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1361,
																			"src": "4060:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1842,
																		"name": "sAsset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2011,
																		"src": "4053:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_sAsset_$2011_$",
																			"typeString": "type(contract sAsset)"
																		}
																	},
																	"id": 1844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4053:14:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_sAsset_$2011",
																		"typeString": "contract sAsset"
																	}
																},
																"id": 1845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4068:8:10",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 788,
																"src": "4053:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4053:49:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6661696c656420746f207472616e7366657220746f6b656e30",
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4104:27:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															},
															"value": "failed to transfer token0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18938bc9251e431525f0622927f915225fd0be3832b0908a2d63844ae9b2c250",
																"typeString": "literal_string \"failed to transfer token0\""
															}
														],
														"id": 1841,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4045:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4045:87:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "4045:87:10"
											},
											{
												"expression": {
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1853,
														"name": "reserve0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "4143:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1854,
														"name": "token0Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1808,
														"src": "4155:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4143:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "4143:24:10"
											},
											{
												"expression": {
													"id": 1859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1857,
														"name": "reserve1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "4178:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1858,
														"name": "token1Amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1796,
														"src": "4190:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4178:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1860,
												"nodeType": "ExpressionStatement",
												"src": "4178:24:10"
											}
										]
									},
									"functionSelector": "ad3bd45c",
									"id": 1862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token1To0",
									"nameLocation": "3714:9:10",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1798,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3752:8:10"
									},
									"parameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "3729:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1862,
												"src": "3724:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3724:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3723:19:10"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3761:0:10"
									},
									"scope": 1863,
									"src": "3705:505:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1864,
							"src": "180:4043:10",
							"usedErrors": [
								392,
								397
							],
							"usedEvents": [
								403
							]
						}
					],
					"src": "33:4190:10"
				},
				"id": 10
			},
			"assignment3/interfaces/ISwap.sol": {
				"ast": {
					"absolutePath": "assignment3/interfaces/ISwap.sol",
					"exportedSymbols": {
						"ISwap": [
							1893
						]
					},
					"id": 1894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1865,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ISwap",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1893,
							"linearizedBaseContracts": [
								1893
							],
							"name": "ISwap",
							"nameLocation": "78:5:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a5843f08",
									"id": 1872,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "init",
									"nameLocation": "102:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "112:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "107:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "107:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "131:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1872,
												"src": "126:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "126:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "106:38:11"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "153:0:11"
									},
									"scope": 1893,
									"src": "93:61:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "51c6590a",
									"id": 1877,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "171:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "189:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1877,
												"src": "184:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "184:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:19:11"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:0:11"
									},
									"scope": 1893,
									"src": "162:50:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9c8f9f23",
									"id": 1882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "227:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "withdrawShares",
												"nameLocation": "248:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1882,
												"src": "243:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "243:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:21:11"
									},
									"returnParameters": {
										"id": 1881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:0:11"
									},
									"scope": 1893,
									"src": "218:55:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "26ef80c9",
									"id": 1887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0To1",
									"nameLocation": "290:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "token0Amount",
												"nameLocation": "305:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1887,
												"src": "300:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "300:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:19:11"
									},
									"returnParameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "327:0:11"
									},
									"scope": 1893,
									"src": "281:47:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad3bd45c",
									"id": 1892,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1To0",
									"nameLocation": "343:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "token1Amount",
												"nameLocation": "358:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "353:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1888,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "353:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "352:19:11"
									},
									"returnParameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "380:0:11"
									},
									"scope": 1893,
									"src": "334:47:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1894,
							"src": "68:335:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:370:11"
				},
				"id": 11
			},
			"assignment3/sAsset.sol": {
				"ast": {
					"absolutePath": "assignment3/sAsset.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1312
						],
						"ERC165": [
							1336
						],
						"ERC20": [
							1178
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1256
						],
						"IERC20Errors": [
							568
						],
						"IERC20Metadata": [
							1282
						],
						"sAsset": [
							2011
						]
					},
					"id": 2012,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1895,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2012,
							"sourceUnit": 1179,
							"src": "67:55:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2012,
							"sourceUnit": 296,
							"src": "124:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1898,
										"name": "ERC20",
										"nameLocations": [
											"207:5:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1178,
										"src": "207:5:12"
									},
									"id": 1899,
									"nodeType": "InheritanceSpecifier",
									"src": "207:5:12"
								},
								{
									"baseName": {
										"id": 1900,
										"name": "AccessControl",
										"nameLocations": [
											"214:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "214:13:12"
									},
									"id": 1901,
									"nodeType": "InheritanceSpecifier",
									"src": "214:13:12"
								}
							],
							"canonicalName": "sAsset",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2011,
							"linearizedBaseContracts": [
								2011,
								295,
								1336,
								1348,
								378,
								1178,
								568,
								1282,
								1256,
								1312
							],
							"name": "sAsset",
							"nameLocation": "197:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1906,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "325:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2011,
									"src": "301:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1902,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "301:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1904,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "349:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1903,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "339:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1905,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "339:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1911,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "394:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 2011,
									"src": "370:62:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1907,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "370:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1909,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "418:13:12",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1908,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "408:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1910,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "408:24:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "663:256:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1926,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "680:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "684:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "680:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1928,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1918,
																"src": "692:13:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "709:2:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1932,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							2010
																						],
																						"referencedDeclaration": 2010,
																						"src": "723:8:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1933,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "723:10:12",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 1931,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "715:7:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1930,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "715:7:12",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "715:19:12",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "709:25:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1936,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "708:27:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "692:43:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1925,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "674:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "674:62:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "674:62:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1941,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "880:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1942,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "900:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "904:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "900:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1940,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "869:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "869:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1945,
												"nodeType": "ExpressionStatement",
												"src": "869:42:12"
											}
										]
									},
									"documentation": {
										"id": 1912,
										"nodeType": "StructuredDocumentation",
										"src": "443:83:12",
										"text": " @dev Constructor that gives msg.sender all of existing tokens."
									},
									"id": 1947,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1921,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1914,
													"src": "649:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1922,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1916,
													"src": "655:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1923,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1920,
												"name": "ERC20",
												"nameLocations": [
													"643:5:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1178,
												"src": "643:5:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "643:19:12"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "568:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "554:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1913,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "554:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "597:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "583:20:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1915,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "583:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "622:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "614:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "543:99:12"
									},
									"returnParameters": {
										"id": 1924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "663:0:12"
									},
									"scope": 2011,
									"src": "532:387:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e",
									"id": 1953,
									"name": "mintToken",
									"nameLocation": "933:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "951:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "943:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "963:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "955:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:28:12"
									},
									"src": "927:44:12"
								},
								{
									"anonymous": false,
									"eventSelector": "d1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c5",
									"id": 1959,
									"name": "burnToken",
									"nameLocation": "983:9:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1001:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "993:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1015:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1007:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:30:12"
									},
									"src": "977:46:12"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "1106:81:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1970,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "1131:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "1135:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1969,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1018,
														"src": "1125:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1125:17:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1973,
												"nodeType": "ExpressionStatement",
												"src": "1125:17:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1975,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "1168:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1976,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1963,
															"src": "1172:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1974,
														"name": "mintToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1953,
														"src": "1158:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1158:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1978,
												"nodeType": "EmitStatement",
												"src": "1153:26:12"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1966,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1906,
													"src": "1093:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1965,
												"name": "onlyRole",
												"nameLocations": [
													"1084:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1084:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1084:21:12"
										}
									],
									"name": "mint",
									"nameLocation": "1042:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1055:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1047:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1067:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "1059:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1962,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:28:12"
									},
									"returnParameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1106:0:12"
									},
									"scope": 2011,
									"src": "1033:154:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "1270:85:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1991,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "1295:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1992,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "1301:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1990,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "1289:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1994,
												"nodeType": "ExpressionStatement",
												"src": "1289:19:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1996,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "1334:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1997,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1984,
															"src": "1340:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1995,
														"name": "burnToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "1324:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1324:23:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1999,
												"nodeType": "EmitStatement",
												"src": "1319:28:12"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1987,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1911,
													"src": "1257:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1988,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1986,
												"name": "onlyRole",
												"nameLocations": [
													"1248:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1248:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "1248:21:12"
										}
									],
									"name": "burn",
									"nameLocation": "1204:4:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1217:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "1209:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1209:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "1223:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1208:30:12"
									},
									"returnParameters": {
										"id": 1989,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1270:0:12"
									},
									"scope": 2011,
									"src": "1195:160:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 2009,
										"nodeType": "Block",
										"src": "1428:27:12",
										"statements": [
											{
												"expression": {
													"hexValue": "38",
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1446:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8_by_1",
														"typeString": "int_const 8"
													},
													"value": "8"
												},
												"functionReturnParameters": 2006,
												"id": 2008,
												"nodeType": "Return",
												"src": "1439:8:12"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 2010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1372:8:12",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2003,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1403:8:12"
									},
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1380:2:12"
									},
									"returnParameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2010,
												"src": "1421:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2004,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1421:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1420:7:12"
									},
									"scope": 2011,
									"src": "1363:92:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2012,
							"src": "188:1270:12",
							"usedErrors": [
								305,
								308,
								538,
								543,
								548,
								557,
								562,
								567
							],
							"usedEvents": [
								317,
								326,
								335,
								1190,
								1199,
								1953,
								1959
							]
						}
					],
					"src": "0:1458:12"
				},
				"id": 12
			}
		}
	}
}