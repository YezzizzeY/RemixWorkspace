{
	"id": "6f323446e8423a1f4630249e20eec436",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"sBNB_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/access/IAccessControl.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/access/AccessControl.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: sBNB.sol\n\npragma solidity >=0.8.0 <0.9.0;\n//SPDX-License-Identifier: MIT\n\n\n\ncontract sAsset is ERC20, AccessControl {\n    // Create a new role identifier for the minter / burner role\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\");    \n    /**\n     * @dev Constructor that gives msg.sender all of existing tokens.\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 initialSupply\n    ) ERC20(name, symbol) {\n        _mint(msg.sender, initialSupply * (10 ** uint256(decimals())));\n        // Grant the contract deployer the default admin role: it will be able\n        // to grant and revoke any roles\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n\n    event mintToken(address to, uint256 amount);\n    event burnToken(address from, uint256 amount);\n\n\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        \n        _mint(to, amount);\n        emit mintToken(to, amount);\n    }\n\n    function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        \n        _burn(from, amount);\n        emit burnToken(from, amount);\n    }\n\n    function decimals() public view virtual override returns (uint8) {\n        return 8;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"sBNB_flattened.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"AccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 299,
								"contract": "sBNB_flattened.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)294_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)294_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)294_storage"
							},
							"t_struct(RoleData)294_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 291,
										"contract": "sBNB_flattened.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 293,
										"contract": "sBNB_flattened.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 682,
								"contract": "sBNB_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 688,
								"contract": "sBNB_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 690,
								"contract": "sBNB_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 692,
								"contract": "sBNB_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 694,
								"contract": "sBNB_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"IAccessControl\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"sAsset": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnToken",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mintToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BURNER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Constructor that gives msg.sender all of existing tokens."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"sBNB_flattened.sol\":34115:35350  contract sAsset is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"sBNB_flattened.sol\":34452:34830  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"sBNB_flattened.sol\":34565:34569  name */\n  dup3\n    /* \"sBNB_flattened.sol\":34571:34577  symbol */\n  dup3\n    /* \"sBNB_flattened.sol\":24856:24861  name_ */\n  dup2\n    /* \"sBNB_flattened.sol\":24848:24853  _name */\n  0x03\n    /* \"sBNB_flattened.sol\":24848:24861  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"sBNB_flattened.sol\":24881:24888  symbol_ */\n  dup1\n    /* \"sBNB_flattened.sol\":24871:24878  _symbol */\n  0x04\n    /* \"sBNB_flattened.sol\":24871:24888  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"sBNB_flattened.sol\":24782:24895  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"sBNB_flattened.sol\":34589:34651  _mint(msg.sender, initialSupply * (10 ** uint256(decimals()))) */\n  tag_11\n    /* \"sBNB_flattened.sol\":34595:34605  msg.sender */\n  caller\n    /* \"sBNB_flattened.sol\":34638:34648  decimals() */\n  tag_12\n    /* \"sBNB_flattened.sol\":34638:34646  decimals */\n  shl(0x20, tag_13)\n    /* \"sBNB_flattened.sol\":34638:34648  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"sBNB_flattened.sol\":34630:34649  uint256(decimals()) */\n  0xff\n  and\n    /* \"sBNB_flattened.sol\":34624:34626  10 */\n  0x0a\n    /* \"sBNB_flattened.sol\":34624:34649  10 ** uint256(decimals()) */\n  tag_14\n  swap2\n  swap1\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"sBNB_flattened.sol\":34607:34620  initialSupply */\n  dup4\n    /* \"sBNB_flattened.sol\":34607:34650  initialSupply * (10 ** uint256(decimals())) */\n  tag_16\n  swap2\n  swap1\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"sBNB_flattened.sol\":34589:34594  _mint */\n  shl(0x20, tag_18)\n    /* \"sBNB_flattened.sol\":34589:34651  _mint(msg.sender, initialSupply * (10 ** uint256(decimals()))) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"sBNB_flattened.sol\":34781:34823  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_19\n    /* \"sBNB_flattened.sol\":14758:14762  0x00 */\n  0x00\n    /* \"sBNB_flattened.sol\":34792:34810  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"sBNB_flattened.sol\":34812:34822  msg.sender */\n  caller\n    /* \"sBNB_flattened.sol\":34781:34791  _grantRole */\n  shl(0x20, tag_20)\n    /* \"sBNB_flattened.sol\":34781:34823  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n  pop\n    /* \"sBNB_flattened.sol\":34452:34830  constructor(... */\n  pop\n  pop\n  pop\n    /* \"sBNB_flattened.sol\":34115:35350  contract sAsset is ERC20, AccessControl {... */\n  jump(tag_21)\n    /* \"sBNB_flattened.sol\":35258:35348  function decimals() public view virtual override returns (uint8) {... */\ntag_13:\n    /* \"sBNB_flattened.sol\":35316:35321  uint8 */\n  0x00\n    /* \"sBNB_flattened.sol\":35340:35341  8 */\n  0x08\n    /* \"sBNB_flattened.sol\":35333:35341  return 8 */\n  swap1\n  pop\n    /* \"sBNB_flattened.sol\":35258:35348  function decimals() public view virtual override returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"sBNB_flattened.sol\":30607:30815  function _mint(address account, uint256 value) internal {... */\ntag_18:\n    /* \"sBNB_flattened.sol\":30696:30697  0 */\n  0x00\n    /* \"sBNB_flattened.sol\":30677:30698  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"sBNB_flattened.sol\":30677:30684  account */\n  dup3\n    /* \"sBNB_flattened.sol\":30677:30698  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"sBNB_flattened.sol\":30673:30764  if (account == address(0)) {... */\n  tag_24\n  jumpi\n    /* \"sBNB_flattened.sol\":30750:30751  0 */\n  0x00\n    /* \"sBNB_flattened.sol\":30721:30753  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_25\n  swap2\n  swap1\n  tag_26\n  jump\t// in\ntag_25:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"sBNB_flattened.sol\":30673:30764  if (account == address(0)) {... */\ntag_24:\n    /* \"sBNB_flattened.sol\":30773:30808  _update(address(0), account, value) */\n  tag_27\n    /* \"sBNB_flattened.sol\":30789:30790  0 */\n  0x00\n    /* \"sBNB_flattened.sol\":30793:30800  account */\n  dup4\n    /* \"sBNB_flattened.sol\":30802:30807  value */\n  dup4\n    /* \"sBNB_flattened.sol\":30773:30780  _update */\n  shl(0x20, tag_28)\n    /* \"sBNB_flattened.sol\":30773:30808  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"sBNB_flattened.sol\":30607:30815  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"sBNB_flattened.sol\":18705:19021  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_20:\n    /* \"sBNB_flattened.sol\":18782:18786  bool */\n  0x00\n    /* \"sBNB_flattened.sol\":18803:18825  hasRole(role, account) */\n  tag_30\n    /* \"sBNB_flattened.sol\":18811:18815  role */\n  dup4\n    /* \"sBNB_flattened.sol\":18817:18824  account */\n  dup4\n    /* \"sBNB_flattened.sol\":18803:18810  hasRole */\n  shl(0x20, tag_31)\n    /* \"sBNB_flattened.sol\":18803:18825  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_30:\n    /* \"sBNB_flattened.sol\":18798:19015  if (!hasRole(role, account)) {... */\n  tag_32\n  jumpi\n    /* \"sBNB_flattened.sol\":18873:18877  true */\n  0x01\n    /* \"sBNB_flattened.sol\":18841:18847  _roles */\n  0x05\n    /* \"sBNB_flattened.sol\":18841:18853  _roles[role] */\n  0x00\n    /* \"sBNB_flattened.sol\":18848:18852  role */\n  dup6\n    /* \"sBNB_flattened.sol\":18841:18853  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"sBNB_flattened.sol\":18841:18861  _roles[role].hasRole */\n  0x00\n  add\n    /* \"sBNB_flattened.sol\":18841:18870  _roles[role].hasRole[account] */\n  0x00\n    /* \"sBNB_flattened.sol\":18862:18869  account */\n  dup5\n    /* \"sBNB_flattened.sol\":18841:18870  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"sBNB_flattened.sol\":18841:18877  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"sBNB_flattened.sol\":18923:18935  _msgSender() */\n  tag_33\n    /* \"sBNB_flattened.sol\":18923:18933  _msgSender */\n  shl(0x20, tag_34)\n    /* \"sBNB_flattened.sol\":18923:18935  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_33:\n    /* \"sBNB_flattened.sol\":18896:18936  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"sBNB_flattened.sol\":18914:18921  account */\n  dup3\n    /* \"sBNB_flattened.sol\":18896:18936  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"sBNB_flattened.sol\":18908:18912  role */\n  dup5\n    /* \"sBNB_flattened.sol\":18896:18936  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"sBNB_flattened.sol\":18957:18961  true */\n  0x01\n    /* \"sBNB_flattened.sol\":18950:18961  return true */\n  swap1\n  pop\n  jump(tag_29)\n    /* \"sBNB_flattened.sol\":18798:19015  if (!hasRole(role, account)) {... */\ntag_32:\n    /* \"sBNB_flattened.sol\":18999:19004  false */\n  0x00\n    /* \"sBNB_flattened.sol\":18992:19004  return false */\n  swap1\n  pop\n    /* \"sBNB_flattened.sol\":18705:19021  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_29:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"sBNB_flattened.sol\":29157:30264  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_28:\n    /* \"sBNB_flattened.sol\":29262:29263  0 */\n  0x00\n    /* \"sBNB_flattened.sol\":29246:29264  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"sBNB_flattened.sol\":29246:29250  from */\n  dup4\n    /* \"sBNB_flattened.sol\":29246:29264  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"sBNB_flattened.sol\":29242:29782  if (from == address(0)) {... */\n  tag_37\n  jumpi\n    /* \"sBNB_flattened.sol\":29398:29403  value */\n  dup1\n    /* \"sBNB_flattened.sol\":29382:29394  _totalSupply */\n  0x02\n  0x00\n    /* \"sBNB_flattened.sol\":29382:29403  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_38\n  swap2\n  swap1\n  tag_39\n  jump\t// in\ntag_38:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sBNB_flattened.sol\":29242:29782  if (from == address(0)) {... */\n  jump(tag_40)\ntag_37:\n    /* \"sBNB_flattened.sol\":29434:29453  uint256 fromBalance */\n  0x00\n    /* \"sBNB_flattened.sol\":29456:29465  _balances */\n  dup1\n    /* \"sBNB_flattened.sol\":29456:29471  _balances[from] */\n  0x00\n    /* \"sBNB_flattened.sol\":29466:29470  from */\n  dup6\n    /* \"sBNB_flattened.sol\":29456:29471  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"sBNB_flattened.sol\":29434:29471  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"sBNB_flattened.sol\":29503:29508  value */\n  dup2\n    /* \"sBNB_flattened.sol\":29489:29500  fromBalance */\n  dup2\n    /* \"sBNB_flattened.sol\":29489:29508  fromBalance < value */\n  lt\n    /* \"sBNB_flattened.sol\":29485:29600  if (fromBalance < value) {... */\n  iszero\n  tag_41\n  jumpi\n    /* \"sBNB_flattened.sol\":29560:29564  from */\n  dup4\n    /* \"sBNB_flattened.sol\":29566:29577  fromBalance */\n  dup2\n    /* \"sBNB_flattened.sol\":29579:29584  value */\n  dup4\n    /* \"sBNB_flattened.sol\":29535:29585  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_42\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_43\n  jump\t// in\ntag_42:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"sBNB_flattened.sol\":29485:29600  if (fromBalance < value) {... */\ntag_41:\n    /* \"sBNB_flattened.sol\":29752:29757  value */\n  dup2\n    /* \"sBNB_flattened.sol\":29738:29749  fromBalance */\n  dup2\n    /* \"sBNB_flattened.sol\":29738:29757  fromBalance - value */\n  sub\n    /* \"sBNB_flattened.sol\":29720:29729  _balances */\n  0x00\n    /* \"sBNB_flattened.sol\":29720:29735  _balances[from] */\n  dup1\n    /* \"sBNB_flattened.sol\":29730:29734  from */\n  dup7\n    /* \"sBNB_flattened.sol\":29720:29735  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"sBNB_flattened.sol\":29720:29757  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sBNB_flattened.sol\":29420:29782  {... */\n  pop\n    /* \"sBNB_flattened.sol\":29242:29782  if (from == address(0)) {... */\ntag_40:\n    /* \"sBNB_flattened.sol\":29810:29811  0 */\n  0x00\n    /* \"sBNB_flattened.sol\":29796:29812  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"sBNB_flattened.sol\":29796:29798  to */\n  dup3\n    /* \"sBNB_flattened.sol\":29796:29812  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"sBNB_flattened.sol\":29792:30217  if (to == address(0)) {... */\n  tag_44\n  jumpi\n    /* \"sBNB_flattened.sol\":29975:29980  value */\n  dup1\n    /* \"sBNB_flattened.sol\":29959:29971  _totalSupply */\n  0x02\n  0x00\n    /* \"sBNB_flattened.sol\":29959:29980  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sBNB_flattened.sol\":29792:30217  if (to == address(0)) {... */\n  jump(tag_45)\ntag_44:\n    /* \"sBNB_flattened.sol\":30187:30192  value */\n  dup1\n    /* \"sBNB_flattened.sol\":30170:30179  _balances */\n  0x00\n    /* \"sBNB_flattened.sol\":30170:30183  _balances[to] */\n  dup1\n    /* \"sBNB_flattened.sol\":30180:30182  to */\n  dup5\n    /* \"sBNB_flattened.sol\":30170:30183  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"sBNB_flattened.sol\":30170:30192  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"sBNB_flattened.sol\":29792:30217  if (to == address(0)) {... */\ntag_45:\n    /* \"sBNB_flattened.sol\":30247:30249  to */\n  dup2\n    /* \"sBNB_flattened.sol\":30232:30257  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"sBNB_flattened.sol\":30241:30245  from */\n  dup4\n    /* \"sBNB_flattened.sol\":30232:30257  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"sBNB_flattened.sol\":30251:30256  value */\n  dup4\n    /* \"sBNB_flattened.sol\":30232:30257  Transfer(from, to, value) */\n  mload(0x40)\n  tag_46\n  swap2\n  swap1\n  tag_47\n  jump\t// in\ntag_46:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"sBNB_flattened.sol\":29157:30264  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"sBNB_flattened.sol\":15380:15516  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_31:\n    /* \"sBNB_flattened.sol\":15457:15461  bool */\n  0x00\n    /* \"sBNB_flattened.sol\":15480:15486  _roles */\n  0x05\n    /* \"sBNB_flattened.sol\":15480:15492  _roles[role] */\n  0x00\n    /* \"sBNB_flattened.sol\":15487:15491  role */\n  dup5\n    /* \"sBNB_flattened.sol\":15480:15492  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"sBNB_flattened.sol\":15480:15500  _roles[role].hasRole */\n  0x00\n  add\n    /* \"sBNB_flattened.sol\":15480:15509  _roles[role].hasRole[account] */\n  0x00\n    /* \"sBNB_flattened.sol\":15501:15508  account */\n  dup4\n    /* \"sBNB_flattened.sol\":15480:15509  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"sBNB_flattened.sol\":15473:15509  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"sBNB_flattened.sol\":15380:15516  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"sBNB_flattened.sol\":12345:12441  function _msgSender() internal view virtual returns (address) {... */\ntag_34:\n    /* \"sBNB_flattened.sol\":12398:12405  address */\n  0x00\n    /* \"sBNB_flattened.sol\":12424:12434  msg.sender */\n  caller\n    /* \"sBNB_flattened.sol\":12417:12434  return msg.sender */\n  swap1\n  pop\n    /* \"sBNB_flattened.sol\":12345:12441  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_50:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_51:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_52:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_53:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_54:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_55:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_56:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_57:\n    /* \"#utility.yul\":957:984   */\n  tag_101\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_55\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_102\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_103\n  tag_56\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":1030:1118   */\ntag_102:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_58:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_105\n  tag_50\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_106\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_57\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_59:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_108\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_109\n  tag_56\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":1434:1490   */\ntag_108:\n    /* \"#utility.yul\":1508:1537   */\n  tag_110\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_55\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_60:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_112:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_61:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_116\n    /* \"#utility.yul\":1992:2041   */\n  tag_117\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_59\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":1976:2042   */\n  tag_58\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_119\n  tag_54\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":2117:2229   */\ntag_118:\n    /* \"#utility.yul\":2238:2290   */\n  tag_120\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_60\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_62:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_122\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_123\n  tag_53\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":2399:2521   */\ntag_122:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_124\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_61\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:2754   */\ntag_63:\n    /* \"#utility.yul\":2714:2721   */\n  0x00\n    /* \"#utility.yul\":2743:2748   */\n  dup2\n    /* \"#utility.yul\":2732:2748   */\n  swap1\n  pop\n    /* \"#utility.yul\":2677:2754   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2760:2882   */\ntag_64:\n    /* \"#utility.yul\":2833:2857   */\n  tag_127\n    /* \"#utility.yul\":2851:2856   */\n  dup2\n    /* \"#utility.yul\":2833:2857   */\n  tag_63\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":2826:2831   */\n  dup2\n    /* \"#utility.yul\":2823:2858   */\n  eq\n    /* \"#utility.yul\":2813:2876   */\n  tag_128\n  jumpi\n    /* \"#utility.yul\":2872:2873   */\n  0x00\n    /* \"#utility.yul\":2869:2870   */\n  dup1\n    /* \"#utility.yul\":2862:2874   */\n  revert\n    /* \"#utility.yul\":2813:2876   */\ntag_128:\n    /* \"#utility.yul\":2760:2882   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2888:3031   */\ntag_65:\n    /* \"#utility.yul\":2945:2950   */\n  0x00\n    /* \"#utility.yul\":2976:2982   */\n  dup2\n    /* \"#utility.yul\":2970:2983   */\n  mload\n    /* \"#utility.yul\":2961:2983   */\n  swap1\n  pop\n    /* \"#utility.yul\":2992:3025   */\n  tag_130\n    /* \"#utility.yul\":3019:3024   */\n  dup2\n    /* \"#utility.yul\":2992:3025   */\n  tag_64\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":2888:3031   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3037:4046   */\ntag_3:\n    /* \"#utility.yul\":3145:3151   */\n  0x00\n    /* \"#utility.yul\":3153:3159   */\n  dup1\n    /* \"#utility.yul\":3161:3167   */\n  0x00\n    /* \"#utility.yul\":3210:3212   */\n  0x60\n    /* \"#utility.yul\":3198:3207   */\n  dup5\n    /* \"#utility.yul\":3189:3196   */\n  dup7\n    /* \"#utility.yul\":3185:3208   */\n  sub\n    /* \"#utility.yul\":3181:3213   */\n  slt\n    /* \"#utility.yul\":3178:3297   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":3216:3295   */\n  tag_133\n  tag_51\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":3178:3297   */\ntag_132:\n    /* \"#utility.yul\":3357:3358   */\n  0x00\n    /* \"#utility.yul\":3346:3355   */\n  dup5\n    /* \"#utility.yul\":3342:3359   */\n  add\n    /* \"#utility.yul\":3336:3360   */\n  mload\n    /* \"#utility.yul\":3387:3405   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3379:3385   */\n  dup2\n    /* \"#utility.yul\":3376:3406   */\n  gt\n    /* \"#utility.yul\":3373:3490   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":3409:3488   */\n  tag_135\n  tag_52\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":3373:3490   */\ntag_134:\n    /* \"#utility.yul\":3514:3588   */\n  tag_136\n    /* \"#utility.yul\":3580:3587   */\n  dup7\n    /* \"#utility.yul\":3571:3577   */\n  dup3\n    /* \"#utility.yul\":3560:3569   */\n  dup8\n    /* \"#utility.yul\":3556:3578   */\n  add\n    /* \"#utility.yul\":3514:3588   */\n  tag_62\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":3504:3588   */\n  swap4\n  pop\n    /* \"#utility.yul\":3307:3598   */\n  pop\n    /* \"#utility.yul\":3658:3660   */\n  0x20\n    /* \"#utility.yul\":3647:3656   */\n  dup5\n    /* \"#utility.yul\":3643:3661   */\n  add\n    /* \"#utility.yul\":3637:3662   */\n  mload\n    /* \"#utility.yul\":3689:3707   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3681:3687   */\n  dup2\n    /* \"#utility.yul\":3678:3708   */\n  gt\n    /* \"#utility.yul\":3675:3792   */\n  iszero\n  tag_137\n  jumpi\n    /* \"#utility.yul\":3711:3790   */\n  tag_138\n  tag_52\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":3675:3792   */\ntag_137:\n    /* \"#utility.yul\":3816:3890   */\n  tag_139\n    /* \"#utility.yul\":3882:3889   */\n  dup7\n    /* \"#utility.yul\":3873:3879   */\n  dup3\n    /* \"#utility.yul\":3862:3871   */\n  dup8\n    /* \"#utility.yul\":3858:3880   */\n  add\n    /* \"#utility.yul\":3816:3890   */\n  tag_62\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":3806:3890   */\n  swap3\n  pop\n    /* \"#utility.yul\":3608:3900   */\n  pop\n    /* \"#utility.yul\":3939:3941   */\n  0x40\n    /* \"#utility.yul\":3965:4029   */\n  tag_140\n    /* \"#utility.yul\":4021:4028   */\n  dup7\n    /* \"#utility.yul\":4012:4018   */\n  dup3\n    /* \"#utility.yul\":4001:4010   */\n  dup8\n    /* \"#utility.yul\":3997:4019   */\n  add\n    /* \"#utility.yul\":3965:4029   */\n  tag_65\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":3955:4029   */\n  swap2\n  pop\n    /* \"#utility.yul\":3910:4039   */\n  pop\n    /* \"#utility.yul\":3037:4046   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":4052:4151   */\ntag_66:\n    /* \"#utility.yul\":4104:4110   */\n  0x00\n    /* \"#utility.yul\":4138:4143   */\n  dup2\n    /* \"#utility.yul\":4132:4144   */\n  mload\n    /* \"#utility.yul\":4122:4144   */\n  swap1\n  pop\n    /* \"#utility.yul\":4052:4151   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4157:4337   */\ntag_67:\n    /* \"#utility.yul\":4205:4282   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4202:4203   */\n  0x00\n    /* \"#utility.yul\":4195:4283   */\n  mstore\n    /* \"#utility.yul\":4302:4306   */\n  0x22\n    /* \"#utility.yul\":4299:4300   */\n  0x04\n    /* \"#utility.yul\":4292:4307   */\n  mstore\n    /* \"#utility.yul\":4326:4330   */\n  0x24\n    /* \"#utility.yul\":4323:4324   */\n  0x00\n    /* \"#utility.yul\":4316:4331   */\n  revert\n    /* \"#utility.yul\":4343:4663   */\ntag_68:\n    /* \"#utility.yul\":4387:4393   */\n  0x00\n    /* \"#utility.yul\":4424:4425   */\n  0x02\n    /* \"#utility.yul\":4418:4422   */\n  dup3\n    /* \"#utility.yul\":4414:4426   */\n  div\n    /* \"#utility.yul\":4404:4426   */\n  swap1\n  pop\n    /* \"#utility.yul\":4471:4472   */\n  0x01\n    /* \"#utility.yul\":4465:4469   */\n  dup3\n    /* \"#utility.yul\":4461:4473   */\n  and\n    /* \"#utility.yul\":4492:4510   */\n  dup1\n    /* \"#utility.yul\":4482:4563   */\n  tag_144\n  jumpi\n    /* \"#utility.yul\":4548:4552   */\n  0x7f\n    /* \"#utility.yul\":4540:4546   */\n  dup3\n    /* \"#utility.yul\":4536:4553   */\n  and\n    /* \"#utility.yul\":4526:4553   */\n  swap2\n  pop\n    /* \"#utility.yul\":4482:4563   */\ntag_144:\n    /* \"#utility.yul\":4610:4612   */\n  0x20\n    /* \"#utility.yul\":4602:4608   */\n  dup3\n    /* \"#utility.yul\":4599:4613   */\n  lt\n    /* \"#utility.yul\":4579:4597   */\n  dup2\n    /* \"#utility.yul\":4576:4614   */\n  sub\n    /* \"#utility.yul\":4573:4657   */\n  tag_145\n  jumpi\n    /* \"#utility.yul\":4629:4647   */\n  tag_146\n  tag_67\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":4573:4657   */\ntag_145:\n    /* \"#utility.yul\":4394:4663   */\n  pop\n    /* \"#utility.yul\":4343:4663   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4669:4810   */\ntag_69:\n    /* \"#utility.yul\":4718:4722   */\n  0x00\n    /* \"#utility.yul\":4741:4744   */\n  dup2\n    /* \"#utility.yul\":4733:4744   */\n  swap1\n  pop\n    /* \"#utility.yul\":4764:4767   */\n  dup2\n    /* \"#utility.yul\":4761:4762   */\n  0x00\n    /* \"#utility.yul\":4754:4768   */\n  mstore\n    /* \"#utility.yul\":4798:4802   */\n  0x20\n    /* \"#utility.yul\":4795:4796   */\n  0x00\n    /* \"#utility.yul\":4785:4803   */\n  keccak256\n    /* \"#utility.yul\":4777:4803   */\n  swap1\n  pop\n    /* \"#utility.yul\":4669:4810   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4816:4909   */\ntag_70:\n    /* \"#utility.yul\":4853:4859   */\n  0x00\n    /* \"#utility.yul\":4900:4902   */\n  0x20\n    /* \"#utility.yul\":4895:4897   */\n  0x1f\n    /* \"#utility.yul\":4888:4893   */\n  dup4\n    /* \"#utility.yul\":4884:4898   */\n  add\n    /* \"#utility.yul\":4880:4903   */\n  div\n    /* \"#utility.yul\":4870:4903   */\n  swap1\n  pop\n    /* \"#utility.yul\":4816:4909   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4915:5022   */\ntag_71:\n    /* \"#utility.yul\":4959:4967   */\n  0x00\n    /* \"#utility.yul\":5009:5014   */\n  dup3\n    /* \"#utility.yul\":5003:5007   */\n  dup3\n    /* \"#utility.yul\":4999:5015   */\n  shl\n    /* \"#utility.yul\":4978:5015   */\n  swap1\n  pop\n    /* \"#utility.yul\":4915:5022   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:5421   */\ntag_72:\n    /* \"#utility.yul\":5097:5103   */\n  0x00\n    /* \"#utility.yul\":5147:5148   */\n  0x08\n    /* \"#utility.yul\":5135:5145   */\n  dup4\n    /* \"#utility.yul\":5131:5149   */\n  mul\n    /* \"#utility.yul\":5170:5267   */\n  tag_151\n    /* \"#utility.yul\":5200:5266   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5189:5198   */\n  dup3\n    /* \"#utility.yul\":5170:5267   */\n  tag_71\n  jump\t// in\ntag_151:\n    /* \"#utility.yul\":5288:5327   */\n  tag_152\n    /* \"#utility.yul\":5318:5326   */\n  dup7\n    /* \"#utility.yul\":5307:5316   */\n  dup4\n    /* \"#utility.yul\":5288:5327   */\n  tag_71\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":5276:5327   */\n  swap6\n  pop\n    /* \"#utility.yul\":5360:5364   */\n  dup1\n    /* \"#utility.yul\":5356:5365   */\n  not\n    /* \"#utility.yul\":5349:5354   */\n  dup5\n    /* \"#utility.yul\":5345:5366   */\n  and\n    /* \"#utility.yul\":5336:5366   */\n  swap4\n  pop\n    /* \"#utility.yul\":5409:5413   */\n  dup1\n    /* \"#utility.yul\":5399:5407   */\n  dup7\n    /* \"#utility.yul\":5395:5414   */\n  and\n    /* \"#utility.yul\":5388:5393   */\n  dup5\n    /* \"#utility.yul\":5385:5415   */\n  or\n    /* \"#utility.yul\":5375:5415   */\n  swap3\n  pop\n    /* \"#utility.yul\":5104:5421   */\n  pop\n  pop\n    /* \"#utility.yul\":5028:5421   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5427:5487   */\ntag_73:\n    /* \"#utility.yul\":5455:5458   */\n  0x00\n    /* \"#utility.yul\":5476:5481   */\n  dup2\n    /* \"#utility.yul\":5469:5481   */\n  swap1\n  pop\n    /* \"#utility.yul\":5427:5487   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5493:5635   */\ntag_74:\n    /* \"#utility.yul\":5543:5552   */\n  0x00\n    /* \"#utility.yul\":5576:5629   */\n  tag_155\n    /* \"#utility.yul\":5594:5628   */\n  tag_156\n    /* \"#utility.yul\":5603:5627   */\n  tag_157\n    /* \"#utility.yul\":5621:5626   */\n  dup5\n    /* \"#utility.yul\":5603:5627   */\n  tag_63\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":5594:5628   */\n  tag_73\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":5576:5629   */\n  tag_63\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":5563:5629   */\n  swap1\n  pop\n    /* \"#utility.yul\":5493:5635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5641:5716   */\ntag_75:\n    /* \"#utility.yul\":5684:5687   */\n  0x00\n    /* \"#utility.yul\":5705:5710   */\n  dup2\n    /* \"#utility.yul\":5698:5710   */\n  swap1\n  pop\n    /* \"#utility.yul\":5641:5716   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5722:5991   */\ntag_76:\n    /* \"#utility.yul\":5832:5871   */\n  tag_160\n    /* \"#utility.yul\":5863:5870   */\n  dup4\n    /* \"#utility.yul\":5832:5871   */\n  tag_74\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":5893:5984   */\n  tag_161\n    /* \"#utility.yul\":5942:5983   */\n  tag_162\n    /* \"#utility.yul\":5966:5982   */\n  dup3\n    /* \"#utility.yul\":5942:5983   */\n  tag_75\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":5934:5940   */\n  dup5\n    /* \"#utility.yul\":5927:5931   */\n  dup5\n    /* \"#utility.yul\":5921:5932   */\n  sload\n    /* \"#utility.yul\":5893:5984   */\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":5887:5891   */\n  dup3\n    /* \"#utility.yul\":5880:5985   */\n  sstore\n    /* \"#utility.yul\":5798:5991   */\n  pop\n    /* \"#utility.yul\":5722:5991   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5997:6070   */\ntag_77:\n    /* \"#utility.yul\":6042:6045   */\n  0x00\n    /* \"#utility.yul\":5997:6070   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":6076:6265   */\ntag_78:\n    /* \"#utility.yul\":6153:6185   */\n  tag_165\n  tag_77\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":6194:6259   */\n  tag_166\n    /* \"#utility.yul\":6252:6258   */\n  dup2\n    /* \"#utility.yul\":6244:6250   */\n  dup5\n    /* \"#utility.yul\":6238:6242   */\n  dup5\n    /* \"#utility.yul\":6194:6259   */\n  tag_76\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":6129:6265   */\n  pop\n    /* \"#utility.yul\":6076:6265   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6271:6457   */\ntag_79:\n    /* \"#utility.yul\":6331:6451   */\ntag_168:\n    /* \"#utility.yul\":6348:6351   */\n  dup2\n    /* \"#utility.yul\":6341:6346   */\n  dup2\n    /* \"#utility.yul\":6338:6352   */\n  lt\n    /* \"#utility.yul\":6331:6451   */\n  iszero\n  tag_170\n  jumpi\n    /* \"#utility.yul\":6402:6441   */\n  tag_171\n    /* \"#utility.yul\":6439:6440   */\n  0x00\n    /* \"#utility.yul\":6432:6437   */\n  dup3\n    /* \"#utility.yul\":6402:6441   */\n  tag_78\n  jump\t// in\ntag_171:\n    /* \"#utility.yul\":6375:6376   */\n  0x01\n    /* \"#utility.yul\":6368:6373   */\n  dup2\n    /* \"#utility.yul\":6364:6377   */\n  add\n    /* \"#utility.yul\":6355:6377   */\n  swap1\n  pop\n    /* \"#utility.yul\":6331:6451   */\n  jump(tag_168)\ntag_170:\n    /* \"#utility.yul\":6271:6457   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6463:7006   */\ntag_80:\n    /* \"#utility.yul\":6564:6566   */\n  0x1f\n    /* \"#utility.yul\":6559:6562   */\n  dup3\n    /* \"#utility.yul\":6556:6567   */\n  gt\n    /* \"#utility.yul\":6553:6999   */\n  iszero\n  tag_173\n  jumpi\n    /* \"#utility.yul\":6598:6636   */\n  tag_174\n    /* \"#utility.yul\":6630:6635   */\n  dup2\n    /* \"#utility.yul\":6598:6636   */\n  tag_69\n  jump\t// in\ntag_174:\n    /* \"#utility.yul\":6682:6711   */\n  tag_175\n    /* \"#utility.yul\":6700:6710   */\n  dup5\n    /* \"#utility.yul\":6682:6711   */\n  tag_70\n  jump\t// in\ntag_175:\n    /* \"#utility.yul\":6672:6680   */\n  dup2\n    /* \"#utility.yul\":6668:6712   */\n  add\n    /* \"#utility.yul\":6865:6867   */\n  0x20\n    /* \"#utility.yul\":6853:6863   */\n  dup6\n    /* \"#utility.yul\":6850:6868   */\n  lt\n    /* \"#utility.yul\":6847:6896   */\n  iszero\n  tag_176\n  jumpi\n    /* \"#utility.yul\":6886:6894   */\n  dup2\n    /* \"#utility.yul\":6871:6894   */\n  swap1\n  pop\n    /* \"#utility.yul\":6847:6896   */\ntag_176:\n    /* \"#utility.yul\":6909:6989   */\n  tag_177\n    /* \"#utility.yul\":6965:6987   */\n  tag_178\n    /* \"#utility.yul\":6983:6986   */\n  dup6\n    /* \"#utility.yul\":6965:6987   */\n  tag_70\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":6955:6963   */\n  dup4\n    /* \"#utility.yul\":6951:6988   */\n  add\n    /* \"#utility.yul\":6938:6949   */\n  dup3\n    /* \"#utility.yul\":6909:6989   */\n  tag_79\n  jump\t// in\ntag_177:\n    /* \"#utility.yul\":6568:6999   */\n  pop\n  pop\n    /* \"#utility.yul\":6553:6999   */\ntag_173:\n    /* \"#utility.yul\":6463:7006   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7012:7129   */\ntag_81:\n    /* \"#utility.yul\":7066:7074   */\n  0x00\n    /* \"#utility.yul\":7116:7121   */\n  dup3\n    /* \"#utility.yul\":7110:7114   */\n  dup3\n    /* \"#utility.yul\":7106:7122   */\n  shr\n    /* \"#utility.yul\":7085:7122   */\n  swap1\n  pop\n    /* \"#utility.yul\":7012:7129   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7135:7304   */\ntag_82:\n    /* \"#utility.yul\":7179:7185   */\n  0x00\n    /* \"#utility.yul\":7212:7263   */\n  tag_181\n    /* \"#utility.yul\":7260:7261   */\n  0x00\n    /* \"#utility.yul\":7256:7262   */\n  not\n    /* \"#utility.yul\":7248:7253   */\n  dup5\n    /* \"#utility.yul\":7245:7246   */\n  0x08\n    /* \"#utility.yul\":7241:7254   */\n  mul\n    /* \"#utility.yul\":7212:7263   */\n  tag_81\n  jump\t// in\ntag_181:\n    /* \"#utility.yul\":7208:7264   */\n  not\n    /* \"#utility.yul\":7293:7297   */\n  dup1\n    /* \"#utility.yul\":7287:7291   */\n  dup4\n    /* \"#utility.yul\":7283:7298   */\n  and\n    /* \"#utility.yul\":7273:7298   */\n  swap2\n  pop\n    /* \"#utility.yul\":7186:7304   */\n  pop\n    /* \"#utility.yul\":7135:7304   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7309:7604   */\ntag_83:\n    /* \"#utility.yul\":7385:7389   */\n  0x00\n    /* \"#utility.yul\":7531:7560   */\n  tag_183\n    /* \"#utility.yul\":7556:7559   */\n  dup4\n    /* \"#utility.yul\":7550:7554   */\n  dup4\n    /* \"#utility.yul\":7531:7560   */\n  tag_82\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":7523:7560   */\n  swap2\n  pop\n    /* \"#utility.yul\":7593:7596   */\n  dup3\n    /* \"#utility.yul\":7590:7591   */\n  0x02\n    /* \"#utility.yul\":7586:7597   */\n  mul\n    /* \"#utility.yul\":7580:7584   */\n  dup3\n    /* \"#utility.yul\":7577:7598   */\n  or\n    /* \"#utility.yul\":7569:7598   */\n  swap1\n  pop\n    /* \"#utility.yul\":7309:7604   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7609:9004   */\ntag_8:\n    /* \"#utility.yul\":7726:7763   */\n  tag_185\n    /* \"#utility.yul\":7759:7762   */\n  dup3\n    /* \"#utility.yul\":7726:7763   */\n  tag_66\n  jump\t// in\ntag_185:\n    /* \"#utility.yul\":7828:7846   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7820:7826   */\n  dup2\n    /* \"#utility.yul\":7817:7847   */\n  gt\n    /* \"#utility.yul\":7814:7870   */\n  iszero\n  tag_186\n  jumpi\n    /* \"#utility.yul\":7850:7868   */\n  tag_187\n  tag_56\n  jump\t// in\ntag_187:\n    /* \"#utility.yul\":7814:7870   */\ntag_186:\n    /* \"#utility.yul\":7894:7932   */\n  tag_188\n    /* \"#utility.yul\":7926:7930   */\n  dup3\n    /* \"#utility.yul\":7920:7931   */\n  sload\n    /* \"#utility.yul\":7894:7932   */\n  tag_68\n  jump\t// in\ntag_188:\n    /* \"#utility.yul\":7979:8046   */\n  tag_189\n    /* \"#utility.yul\":8039:8045   */\n  dup3\n    /* \"#utility.yul\":8031:8037   */\n  dup3\n    /* \"#utility.yul\":8025:8029   */\n  dup6\n    /* \"#utility.yul\":7979:8046   */\n  tag_80\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":8073:8074   */\n  0x00\n    /* \"#utility.yul\":8097:8101   */\n  0x20\n    /* \"#utility.yul\":8084:8101   */\n  swap1\n  pop\n    /* \"#utility.yul\":8129:8131   */\n  0x1f\n    /* \"#utility.yul\":8121:8127   */\n  dup4\n    /* \"#utility.yul\":8118:8132   */\n  gt\n    /* \"#utility.yul\":8146:8147   */\n  0x01\n    /* \"#utility.yul\":8141:8759   */\n  dup2\n  eq\n  tag_191\n  jumpi\n    /* \"#utility.yul\":8803:8804   */\n  0x00\n    /* \"#utility.yul\":8820:8826   */\n  dup5\n    /* \"#utility.yul\":8817:8894   */\n  iszero\n  tag_192\n  jumpi\n    /* \"#utility.yul\":8869:8878   */\n  dup3\n    /* \"#utility.yul\":8864:8867   */\n  dup8\n    /* \"#utility.yul\":8860:8879   */\n  add\n    /* \"#utility.yul\":8854:8880   */\n  mload\n    /* \"#utility.yul\":8845:8880   */\n  swap1\n  pop\n    /* \"#utility.yul\":8817:8894   */\ntag_192:\n    /* \"#utility.yul\":8920:8987   */\n  tag_193\n    /* \"#utility.yul\":8980:8986   */\n  dup6\n    /* \"#utility.yul\":8973:8978   */\n  dup3\n    /* \"#utility.yul\":8920:8987   */\n  tag_83\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":8914:8918   */\n  dup7\n    /* \"#utility.yul\":8907:8988   */\n  sstore\n    /* \"#utility.yul\":8776:8998   */\n  pop\n    /* \"#utility.yul\":8111:8998   */\n  jump(tag_190)\n    /* \"#utility.yul\":8141:8759   */\ntag_191:\n    /* \"#utility.yul\":8193:8197   */\n  0x1f\n    /* \"#utility.yul\":8189:8198   */\n  not\n    /* \"#utility.yul\":8181:8187   */\n  dup5\n    /* \"#utility.yul\":8177:8199   */\n  and\n    /* \"#utility.yul\":8227:8264   */\n  tag_194\n    /* \"#utility.yul\":8259:8263   */\n  dup7\n    /* \"#utility.yul\":8227:8264   */\n  tag_69\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":8286:8287   */\n  0x00\n    /* \"#utility.yul\":8300:8508   */\ntag_195:\n    /* \"#utility.yul\":8314:8321   */\n  dup3\n    /* \"#utility.yul\":8311:8312   */\n  dup2\n    /* \"#utility.yul\":8308:8322   */\n  lt\n    /* \"#utility.yul\":8300:8508   */\n  iszero\n  tag_197\n  jumpi\n    /* \"#utility.yul\":8393:8402   */\n  dup5\n    /* \"#utility.yul\":8388:8391   */\n  dup10\n    /* \"#utility.yul\":8384:8403   */\n  add\n    /* \"#utility.yul\":8378:8404   */\n  mload\n    /* \"#utility.yul\":8370:8376   */\n  dup3\n    /* \"#utility.yul\":8363:8405   */\n  sstore\n    /* \"#utility.yul\":8444:8445   */\n  0x01\n    /* \"#utility.yul\":8436:8442   */\n  dup3\n    /* \"#utility.yul\":8432:8446   */\n  add\n    /* \"#utility.yul\":8422:8446   */\n  swap2\n  pop\n    /* \"#utility.yul\":8491:8493   */\n  0x20\n    /* \"#utility.yul\":8480:8489   */\n  dup6\n    /* \"#utility.yul\":8476:8494   */\n  add\n    /* \"#utility.yul\":8463:8494   */\n  swap5\n  pop\n    /* \"#utility.yul\":8337:8341   */\n  0x20\n    /* \"#utility.yul\":8334:8335   */\n  dup2\n    /* \"#utility.yul\":8330:8342   */\n  add\n    /* \"#utility.yul\":8325:8342   */\n  swap1\n  pop\n    /* \"#utility.yul\":8300:8508   */\n  jump(tag_195)\ntag_197:\n    /* \"#utility.yul\":8536:8542   */\n  dup7\n    /* \"#utility.yul\":8527:8534   */\n  dup4\n    /* \"#utility.yul\":8524:8543   */\n  lt\n    /* \"#utility.yul\":8521:8700   */\n  iszero\n  tag_198\n  jumpi\n    /* \"#utility.yul\":8594:8603   */\n  dup5\n    /* \"#utility.yul\":8589:8592   */\n  dup10\n    /* \"#utility.yul\":8585:8604   */\n  add\n    /* \"#utility.yul\":8579:8605   */\n  mload\n    /* \"#utility.yul\":8637:8685   */\n  tag_199\n    /* \"#utility.yul\":8679:8683   */\n  0x1f\n    /* \"#utility.yul\":8671:8677   */\n  dup10\n    /* \"#utility.yul\":8667:8684   */\n  and\n    /* \"#utility.yul\":8656:8665   */\n  dup3\n    /* \"#utility.yul\":8637:8685   */\n  tag_82\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":8629:8635   */\n  dup4\n    /* \"#utility.yul\":8622:8686   */\n  sstore\n    /* \"#utility.yul\":8544:8700   */\n  pop\n    /* \"#utility.yul\":8521:8700   */\ntag_198:\n    /* \"#utility.yul\":8746:8747   */\n  0x01\n    /* \"#utility.yul\":8742:8743   */\n  0x02\n    /* \"#utility.yul\":8734:8740   */\n  dup9\n    /* \"#utility.yul\":8730:8744   */\n  mul\n    /* \"#utility.yul\":8726:8748   */\n  add\n    /* \"#utility.yul\":8720:8724   */\n  dup9\n    /* \"#utility.yul\":8713:8749   */\n  sstore\n    /* \"#utility.yul\":8148:8759   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":8111:8998   */\ntag_190:\n  pop\n    /* \"#utility.yul\":7701:9004   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7609:9004   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9010:9190   */\ntag_84:\n    /* \"#utility.yul\":9058:9135   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":9055:9056   */\n  0x00\n    /* \"#utility.yul\":9048:9136   */\n  mstore\n    /* \"#utility.yul\":9155:9159   */\n  0x11\n    /* \"#utility.yul\":9152:9153   */\n  0x04\n    /* \"#utility.yul\":9145:9160   */\n  mstore\n    /* \"#utility.yul\":9179:9183   */\n  0x24\n    /* \"#utility.yul\":9176:9177   */\n  0x00\n    /* \"#utility.yul\":9169:9184   */\n  revert\n    /* \"#utility.yul\":9196:9298   */\ntag_85:\n    /* \"#utility.yul\":9238:9246   */\n  0x00\n    /* \"#utility.yul\":9285:9290   */\n  dup2\n    /* \"#utility.yul\":9282:9283   */\n  0x01\n    /* \"#utility.yul\":9278:9291   */\n  shr\n    /* \"#utility.yul\":9257:9291   */\n  swap1\n  pop\n    /* \"#utility.yul\":9196:9298   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9304:10152   */\ntag_86:\n    /* \"#utility.yul\":9365:9370   */\n  0x00\n    /* \"#utility.yul\":9372:9376   */\n  dup1\n    /* \"#utility.yul\":9396:9402   */\n  dup3\n    /* \"#utility.yul\":9387:9402   */\n  swap2\n  pop\n    /* \"#utility.yul\":9420:9425   */\n  dup4\n    /* \"#utility.yul\":9411:9425   */\n  swap1\n  pop\n    /* \"#utility.yul\":9434:10146   */\ntag_203:\n    /* \"#utility.yul\":9455:9456   */\n  0x01\n    /* \"#utility.yul\":9445:9453   */\n  dup6\n    /* \"#utility.yul\":9442:9457   */\n  gt\n    /* \"#utility.yul\":9434:10146   */\n  iszero\n  tag_205\n  jumpi\n    /* \"#utility.yul\":9550:9554   */\n  dup1\n    /* \"#utility.yul\":9545:9548   */\n  dup7\n    /* \"#utility.yul\":9541:9555   */\n  div\n    /* \"#utility.yul\":9535:9539   */\n  dup2\n    /* \"#utility.yul\":9532:9556   */\n  gt\n    /* \"#utility.yul\":9529:9579   */\n  iszero\n  tag_206\n  jumpi\n    /* \"#utility.yul\":9559:9577   */\n  tag_207\n  tag_84\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":9529:9579   */\ntag_206:\n    /* \"#utility.yul\":9609:9610   */\n  0x01\n    /* \"#utility.yul\":9599:9607   */\n  dup6\n    /* \"#utility.yul\":9595:9611   */\n  and\n    /* \"#utility.yul\":9592:10043   */\n  iszero\n  tag_208\n  jumpi\n    /* \"#utility.yul\":10024:10028   */\n  dup1\n    /* \"#utility.yul\":10017:10022   */\n  dup3\n    /* \"#utility.yul\":10013:10029   */\n  mul\n    /* \"#utility.yul\":10004:10029   */\n  swap2\n  pop\n    /* \"#utility.yul\":9592:10043   */\ntag_208:\n    /* \"#utility.yul\":10074:10078   */\n  dup1\n    /* \"#utility.yul\":10068:10072   */\n  dup2\n    /* \"#utility.yul\":10064:10079   */\n  mul\n    /* \"#utility.yul\":10056:10079   */\n  swap1\n  pop\n    /* \"#utility.yul\":10104:10136   */\n  tag_209\n    /* \"#utility.yul\":10127:10135   */\n  dup6\n    /* \"#utility.yul\":10104:10136   */\n  tag_85\n  jump\t// in\ntag_209:\n    /* \"#utility.yul\":10092:10136   */\n  swap5\n  pop\n    /* \"#utility.yul\":9434:10146   */\n  jump(tag_203)\ntag_205:\n    /* \"#utility.yul\":9304:10152   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10158:11231   */\ntag_87:\n    /* \"#utility.yul\":10212:10217   */\n  0x00\n    /* \"#utility.yul\":10403:10411   */\n  dup3\n    /* \"#utility.yul\":10393:10433   */\n  tag_211\n  jumpi\n    /* \"#utility.yul\":10424:10425   */\n  0x01\n    /* \"#utility.yul\":10415:10425   */\n  swap1\n  pop\n    /* \"#utility.yul\":10426:10431   */\n  jump(tag_210)\n    /* \"#utility.yul\":10393:10433   */\ntag_211:\n    /* \"#utility.yul\":10452:10456   */\n  dup2\n    /* \"#utility.yul\":10442:10478   */\n  tag_212\n  jumpi\n    /* \"#utility.yul\":10469:10470   */\n  0x00\n    /* \"#utility.yul\":10460:10470   */\n  swap1\n  pop\n    /* \"#utility.yul\":10471:10476   */\n  jump(tag_210)\n    /* \"#utility.yul\":10442:10478   */\ntag_212:\n    /* \"#utility.yul\":10538:10542   */\n  dup2\n    /* \"#utility.yul\":10586:10587   */\n  0x01\n    /* \"#utility.yul\":10581:10608   */\n  dup2\n  eq\n  tag_214\n  jumpi\n    /* \"#utility.yul\":10622:10623   */\n  0x02\n    /* \"#utility.yul\":10617:10808   */\n  dup2\n  eq\n  tag_215\n  jumpi\n    /* \"#utility.yul\":10531:10808   */\n  jump(tag_213)\n    /* \"#utility.yul\":10581:10608   */\ntag_214:\n    /* \"#utility.yul\":10599:10600   */\n  0x01\n    /* \"#utility.yul\":10590:10600   */\n  swap2\n  pop\n    /* \"#utility.yul\":10601:10606   */\n  pop\n  jump(tag_210)\n    /* \"#utility.yul\":10617:10808   */\ntag_215:\n    /* \"#utility.yul\":10662:10665   */\n  0xff\n    /* \"#utility.yul\":10652:10660   */\n  dup5\n    /* \"#utility.yul\":10649:10666   */\n  gt\n    /* \"#utility.yul\":10646:10689   */\n  iszero\n  tag_216\n  jumpi\n    /* \"#utility.yul\":10669:10687   */\n  tag_217\n  tag_84\n  jump\t// in\ntag_217:\n    /* \"#utility.yul\":10646:10689   */\ntag_216:\n    /* \"#utility.yul\":10718:10726   */\n  dup4\n    /* \"#utility.yul\":10715:10716   */\n  0x02\n    /* \"#utility.yul\":10711:10727   */\n  exp\n    /* \"#utility.yul\":10702:10727   */\n  swap2\n  pop\n    /* \"#utility.yul\":10753:10756   */\n  dup5\n    /* \"#utility.yul\":10746:10751   */\n  dup3\n    /* \"#utility.yul\":10743:10757   */\n  gt\n    /* \"#utility.yul\":10740:10780   */\n  iszero\n  tag_218\n  jumpi\n    /* \"#utility.yul\":10760:10778   */\n  tag_219\n  tag_84\n  jump\t// in\ntag_219:\n    /* \"#utility.yul\":10740:10780   */\ntag_218:\n    /* \"#utility.yul\":10793:10798   */\n  pop\n  jump(tag_210)\n    /* \"#utility.yul\":10531:10808   */\ntag_213:\n  pop\n    /* \"#utility.yul\":10917:10919   */\n  0x20\n    /* \"#utility.yul\":10907:10915   */\n  dup4\n    /* \"#utility.yul\":10904:10920   */\n  lt\n    /* \"#utility.yul\":10898:10901   */\n  0x0133\n    /* \"#utility.yul\":10892:10896   */\n  dup4\n    /* \"#utility.yul\":10889:10902   */\n  lt\n    /* \"#utility.yul\":10885:10921   */\n  and\n    /* \"#utility.yul\":10867:10869   */\n  0x4e\n    /* \"#utility.yul\":10857:10865   */\n  dup5\n    /* \"#utility.yul\":10854:10870   */\n  lt\n    /* \"#utility.yul\":10849:10851   */\n  0x0b\n    /* \"#utility.yul\":10843:10847   */\n  dup5\n    /* \"#utility.yul\":10840:10852   */\n  lt\n    /* \"#utility.yul\":10836:10871   */\n  and\n    /* \"#utility.yul\":10820:10931   */\n  or\n    /* \"#utility.yul\":10817:11063   */\n  iszero\n  tag_220\n  jumpi\n    /* \"#utility.yul\":10973:10981   */\n  dup3\n    /* \"#utility.yul\":10967:10971   */\n  dup3\n    /* \"#utility.yul\":10963:10982   */\n  exp\n    /* \"#utility.yul\":10954:10982   */\n  swap1\n  pop\n    /* \"#utility.yul\":11008:11011   */\n  dup4\n    /* \"#utility.yul\":11001:11006   */\n  dup2\n    /* \"#utility.yul\":10998:11012   */\n  gt\n    /* \"#utility.yul\":10995:11035   */\n  iszero\n  tag_221\n  jumpi\n    /* \"#utility.yul\":11015:11033   */\n  tag_222\n  tag_84\n  jump\t// in\ntag_222:\n    /* \"#utility.yul\":10995:11035   */\ntag_221:\n    /* \"#utility.yul\":11048:11053   */\n  jump(tag_210)\n    /* \"#utility.yul\":10817:11063   */\ntag_220:\n    /* \"#utility.yul\":11088:11130   */\n  tag_223\n    /* \"#utility.yul\":11126:11129   */\n  dup5\n    /* \"#utility.yul\":11116:11124   */\n  dup5\n    /* \"#utility.yul\":11110:11114   */\n  dup5\n    /* \"#utility.yul\":11107:11108   */\n  0x01\n    /* \"#utility.yul\":11088:11130   */\n  tag_86\n  jump\t// in\ntag_223:\n    /* \"#utility.yul\":11073:11130   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":11162:11166   */\n  dup2\n    /* \"#utility.yul\":11157:11160   */\n  dup5\n    /* \"#utility.yul\":11153:11167   */\n  div\n    /* \"#utility.yul\":11146:11151   */\n  dup2\n    /* \"#utility.yul\":11143:11168   */\n  gt\n    /* \"#utility.yul\":11140:11191   */\n  iszero\n  tag_224\n  jumpi\n    /* \"#utility.yul\":11171:11189   */\n  tag_225\n  tag_84\n  jump\t// in\ntag_225:\n    /* \"#utility.yul\":11140:11191   */\ntag_224:\n    /* \"#utility.yul\":11220:11224   */\n  dup2\n    /* \"#utility.yul\":11213:11218   */\n  dup2\n    /* \"#utility.yul\":11209:11225   */\n  mul\n    /* \"#utility.yul\":11200:11225   */\n  swap1\n  pop\n    /* \"#utility.yul\":10158:11231   */\ntag_210:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11237:11522   */\ntag_15:\n    /* \"#utility.yul\":11297:11302   */\n  0x00\n    /* \"#utility.yul\":11321:11344   */\n  tag_227\n    /* \"#utility.yul\":11339:11343   */\n  dup3\n    /* \"#utility.yul\":11321:11344   */\n  tag_63\n  jump\t// in\ntag_227:\n    /* \"#utility.yul\":11313:11344   */\n  swap2\n  pop\n    /* \"#utility.yul\":11365:11392   */\n  tag_228\n    /* \"#utility.yul\":11383:11391   */\n  dup4\n    /* \"#utility.yul\":11365:11392   */\n  tag_63\n  jump\t// in\ntag_228:\n    /* \"#utility.yul\":11353:11392   */\n  swap3\n  pop\n    /* \"#utility.yul\":11411:11515   */\n  tag_229\n    /* \"#utility.yul\":11448:11514   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":11438:11446   */\n  dup5\n    /* \"#utility.yul\":11432:11436   */\n  dup5\n    /* \"#utility.yul\":11411:11515   */\n  tag_87\n  jump\t// in\ntag_229:\n    /* \"#utility.yul\":11402:11515   */\n  swap1\n  pop\n    /* \"#utility.yul\":11237:11522   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11528:11938   */\ntag_17:\n    /* \"#utility.yul\":11568:11575   */\n  0x00\n    /* \"#utility.yul\":11591:11611   */\n  tag_231\n    /* \"#utility.yul\":11609:11610   */\n  dup3\n    /* \"#utility.yul\":11591:11611   */\n  tag_63\n  jump\t// in\ntag_231:\n    /* \"#utility.yul\":11586:11611   */\n  swap2\n  pop\n    /* \"#utility.yul\":11625:11645   */\n  tag_232\n    /* \"#utility.yul\":11643:11644   */\n  dup4\n    /* \"#utility.yul\":11625:11645   */\n  tag_63\n  jump\t// in\ntag_232:\n    /* \"#utility.yul\":11620:11645   */\n  swap3\n  pop\n    /* \"#utility.yul\":11680:11681   */\n  dup3\n    /* \"#utility.yul\":11677:11678   */\n  dup3\n    /* \"#utility.yul\":11673:11682   */\n  mul\n    /* \"#utility.yul\":11702:11732   */\n  tag_233\n    /* \"#utility.yul\":11720:11731   */\n  dup2\n    /* \"#utility.yul\":11702:11732   */\n  tag_63\n  jump\t// in\ntag_233:\n    /* \"#utility.yul\":11691:11732   */\n  swap2\n  pop\n    /* \"#utility.yul\":11881:11882   */\n  dup3\n    /* \"#utility.yul\":11872:11879   */\n  dup3\n    /* \"#utility.yul\":11868:11883   */\n  div\n    /* \"#utility.yul\":11865:11866   */\n  dup5\n    /* \"#utility.yul\":11862:11884   */\n  eq\n    /* \"#utility.yul\":11842:11843   */\n  dup4\n    /* \"#utility.yul\":11835:11844   */\n  iszero\n    /* \"#utility.yul\":11815:11898   */\n  or\n    /* \"#utility.yul\":11792:11931   */\n  tag_234\n  jumpi\n    /* \"#utility.yul\":11911:11929   */\n  tag_235\n  tag_84\n  jump\t// in\ntag_235:\n    /* \"#utility.yul\":11792:11931   */\ntag_234:\n    /* \"#utility.yul\":11576:11938   */\n  pop\n    /* \"#utility.yul\":11528:11938   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":11944:12070   */\ntag_88:\n    /* \"#utility.yul\":11981:11988   */\n  0x00\n    /* \"#utility.yul\":12021:12063   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":12014:12019   */\n  dup3\n    /* \"#utility.yul\":12010:12064   */\n  and\n    /* \"#utility.yul\":11999:12064   */\n  swap1\n  pop\n    /* \"#utility.yul\":11944:12070   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12076:12172   */\ntag_89:\n    /* \"#utility.yul\":12113:12120   */\n  0x00\n    /* \"#utility.yul\":12142:12166   */\n  tag_238\n    /* \"#utility.yul\":12160:12165   */\n  dup3\n    /* \"#utility.yul\":12142:12166   */\n  tag_88\n  jump\t// in\ntag_238:\n    /* \"#utility.yul\":12131:12166   */\n  swap1\n  pop\n    /* \"#utility.yul\":12076:12172   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12178:12296   */\ntag_90:\n    /* \"#utility.yul\":12265:12289   */\n  tag_240\n    /* \"#utility.yul\":12283:12288   */\n  dup2\n    /* \"#utility.yul\":12265:12289   */\n  tag_89\n  jump\t// in\ntag_240:\n    /* \"#utility.yul\":12260:12263   */\n  dup3\n    /* \"#utility.yul\":12253:12290   */\n  mstore\n    /* \"#utility.yul\":12178:12296   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12302:12524   */\ntag_26:\n    /* \"#utility.yul\":12395:12399   */\n  0x00\n    /* \"#utility.yul\":12433:12435   */\n  0x20\n    /* \"#utility.yul\":12422:12431   */\n  dup3\n    /* \"#utility.yul\":12418:12436   */\n  add\n    /* \"#utility.yul\":12410:12436   */\n  swap1\n  pop\n    /* \"#utility.yul\":12446:12517   */\n  tag_242\n    /* \"#utility.yul\":12514:12515   */\n  0x00\n    /* \"#utility.yul\":12503:12512   */\n  dup4\n    /* \"#utility.yul\":12499:12516   */\n  add\n    /* \"#utility.yul\":12490:12496   */\n  dup5\n    /* \"#utility.yul\":12446:12517   */\n  tag_90\n  jump\t// in\ntag_242:\n    /* \"#utility.yul\":12302:12524   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12530:12721   */\ntag_39:\n    /* \"#utility.yul\":12570:12573   */\n  0x00\n    /* \"#utility.yul\":12589:12609   */\n  tag_244\n    /* \"#utility.yul\":12607:12608   */\n  dup3\n    /* \"#utility.yul\":12589:12609   */\n  tag_63\n  jump\t// in\ntag_244:\n    /* \"#utility.yul\":12584:12609   */\n  swap2\n  pop\n    /* \"#utility.yul\":12623:12643   */\n  tag_245\n    /* \"#utility.yul\":12641:12642   */\n  dup4\n    /* \"#utility.yul\":12623:12643   */\n  tag_63\n  jump\t// in\ntag_245:\n    /* \"#utility.yul\":12618:12643   */\n  swap3\n  pop\n    /* \"#utility.yul\":12666:12667   */\n  dup3\n    /* \"#utility.yul\":12663:12664   */\n  dup3\n    /* \"#utility.yul\":12659:12668   */\n  add\n    /* \"#utility.yul\":12652:12668   */\n  swap1\n  pop\n    /* \"#utility.yul\":12687:12690   */\n  dup1\n    /* \"#utility.yul\":12684:12685   */\n  dup3\n    /* \"#utility.yul\":12681:12691   */\n  gt\n    /* \"#utility.yul\":12678:12714   */\n  iszero\n  tag_246\n  jumpi\n    /* \"#utility.yul\":12694:12712   */\n  tag_247\n  tag_84\n  jump\t// in\ntag_247:\n    /* \"#utility.yul\":12678:12714   */\ntag_246:\n    /* \"#utility.yul\":12530:12721   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12727:12845   */\ntag_91:\n    /* \"#utility.yul\":12814:12838   */\n  tag_249\n    /* \"#utility.yul\":12832:12837   */\n  dup2\n    /* \"#utility.yul\":12814:12838   */\n  tag_63\n  jump\t// in\ntag_249:\n    /* \"#utility.yul\":12809:12812   */\n  dup3\n    /* \"#utility.yul\":12802:12839   */\n  mstore\n    /* \"#utility.yul\":12727:12845   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":12851:13293   */\ntag_43:\n    /* \"#utility.yul\":13000:13004   */\n  0x00\n    /* \"#utility.yul\":13038:13040   */\n  0x60\n    /* \"#utility.yul\":13027:13036   */\n  dup3\n    /* \"#utility.yul\":13023:13041   */\n  add\n    /* \"#utility.yul\":13015:13041   */\n  swap1\n  pop\n    /* \"#utility.yul\":13051:13122   */\n  tag_251\n    /* \"#utility.yul\":13119:13120   */\n  0x00\n    /* \"#utility.yul\":13108:13117   */\n  dup4\n    /* \"#utility.yul\":13104:13121   */\n  add\n    /* \"#utility.yul\":13095:13101   */\n  dup7\n    /* \"#utility.yul\":13051:13122   */\n  tag_90\n  jump\t// in\ntag_251:\n    /* \"#utility.yul\":13132:13204   */\n  tag_252\n    /* \"#utility.yul\":13200:13202   */\n  0x20\n    /* \"#utility.yul\":13189:13198   */\n  dup4\n    /* \"#utility.yul\":13185:13203   */\n  add\n    /* \"#utility.yul\":13176:13182   */\n  dup6\n    /* \"#utility.yul\":13132:13204   */\n  tag_91\n  jump\t// in\ntag_252:\n    /* \"#utility.yul\":13214:13286   */\n  tag_253\n    /* \"#utility.yul\":13282:13284   */\n  0x40\n    /* \"#utility.yul\":13271:13280   */\n  dup4\n    /* \"#utility.yul\":13267:13285   */\n  add\n    /* \"#utility.yul\":13258:13264   */\n  dup5\n    /* \"#utility.yul\":13214:13286   */\n  tag_91\n  jump\t// in\ntag_253:\n    /* \"#utility.yul\":12851:13293   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":13299:13521   */\ntag_47:\n    /* \"#utility.yul\":13392:13396   */\n  0x00\n    /* \"#utility.yul\":13430:13432   */\n  0x20\n    /* \"#utility.yul\":13419:13428   */\n  dup3\n    /* \"#utility.yul\":13415:13433   */\n  add\n    /* \"#utility.yul\":13407:13433   */\n  swap1\n  pop\n    /* \"#utility.yul\":13443:13514   */\n  tag_255\n    /* \"#utility.yul\":13511:13512   */\n  0x00\n    /* \"#utility.yul\":13500:13509   */\n  dup4\n    /* \"#utility.yul\":13496:13513   */\n  add\n    /* \"#utility.yul\":13487:13493   */\n  dup5\n    /* \"#utility.yul\":13443:13514   */\n  tag_91\n  jump\t// in\ntag_255:\n    /* \"#utility.yul\":13299:13521   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"sBNB_flattened.sol\":34115:35350  contract sAsset is ERC20, AccessControl {... */\ntag_21:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"sBNB_flattened.sol\":34115:35350  contract sAsset is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x248a9ca3\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x282c51f3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"sBNB_flattened.sol\":15091:15293  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":24960:25049  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":27179:27365  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":26030:26127  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":27925:28169  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":16336:16456  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_8:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":34294:34356  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_9:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":16752:16888  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"sBNB_flattened.sol\":35258:35348  function decimals() public view virtual override returns (uint8) {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":17854:18099  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      stop\n        /* \"sBNB_flattened.sol\":34938:35089  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        ... */\n    tag_13:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"sBNB_flattened.sol\":26185:26301  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      tag_76\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":15380:15516  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":25162:25255  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":35095:35252  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        ... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      tag_87\n      jump\t// in\n    tag_85:\n      stop\n        /* \"sBNB_flattened.sol\":14713:14762  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":26496:26674  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":34226:34288  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_20:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":17168:17306  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"sBNB_flattened.sol\":26732:26872  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"sBNB_flattened.sol\":15091:15293  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_29:\n        /* \"sBNB_flattened.sol\":15176:15180  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":15214:15246  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"sBNB_flattened.sol\":15199:15246  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"sBNB_flattened.sol\":15199:15210  interfaceId */\n      dup3\n        /* \"sBNB_flattened.sol\":15199:15246  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"sBNB_flattened.sol\":15199:15286  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_107\n      jumpi\n      pop\n        /* \"sBNB_flattened.sol\":15250:15286  super.supportsInterface(interfaceId) */\n      tag_108\n        /* \"sBNB_flattened.sol\":15274:15285  interfaceId */\n      dup3\n        /* \"sBNB_flattened.sol\":15250:15273  super.supportsInterface */\n      tag_109\n        /* \"sBNB_flattened.sol\":15250:15286  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_108:\n        /* \"sBNB_flattened.sol\":15199:15286  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_107:\n        /* \"sBNB_flattened.sol\":15192:15286  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":15091:15293  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":24960:25049  function name() public view virtual returns (string memory) {... */\n    tag_33:\n        /* \"sBNB_flattened.sol\":25005:25018  string memory */\n      0x60\n        /* \"sBNB_flattened.sol\":25037:25042  _name */\n      0x03\n        /* \"sBNB_flattened.sol\":25030:25042  return _name */\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_112\n      jump\t// in\n    tag_113:\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_115\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_114)\n    tag_115:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_116:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_116\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_114:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":24960:25049  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"sBNB_flattened.sol\":27179:27365  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_39:\n        /* \"sBNB_flattened.sol\":27252:27256  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":27268:27281  address owner */\n      dup1\n        /* \"sBNB_flattened.sol\":27284:27296  _msgSender() */\n      tag_118\n        /* \"sBNB_flattened.sol\":27284:27294  _msgSender */\n      tag_119\n        /* \"sBNB_flattened.sol\":27284:27296  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"sBNB_flattened.sol\":27268:27296  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":27306:27337  _approve(owner, spender, value) */\n      tag_120\n        /* \"sBNB_flattened.sol\":27315:27320  owner */\n      dup2\n        /* \"sBNB_flattened.sol\":27322:27329  spender */\n      dup6\n        /* \"sBNB_flattened.sol\":27331:27336  value */\n      dup6\n        /* \"sBNB_flattened.sol\":27306:27314  _approve */\n      tag_121\n        /* \"sBNB_flattened.sol\":27306:27337  _approve(owner, spender, value) */\n      jump\t// in\n    tag_120:\n        /* \"sBNB_flattened.sol\":27354:27358  true */\n      0x01\n        /* \"sBNB_flattened.sol\":27347:27358  return true */\n      swap2\n      pop\n      pop\n        /* \"sBNB_flattened.sol\":27179:27365  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":26030:26127  function totalSupply() public view virtual returns (uint256) {... */\n    tag_42:\n        /* \"sBNB_flattened.sol\":26082:26089  uint256 */\n      0x00\n        /* \"sBNB_flattened.sol\":26108:26120  _totalSupply */\n      sload(0x02)\n        /* \"sBNB_flattened.sol\":26101:26120  return _totalSupply */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":26030:26127  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"sBNB_flattened.sol\":27925:28169  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_48:\n        /* \"sBNB_flattened.sol\":28012:28016  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":28028:28043  address spender */\n      dup1\n        /* \"sBNB_flattened.sol\":28046:28058  _msgSender() */\n      tag_124\n        /* \"sBNB_flattened.sol\":28046:28056  _msgSender */\n      tag_119\n        /* \"sBNB_flattened.sol\":28046:28058  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"sBNB_flattened.sol\":28028:28058  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":28068:28105  _spendAllowance(from, spender, value) */\n      tag_125\n        /* \"sBNB_flattened.sol\":28084:28088  from */\n      dup6\n        /* \"sBNB_flattened.sol\":28090:28097  spender */\n      dup3\n        /* \"sBNB_flattened.sol\":28099:28104  value */\n      dup6\n        /* \"sBNB_flattened.sol\":28068:28083  _spendAllowance */\n      tag_126\n        /* \"sBNB_flattened.sol\":28068:28105  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_125:\n        /* \"sBNB_flattened.sol\":28115:28141  _transfer(from, to, value) */\n      tag_127\n        /* \"sBNB_flattened.sol\":28125:28129  from */\n      dup6\n        /* \"sBNB_flattened.sol\":28131:28133  to */\n      dup6\n        /* \"sBNB_flattened.sol\":28135:28140  value */\n      dup6\n        /* \"sBNB_flattened.sol\":28115:28124  _transfer */\n      tag_128\n        /* \"sBNB_flattened.sol\":28115:28141  _transfer(from, to, value) */\n      jump\t// in\n    tag_127:\n        /* \"sBNB_flattened.sol\":28158:28162  true */\n      0x01\n        /* \"sBNB_flattened.sol\":28151:28162  return true */\n      swap2\n      pop\n      pop\n        /* \"sBNB_flattened.sol\":27925:28169  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":16336:16456  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_53:\n        /* \"sBNB_flattened.sol\":16401:16408  bytes32 */\n      0x00\n        /* \"sBNB_flattened.sol\":16427:16433  _roles */\n      0x05\n        /* \"sBNB_flattened.sol\":16427:16439  _roles[role] */\n      0x00\n        /* \"sBNB_flattened.sol\":16434:16438  role */\n      dup4\n        /* \"sBNB_flattened.sol\":16427:16439  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":16427:16449  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"sBNB_flattened.sol\":16420:16449  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":16336:16456  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":34294:34356  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n    tag_57:\n        /* \"sBNB_flattened.sol\":34332:34356  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"sBNB_flattened.sol\":34294:34356  bytes32 public constant BURNER_ROLE = keccak256(\"BURNER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"sBNB_flattened.sol\":16752:16888  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"sBNB_flattened.sol\":16826:16844  getRoleAdmin(role) */\n      tag_130\n        /* \"sBNB_flattened.sol\":16839:16843  role */\n      dup3\n        /* \"sBNB_flattened.sol\":16826:16838  getRoleAdmin */\n      tag_53\n        /* \"sBNB_flattened.sol\":16826:16844  getRoleAdmin(role) */\n      jump\t// in\n    tag_130:\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      tag_132\n        /* \"sBNB_flattened.sol\":15001:15005  role */\n      dup2\n        /* \"sBNB_flattened.sol\":14990:15000  _checkRole */\n      tag_133\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      jump\t// in\n    tag_132:\n        /* \"sBNB_flattened.sol\":16856:16881  _grantRole(role, account) */\n      tag_135\n        /* \"sBNB_flattened.sol\":16867:16871  role */\n      dup4\n        /* \"sBNB_flattened.sol\":16873:16880  account */\n      dup4\n        /* \"sBNB_flattened.sol\":16856:16866  _grantRole */\n      tag_136\n        /* \"sBNB_flattened.sol\":16856:16881  _grantRole(role, account) */\n      jump\t// in\n    tag_135:\n      pop\n        /* \"sBNB_flattened.sol\":16752:16888  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":35258:35348  function decimals() public view virtual override returns (uint8) {... */\n    tag_64:\n        /* \"sBNB_flattened.sol\":35316:35321  uint8 */\n      0x00\n        /* \"sBNB_flattened.sol\":35340:35341  8 */\n      0x08\n        /* \"sBNB_flattened.sol\":35333:35341  return 8 */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":35258:35348  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"sBNB_flattened.sol\":17854:18099  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_69:\n        /* \"sBNB_flattened.sol\":17969:17981  _msgSender() */\n      tag_139\n        /* \"sBNB_flattened.sol\":17969:17979  _msgSender */\n      tag_119\n        /* \"sBNB_flattened.sol\":17969:17981  _msgSender() */\n      jump\t// in\n    tag_139:\n        /* \"sBNB_flattened.sol\":17947:17981  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":17947:17965  callerConfirmation */\n      dup2\n        /* \"sBNB_flattened.sol\":17947:17981  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"sBNB_flattened.sol\":17943:18045  if (callerConfirmation != _msgSender()) {... */\n      tag_140\n      jumpi\n        /* \"sBNB_flattened.sol\":18004:18034  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":17943:18045  if (callerConfirmation != _msgSender()) {... */\n    tag_140:\n        /* \"sBNB_flattened.sol\":18055:18092  _revokeRole(role, callerConfirmation) */\n      tag_141\n        /* \"sBNB_flattened.sol\":18067:18071  role */\n      dup3\n        /* \"sBNB_flattened.sol\":18073:18091  callerConfirmation */\n      dup3\n        /* \"sBNB_flattened.sol\":18055:18066  _revokeRole */\n      tag_142\n        /* \"sBNB_flattened.sol\":18055:18092  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_141:\n      pop\n        /* \"sBNB_flattened.sol\":17854:18099  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":34938:35089  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        ... */\n    tag_72:\n        /* \"sBNB_flattened.sol\":34264:34288  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      tag_144\n        /* \"sBNB_flattened.sol\":15001:15005  role */\n      dup2\n        /* \"sBNB_flattened.sol\":14990:15000  _checkRole */\n      tag_133\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      jump\t// in\n    tag_144:\n        /* \"sBNB_flattened.sol\":35029:35046  _mint(to, amount) */\n      tag_146\n        /* \"sBNB_flattened.sol\":35035:35037  to */\n      dup4\n        /* \"sBNB_flattened.sol\":35039:35045  amount */\n      dup4\n        /* \"sBNB_flattened.sol\":35029:35034  _mint */\n      tag_147\n        /* \"sBNB_flattened.sol\":35029:35046  _mint(to, amount) */\n      jump\t// in\n    tag_146:\n        /* \"sBNB_flattened.sol\":35061:35082  mintToken(to, amount) */\n      0x79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e\n        /* \"sBNB_flattened.sol\":35071:35073  to */\n      dup4\n        /* \"sBNB_flattened.sol\":35075:35081  amount */\n      dup4\n        /* \"sBNB_flattened.sol\":35061:35082  mintToken(to, amount) */\n      mload(0x40)\n      tag_148\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"sBNB_flattened.sol\":34938:35089  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {        ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":26185:26301  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_76:\n        /* \"sBNB_flattened.sol\":26250:26257  uint256 */\n      0x00\n        /* \"sBNB_flattened.sol\":26276:26285  _balances */\n      dup1\n        /* \"sBNB_flattened.sol\":26276:26294  _balances[account] */\n      0x00\n        /* \"sBNB_flattened.sol\":26286:26293  account */\n      dup4\n        /* \"sBNB_flattened.sol\":26276:26294  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"sBNB_flattened.sol\":26269:26294  return _balances[account] */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":26185:26301  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":15380:15516  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_80:\n        /* \"sBNB_flattened.sol\":15457:15461  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":15480:15486  _roles */\n      0x05\n        /* \"sBNB_flattened.sol\":15480:15492  _roles[role] */\n      0x00\n        /* \"sBNB_flattened.sol\":15487:15491  role */\n      dup5\n        /* \"sBNB_flattened.sol\":15480:15492  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":15480:15500  _roles[role].hasRole */\n      0x00\n      add\n        /* \"sBNB_flattened.sol\":15480:15509  _roles[role].hasRole[account] */\n      0x00\n        /* \"sBNB_flattened.sol\":15501:15508  account */\n      dup4\n        /* \"sBNB_flattened.sol\":15480:15509  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"sBNB_flattened.sol\":15473:15509  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":15380:15516  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":25162:25255  function symbol() public view virtual returns (string memory) {... */\n    tag_83:\n        /* \"sBNB_flattened.sol\":25209:25222  string memory */\n      0x60\n        /* \"sBNB_flattened.sol\":25241:25248  _symbol */\n      0x04\n        /* \"sBNB_flattened.sol\":25234:25248  return _symbol */\n      dup1\n      sload\n      tag_153\n      swap1\n      tag_112\n      jump\t// in\n    tag_153:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_154\n      swap1\n      tag_112\n      jump\t// in\n    tag_154:\n      dup1\n      iszero\n      tag_155\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_156\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_155)\n    tag_156:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_157:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_157\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":25162:25255  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"sBNB_flattened.sol\":35095:35252  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        ... */\n    tag_87:\n        /* \"sBNB_flattened.sol\":34332:34356  keccak256(\"BURNER_ROLE\") */\n      0x3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      tag_159\n        /* \"sBNB_flattened.sol\":15001:15005  role */\n      dup2\n        /* \"sBNB_flattened.sol\":14990:15000  _checkRole */\n      tag_133\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      jump\t// in\n    tag_159:\n        /* \"sBNB_flattened.sol\":35188:35207  _burn(from, amount) */\n      tag_161\n        /* \"sBNB_flattened.sol\":35194:35198  from */\n      dup4\n        /* \"sBNB_flattened.sol\":35200:35206  amount */\n      dup4\n        /* \"sBNB_flattened.sol\":35188:35193  _burn */\n      tag_162\n        /* \"sBNB_flattened.sol\":35188:35207  _burn(from, amount) */\n      jump\t// in\n    tag_161:\n        /* \"sBNB_flattened.sol\":35222:35245  burnToken(from, amount) */\n      0xd1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c5\n        /* \"sBNB_flattened.sol\":35232:35236  from */\n      dup4\n        /* \"sBNB_flattened.sol\":35238:35244  amount */\n      dup4\n        /* \"sBNB_flattened.sol\":35222:35245  burnToken(from, amount) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"sBNB_flattened.sol\":35095:35252  function burn(address from, uint256 amount) external onlyRole(BURNER_ROLE) {        ... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":14713:14762  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_89:\n        /* \"sBNB_flattened.sol\":14758:14762  0x00 */\n      0x00\n        /* \"sBNB_flattened.sol\":14713:14762  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"sBNB_flattened.sol\":26496:26674  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_93:\n        /* \"sBNB_flattened.sol\":26565:26569  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":26581:26594  address owner */\n      dup1\n        /* \"sBNB_flattened.sol\":26597:26609  _msgSender() */\n      tag_165\n        /* \"sBNB_flattened.sol\":26597:26607  _msgSender */\n      tag_119\n        /* \"sBNB_flattened.sol\":26597:26609  _msgSender() */\n      jump\t// in\n    tag_165:\n        /* \"sBNB_flattened.sol\":26581:26609  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":26619:26646  _transfer(owner, to, value) */\n      tag_166\n        /* \"sBNB_flattened.sol\":26629:26634  owner */\n      dup2\n        /* \"sBNB_flattened.sol\":26636:26638  to */\n      dup6\n        /* \"sBNB_flattened.sol\":26640:26645  value */\n      dup6\n        /* \"sBNB_flattened.sol\":26619:26628  _transfer */\n      tag_128\n        /* \"sBNB_flattened.sol\":26619:26646  _transfer(owner, to, value) */\n      jump\t// in\n    tag_166:\n        /* \"sBNB_flattened.sol\":26663:26667  true */\n      0x01\n        /* \"sBNB_flattened.sol\":26656:26667  return true */\n      swap2\n      pop\n      pop\n        /* \"sBNB_flattened.sol\":26496:26674  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":34226:34288  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_96:\n        /* \"sBNB_flattened.sol\":34264:34288  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"sBNB_flattened.sol\":34226:34288  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"sBNB_flattened.sol\":17168:17306  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_100:\n        /* \"sBNB_flattened.sol\":17243:17261  getRoleAdmin(role) */\n      tag_167\n        /* \"sBNB_flattened.sol\":17256:17260  role */\n      dup3\n        /* \"sBNB_flattened.sol\":17243:17255  getRoleAdmin */\n      tag_53\n        /* \"sBNB_flattened.sol\":17243:17261  getRoleAdmin(role) */\n      jump\t// in\n    tag_167:\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      tag_169\n        /* \"sBNB_flattened.sol\":15001:15005  role */\n      dup2\n        /* \"sBNB_flattened.sol\":14990:15000  _checkRole */\n      tag_133\n        /* \"sBNB_flattened.sol\":14990:15006  _checkRole(role) */\n      jump\t// in\n    tag_169:\n        /* \"sBNB_flattened.sol\":17273:17299  _revokeRole(role, account) */\n      tag_171\n        /* \"sBNB_flattened.sol\":17285:17289  role */\n      dup4\n        /* \"sBNB_flattened.sol\":17291:17298  account */\n      dup4\n        /* \"sBNB_flattened.sol\":17273:17284  _revokeRole */\n      tag_142\n        /* \"sBNB_flattened.sol\":17273:17299  _revokeRole(role, account) */\n      jump\t// in\n    tag_171:\n      pop\n        /* \"sBNB_flattened.sol\":17168:17306  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":26732:26872  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_104:\n        /* \"sBNB_flattened.sol\":26812:26819  uint256 */\n      0x00\n        /* \"sBNB_flattened.sol\":26838:26849  _allowances */\n      0x01\n        /* \"sBNB_flattened.sol\":26838:26856  _allowances[owner] */\n      0x00\n        /* \"sBNB_flattened.sol\":26850:26855  owner */\n      dup5\n        /* \"sBNB_flattened.sol\":26838:26856  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":26838:26865  _allowances[owner][spender] */\n      0x00\n        /* \"sBNB_flattened.sol\":26857:26864  spender */\n      dup4\n        /* \"sBNB_flattened.sol\":26838:26865  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"sBNB_flattened.sol\":26831:26865  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":26732:26872  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":1663:1809  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_109:\n        /* \"sBNB_flattened.sol\":1739:1743  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":1777:1802  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"sBNB_flattened.sol\":1762:1802  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"sBNB_flattened.sol\":1762:1773  interfaceId */\n      dup3\n        /* \"sBNB_flattened.sol\":1762:1802  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"sBNB_flattened.sol\":1755:1802  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":1663:1809  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":12345:12441  function _msgSender() internal view virtual returns (address) {... */\n    tag_119:\n        /* \"sBNB_flattened.sol\":12398:12405  address */\n      0x00\n        /* \"sBNB_flattened.sol\":12424:12434  msg.sender */\n      caller\n        /* \"sBNB_flattened.sol\":12417:12434  return msg.sender */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":12345:12441  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"sBNB_flattened.sol\":31875:32003  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_121:\n        /* \"sBNB_flattened.sol\":31959:31996  _approve(owner, spender, value, true) */\n      tag_176\n        /* \"sBNB_flattened.sol\":31968:31973  owner */\n      dup4\n        /* \"sBNB_flattened.sol\":31975:31982  spender */\n      dup4\n        /* \"sBNB_flattened.sol\":31984:31989  value */\n      dup4\n        /* \"sBNB_flattened.sol\":31991:31995  true */\n      0x01\n        /* \"sBNB_flattened.sol\":31959:31967  _approve */\n      tag_177\n        /* \"sBNB_flattened.sol\":31959:31996  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_176:\n        /* \"sBNB_flattened.sol\":31875:32003  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":33549:34026  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_126:\n        /* \"sBNB_flattened.sol\":33648:33672  uint256 currentAllowance */\n      0x00\n        /* \"sBNB_flattened.sol\":33675:33700  allowance(owner, spender) */\n      tag_179\n        /* \"sBNB_flattened.sol\":33685:33690  owner */\n      dup5\n        /* \"sBNB_flattened.sol\":33692:33699  spender */\n      dup5\n        /* \"sBNB_flattened.sol\":33675:33684  allowance */\n      tag_104\n        /* \"sBNB_flattened.sol\":33675:33700  allowance(owner, spender) */\n      jump\t// in\n    tag_179:\n        /* \"sBNB_flattened.sol\":33648:33700  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":33734:33751  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"sBNB_flattened.sol\":33714:33730  currentAllowance */\n      dup2\n        /* \"sBNB_flattened.sol\":33714:33751  currentAllowance != type(uint256).max */\n      eq\n        /* \"sBNB_flattened.sol\":33710:34020  if (currentAllowance != type(uint256).max) {... */\n      tag_180\n      jumpi\n        /* \"sBNB_flattened.sol\":33790:33795  value */\n      dup2\n        /* \"sBNB_flattened.sol\":33771:33787  currentAllowance */\n      dup2\n        /* \"sBNB_flattened.sol\":33771:33795  currentAllowance < value */\n      lt\n        /* \"sBNB_flattened.sol\":33767:33897  if (currentAllowance < value) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"sBNB_flattened.sol\":33849:33856  spender */\n      dup3\n        /* \"sBNB_flattened.sol\":33858:33874  currentAllowance */\n      dup2\n        /* \"sBNB_flattened.sol\":33876:33881  value */\n      dup4\n        /* \"sBNB_flattened.sol\":33822:33882  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":33767:33897  if (currentAllowance < value) {... */\n    tag_181:\n        /* \"sBNB_flattened.sol\":33938:33995  _approve(owner, spender, currentAllowance - value, false) */\n      tag_184\n        /* \"sBNB_flattened.sol\":33947:33952  owner */\n      dup5\n        /* \"sBNB_flattened.sol\":33954:33961  spender */\n      dup5\n        /* \"sBNB_flattened.sol\":33982:33987  value */\n      dup5\n        /* \"sBNB_flattened.sol\":33963:33979  currentAllowance */\n      dup5\n        /* \"sBNB_flattened.sol\":33963:33987  currentAllowance - value */\n      sub\n        /* \"sBNB_flattened.sol\":33989:33994  false */\n      0x00\n        /* \"sBNB_flattened.sol\":33938:33946  _approve */\n      tag_177\n        /* \"sBNB_flattened.sol\":33938:33995  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_184:\n        /* \"sBNB_flattened.sol\":33710:34020  if (currentAllowance != type(uint256).max) {... */\n    tag_180:\n        /* \"sBNB_flattened.sol\":33638:34026  {... */\n      pop\n        /* \"sBNB_flattened.sol\":33549:34026  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":28542:28842  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_128:\n        /* \"sBNB_flattened.sol\":28641:28642  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":28625:28643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":28625:28629  from */\n      dup4\n        /* \"sBNB_flattened.sol\":28625:28643  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":28621:28707  if (from == address(0)) {... */\n      tag_186\n      jumpi\n        /* \"sBNB_flattened.sol\":28693:28694  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":28666:28696  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":28621:28707  if (from == address(0)) {... */\n    tag_186:\n        /* \"sBNB_flattened.sol\":28734:28735  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":28720:28736  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":28720:28722  to */\n      dup3\n        /* \"sBNB_flattened.sol\":28720:28736  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":28716:28802  if (to == address(0)) {... */\n      tag_189\n      jumpi\n        /* \"sBNB_flattened.sol\":28788:28789  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":28759:28791  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":28716:28802  if (to == address(0)) {... */\n    tag_189:\n        /* \"sBNB_flattened.sol\":28811:28835  _update(from, to, value) */\n      tag_191\n        /* \"sBNB_flattened.sol\":28819:28823  from */\n      dup4\n        /* \"sBNB_flattened.sol\":28825:28827  to */\n      dup4\n        /* \"sBNB_flattened.sol\":28829:28834  value */\n      dup4\n        /* \"sBNB_flattened.sol\":28811:28818  _update */\n      tag_192\n        /* \"sBNB_flattened.sol\":28811:28835  _update(from, to, value) */\n      jump\t// in\n    tag_191:\n        /* \"sBNB_flattened.sol\":28542:28842  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":15725:15828  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_133:\n        /* \"sBNB_flattened.sol\":15791:15821  _checkRole(role, _msgSender()) */\n      tag_194\n        /* \"sBNB_flattened.sol\":15802:15806  role */\n      dup2\n        /* \"sBNB_flattened.sol\":15808:15820  _msgSender() */\n      tag_195\n        /* \"sBNB_flattened.sol\":15808:15818  _msgSender */\n      tag_119\n        /* \"sBNB_flattened.sol\":15808:15820  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"sBNB_flattened.sol\":15791:15801  _checkRole */\n      tag_196\n        /* \"sBNB_flattened.sol\":15791:15821  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_194:\n        /* \"sBNB_flattened.sol\":15725:15828  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":18705:19021  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_136:\n        /* \"sBNB_flattened.sol\":18782:18786  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":18803:18825  hasRole(role, account) */\n      tag_198\n        /* \"sBNB_flattened.sol\":18811:18815  role */\n      dup4\n        /* \"sBNB_flattened.sol\":18817:18824  account */\n      dup4\n        /* \"sBNB_flattened.sol\":18803:18810  hasRole */\n      tag_80\n        /* \"sBNB_flattened.sol\":18803:18825  hasRole(role, account) */\n      jump\t// in\n    tag_198:\n        /* \"sBNB_flattened.sol\":18798:19015  if (!hasRole(role, account)) {... */\n      tag_199\n      jumpi\n        /* \"sBNB_flattened.sol\":18873:18877  true */\n      0x01\n        /* \"sBNB_flattened.sol\":18841:18847  _roles */\n      0x05\n        /* \"sBNB_flattened.sol\":18841:18853  _roles[role] */\n      0x00\n        /* \"sBNB_flattened.sol\":18848:18852  role */\n      dup6\n        /* \"sBNB_flattened.sol\":18841:18853  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":18841:18861  _roles[role].hasRole */\n      0x00\n      add\n        /* \"sBNB_flattened.sol\":18841:18870  _roles[role].hasRole[account] */\n      0x00\n        /* \"sBNB_flattened.sol\":18862:18869  account */\n      dup5\n        /* \"sBNB_flattened.sol\":18841:18870  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"sBNB_flattened.sol\":18841:18877  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"sBNB_flattened.sol\":18923:18935  _msgSender() */\n      tag_200\n        /* \"sBNB_flattened.sol\":18923:18933  _msgSender */\n      tag_119\n        /* \"sBNB_flattened.sol\":18923:18935  _msgSender() */\n      jump\t// in\n    tag_200:\n        /* \"sBNB_flattened.sol\":18896:18936  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":18914:18921  account */\n      dup3\n        /* \"sBNB_flattened.sol\":18896:18936  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":18908:18912  role */\n      dup5\n        /* \"sBNB_flattened.sol\":18896:18936  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"sBNB_flattened.sol\":18957:18961  true */\n      0x01\n        /* \"sBNB_flattened.sol\":18950:18961  return true */\n      swap1\n      pop\n      jump(tag_197)\n        /* \"sBNB_flattened.sol\":18798:19015  if (!hasRole(role, account)) {... */\n    tag_199:\n        /* \"sBNB_flattened.sol\":18999:19004  false */\n      0x00\n        /* \"sBNB_flattened.sol\":18992:19004  return false */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":18705:19021  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_197:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":19256:19573  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_142:\n        /* \"sBNB_flattened.sol\":19334:19338  bool */\n      0x00\n        /* \"sBNB_flattened.sol\":19354:19376  hasRole(role, account) */\n      tag_203\n        /* \"sBNB_flattened.sol\":19362:19366  role */\n      dup4\n        /* \"sBNB_flattened.sol\":19368:19375  account */\n      dup4\n        /* \"sBNB_flattened.sol\":19354:19361  hasRole */\n      tag_80\n        /* \"sBNB_flattened.sol\":19354:19376  hasRole(role, account) */\n      jump\t// in\n    tag_203:\n        /* \"sBNB_flattened.sol\":19350:19567  if (hasRole(role, account)) {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"sBNB_flattened.sol\":19424:19429  false */\n      0x00\n        /* \"sBNB_flattened.sol\":19392:19398  _roles */\n      0x05\n        /* \"sBNB_flattened.sol\":19392:19404  _roles[role] */\n      0x00\n        /* \"sBNB_flattened.sol\":19399:19403  role */\n      dup6\n        /* \"sBNB_flattened.sol\":19392:19404  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":19392:19412  _roles[role].hasRole */\n      0x00\n      add\n        /* \"sBNB_flattened.sol\":19392:19421  _roles[role].hasRole[account] */\n      0x00\n        /* \"sBNB_flattened.sol\":19413:19420  account */\n      dup5\n        /* \"sBNB_flattened.sol\":19392:19421  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"sBNB_flattened.sol\":19392:19429  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"sBNB_flattened.sol\":19475:19487  _msgSender() */\n      tag_205\n        /* \"sBNB_flattened.sol\":19475:19485  _msgSender */\n      tag_119\n        /* \"sBNB_flattened.sol\":19475:19487  _msgSender() */\n      jump\t// in\n    tag_205:\n        /* \"sBNB_flattened.sol\":19448:19488  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":19466:19473  account */\n      dup3\n        /* \"sBNB_flattened.sol\":19448:19488  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":19460:19464  role */\n      dup5\n        /* \"sBNB_flattened.sol\":19448:19488  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"sBNB_flattened.sol\":19509:19513  true */\n      0x01\n        /* \"sBNB_flattened.sol\":19502:19513  return true */\n      swap1\n      pop\n      jump(tag_202)\n        /* \"sBNB_flattened.sol\":19350:19567  if (hasRole(role, account)) {... */\n    tag_204:\n        /* \"sBNB_flattened.sol\":19551:19556  false */\n      0x00\n        /* \"sBNB_flattened.sol\":19544:19556  return false */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":19256:19573  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_202:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":30607:30815  function _mint(address account, uint256 value) internal {... */\n    tag_147:\n        /* \"sBNB_flattened.sol\":30696:30697  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":30677:30698  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":30677:30684  account */\n      dup3\n        /* \"sBNB_flattened.sol\":30677:30698  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":30673:30764  if (account == address(0)) {... */\n      tag_208\n      jumpi\n        /* \"sBNB_flattened.sol\":30750:30751  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":30721:30753  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":30673:30764  if (account == address(0)) {... */\n    tag_208:\n        /* \"sBNB_flattened.sol\":30773:30808  _update(address(0), account, value) */\n      tag_210\n        /* \"sBNB_flattened.sol\":30789:30790  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":30793:30800  account */\n      dup4\n        /* \"sBNB_flattened.sol\":30802:30807  value */\n      dup4\n        /* \"sBNB_flattened.sol\":30773:30780  _update */\n      tag_192\n        /* \"sBNB_flattened.sol\":30773:30808  _update(address(0), account, value) */\n      jump\t// in\n    tag_210:\n        /* \"sBNB_flattened.sol\":30607:30815  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":31133:31339  function _burn(address account, uint256 value) internal {... */\n    tag_162:\n        /* \"sBNB_flattened.sol\":31222:31223  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":31203:31224  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":31203:31210  account */\n      dup3\n        /* \"sBNB_flattened.sol\":31203:31224  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":31199:31288  if (account == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"sBNB_flattened.sol\":31274:31275  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":31247:31277  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":31199:31288  if (account == address(0)) {... */\n    tag_212:\n        /* \"sBNB_flattened.sol\":31297:31332  _update(account, address(0), value) */\n      tag_214\n        /* \"sBNB_flattened.sol\":31305:31312  account */\n      dup3\n        /* \"sBNB_flattened.sol\":31322:31323  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":31326:31331  value */\n      dup4\n        /* \"sBNB_flattened.sol\":31297:31304  _update */\n      tag_192\n        /* \"sBNB_flattened.sol\":31297:31332  _update(account, address(0), value) */\n      jump\t// in\n    tag_214:\n        /* \"sBNB_flattened.sol\":31133:31339  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":32835:33267  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_177:\n        /* \"sBNB_flattened.sol\":32964:32965  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":32947:32966  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":32947:32952  owner */\n      dup5\n        /* \"sBNB_flattened.sol\":32947:32966  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":32943:33032  if (owner == address(0)) {... */\n      tag_216\n      jumpi\n        /* \"sBNB_flattened.sol\":33018:33019  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":32989:33021  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_217\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":32943:33032  if (owner == address(0)) {... */\n    tag_216:\n        /* \"sBNB_flattened.sol\":33064:33065  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":33045:33066  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":33045:33052  spender */\n      dup4\n        /* \"sBNB_flattened.sol\":33045:33066  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":33041:33131  if (spender == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"sBNB_flattened.sol\":33117:33118  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":33089:33120  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":33041:33131  if (spender == address(0)) {... */\n    tag_218:\n        /* \"sBNB_flattened.sol\":33170:33175  value */\n      dup2\n        /* \"sBNB_flattened.sol\":33140:33151  _allowances */\n      0x01\n        /* \"sBNB_flattened.sol\":33140:33158  _allowances[owner] */\n      0x00\n        /* \"sBNB_flattened.sol\":33152:33157  owner */\n      dup7\n        /* \"sBNB_flattened.sol\":33140:33158  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":33140:33167  _allowances[owner][spender] */\n      0x00\n        /* \"sBNB_flattened.sol\":33159:33166  spender */\n      dup6\n        /* \"sBNB_flattened.sol\":33140:33167  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":33140:33175  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sBNB_flattened.sol\":33189:33198  emitEvent */\n      dup1\n        /* \"sBNB_flattened.sol\":33185:33261  if (emitEvent) {... */\n      iszero\n      tag_220\n      jumpi\n        /* \"sBNB_flattened.sol\":33235:33242  spender */\n      dup3\n        /* \"sBNB_flattened.sol\":33219:33250  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":33228:33233  owner */\n      dup5\n        /* \"sBNB_flattened.sol\":33219:33250  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"sBNB_flattened.sol\":33244:33249  value */\n      dup5\n        /* \"sBNB_flattened.sol\":33219:33250  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_221\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"sBNB_flattened.sol\":33185:33261  if (emitEvent) {... */\n    tag_220:\n        /* \"sBNB_flattened.sol\":32835:33267  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":29157:30264  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_192:\n        /* \"sBNB_flattened.sol\":29262:29263  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":29246:29264  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":29246:29250  from */\n      dup4\n        /* \"sBNB_flattened.sol\":29246:29264  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":29242:29782  if (from == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"sBNB_flattened.sol\":29398:29403  value */\n      dup1\n        /* \"sBNB_flattened.sol\":29382:29394  _totalSupply */\n      0x02\n      0x00\n        /* \"sBNB_flattened.sol\":29382:29403  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sBNB_flattened.sol\":29242:29782  if (from == address(0)) {... */\n      jump(tag_226)\n    tag_223:\n        /* \"sBNB_flattened.sol\":29434:29453  uint256 fromBalance */\n      0x00\n        /* \"sBNB_flattened.sol\":29456:29465  _balances */\n      dup1\n        /* \"sBNB_flattened.sol\":29456:29471  _balances[from] */\n      0x00\n        /* \"sBNB_flattened.sol\":29466:29470  from */\n      dup6\n        /* \"sBNB_flattened.sol\":29456:29471  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"sBNB_flattened.sol\":29434:29471  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"sBNB_flattened.sol\":29503:29508  value */\n      dup2\n        /* \"sBNB_flattened.sol\":29489:29500  fromBalance */\n      dup2\n        /* \"sBNB_flattened.sol\":29489:29508  fromBalance < value */\n      lt\n        /* \"sBNB_flattened.sol\":29485:29600  if (fromBalance < value) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"sBNB_flattened.sol\":29560:29564  from */\n      dup4\n        /* \"sBNB_flattened.sol\":29566:29577  fromBalance */\n      dup2\n        /* \"sBNB_flattened.sol\":29579:29584  value */\n      dup4\n        /* \"sBNB_flattened.sol\":29535:29585  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_228\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_183\n      jump\t// in\n    tag_228:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":29485:29600  if (fromBalance < value) {... */\n    tag_227:\n        /* \"sBNB_flattened.sol\":29752:29757  value */\n      dup2\n        /* \"sBNB_flattened.sol\":29738:29749  fromBalance */\n      dup2\n        /* \"sBNB_flattened.sol\":29738:29757  fromBalance - value */\n      sub\n        /* \"sBNB_flattened.sol\":29720:29729  _balances */\n      0x00\n        /* \"sBNB_flattened.sol\":29720:29735  _balances[from] */\n      dup1\n        /* \"sBNB_flattened.sol\":29730:29734  from */\n      dup7\n        /* \"sBNB_flattened.sol\":29720:29735  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"sBNB_flattened.sol\":29720:29757  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sBNB_flattened.sol\":29420:29782  {... */\n      pop\n        /* \"sBNB_flattened.sol\":29242:29782  if (from == address(0)) {... */\n    tag_226:\n        /* \"sBNB_flattened.sol\":29810:29811  0 */\n      0x00\n        /* \"sBNB_flattened.sol\":29796:29812  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":29796:29798  to */\n      dup3\n        /* \"sBNB_flattened.sol\":29796:29812  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"sBNB_flattened.sol\":29792:30217  if (to == address(0)) {... */\n      tag_229\n      jumpi\n        /* \"sBNB_flattened.sol\":29975:29980  value */\n      dup1\n        /* \"sBNB_flattened.sol\":29959:29971  _totalSupply */\n      0x02\n      0x00\n        /* \"sBNB_flattened.sol\":29959:29980  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sBNB_flattened.sol\":29792:30217  if (to == address(0)) {... */\n      jump(tag_230)\n    tag_229:\n        /* \"sBNB_flattened.sol\":30187:30192  value */\n      dup1\n        /* \"sBNB_flattened.sol\":30170:30179  _balances */\n      0x00\n        /* \"sBNB_flattened.sol\":30170:30183  _balances[to] */\n      dup1\n        /* \"sBNB_flattened.sol\":30180:30182  to */\n      dup5\n        /* \"sBNB_flattened.sol\":30170:30183  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"sBNB_flattened.sol\":30170:30192  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"sBNB_flattened.sol\":29792:30217  if (to == address(0)) {... */\n    tag_230:\n        /* \"sBNB_flattened.sol\":30247:30249  to */\n      dup2\n        /* \"sBNB_flattened.sol\":30232:30257  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"sBNB_flattened.sol\":30241:30245  from */\n      dup4\n        /* \"sBNB_flattened.sol\":30232:30257  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"sBNB_flattened.sol\":30251:30256  value */\n      dup4\n        /* \"sBNB_flattened.sol\":30232:30257  Transfer(from, to, value) */\n      mload(0x40)\n      tag_231\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"sBNB_flattened.sol\":29157:30264  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"sBNB_flattened.sol\":15958:16155  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_196:\n        /* \"sBNB_flattened.sol\":16046:16068  hasRole(role, account) */\n      tag_233\n        /* \"sBNB_flattened.sol\":16054:16058  role */\n      dup3\n        /* \"sBNB_flattened.sol\":16060:16067  account */\n      dup3\n        /* \"sBNB_flattened.sol\":16046:16053  hasRole */\n      tag_80\n        /* \"sBNB_flattened.sol\":16046:16068  hasRole(role, account) */\n      jump\t// in\n    tag_233:\n        /* \"sBNB_flattened.sol\":16041:16149  if (!hasRole(role, account)) {... */\n      tag_234\n      jumpi\n        /* \"sBNB_flattened.sol\":16124:16131  account */\n      dup1\n        /* \"sBNB_flattened.sol\":16133:16137  role */\n      dup3\n        /* \"sBNB_flattened.sol\":16091:16138  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap3\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"sBNB_flattened.sol\":16041:16149  if (!hasRole(role, account)) {... */\n    tag_234:\n        /* \"sBNB_flattened.sol\":15958:16155  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_238:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_240:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_241:\n        /* \"#utility.yul\":561:584   */\n      tag_273\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_240\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_274\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_274:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_242:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_276\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_241\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_28:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_278\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_279\n      tag_238\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":833:952   */\n    tag_278:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_280\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_242\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_243:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_244:\n        /* \"#utility.yul\":1268:1289   */\n      tag_283\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_243\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_31:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_285\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_244\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_245:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_246:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_247:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_289:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_289)\n    tag_291:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_248:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_249:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_294\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_245\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":2329:2400   */\n      tag_295\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_246\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_296\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_247\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":2499:2528   */\n      tag_297\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_248\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_35:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_299\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_249\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_250:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_251:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_302\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_250\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_252:\n        /* \"#utility.yul\":3167:3191   */\n      tag_304\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_251\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_305:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_253:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_307\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_252\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_254:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_255:\n        /* \"#utility.yul\":3523:3547   */\n      tag_310\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_254\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_311\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_311:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_256:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_313\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_255\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_38:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_315\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_316\n      tag_238\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":3816:3935   */\n    tag_315:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_317\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_253\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_318\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_256\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_257:\n        /* \"#utility.yul\":4290:4314   */\n      tag_320\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_254\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_44:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_322\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_257\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_47:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_325\n      tag_238\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":4665:4784   */\n    tag_324:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_326\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_253\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_327\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_253\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_328\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_256\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5257   */\n    tag_258:\n        /* \"#utility.yul\":5217:5224   */\n      0x00\n        /* \"#utility.yul\":5246:5251   */\n      dup2\n        /* \"#utility.yul\":5235:5251   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5257   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5263:5385   */\n    tag_259:\n        /* \"#utility.yul\":5336:5360   */\n      tag_331\n        /* \"#utility.yul\":5354:5359   */\n      dup2\n        /* \"#utility.yul\":5336:5360   */\n      tag_258\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":5329:5334   */\n      dup2\n        /* \"#utility.yul\":5326:5361   */\n      eq\n        /* \"#utility.yul\":5316:5379   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":5375:5376   */\n      0x00\n        /* \"#utility.yul\":5372:5373   */\n      dup1\n        /* \"#utility.yul\":5365:5377   */\n      revert\n        /* \"#utility.yul\":5316:5379   */\n    tag_332:\n        /* \"#utility.yul\":5263:5385   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5391:5530   */\n    tag_260:\n        /* \"#utility.yul\":5437:5442   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup2\n        /* \"#utility.yul\":5462:5482   */\n      calldataload\n        /* \"#utility.yul\":5453:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5491:5524   */\n      tag_334\n        /* \"#utility.yul\":5518:5523   */\n      dup2\n        /* \"#utility.yul\":5491:5524   */\n      tag_259\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5391:5530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5536:5865   */\n    tag_52:\n        /* \"#utility.yul\":5595:5601   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5632:5641   */\n      dup3\n        /* \"#utility.yul\":5623:5630   */\n      dup5\n        /* \"#utility.yul\":5619:5642   */\n      sub\n        /* \"#utility.yul\":5615:5647   */\n      slt\n        /* \"#utility.yul\":5612:5731   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":5650:5729   */\n      tag_337\n      tag_238\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5612:5731   */\n    tag_336:\n        /* \"#utility.yul\":5770:5771   */\n      0x00\n        /* \"#utility.yul\":5795:5848   */\n      tag_338\n        /* \"#utility.yul\":5840:5847   */\n      dup5\n        /* \"#utility.yul\":5831:5837   */\n      dup3\n        /* \"#utility.yul\":5820:5829   */\n      dup6\n        /* \"#utility.yul\":5816:5838   */\n      add\n        /* \"#utility.yul\":5795:5848   */\n      tag_260\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5785:5848   */\n      swap2\n      pop\n        /* \"#utility.yul\":5741:5858   */\n      pop\n        /* \"#utility.yul\":5536:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:5989   */\n    tag_261:\n        /* \"#utility.yul\":5958:5982   */\n      tag_340\n        /* \"#utility.yul\":5976:5981   */\n      dup2\n        /* \"#utility.yul\":5958:5982   */\n      tag_258\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":5953:5956   */\n      dup3\n        /* \"#utility.yul\":5946:5983   */\n      mstore\n        /* \"#utility.yul\":5871:5989   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5995:6217   */\n    tag_55:\n        /* \"#utility.yul\":6088:6092   */\n      0x00\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6115:6124   */\n      dup3\n        /* \"#utility.yul\":6111:6129   */\n      add\n        /* \"#utility.yul\":6103:6129   */\n      swap1\n      pop\n        /* \"#utility.yul\":6139:6210   */\n      tag_342\n        /* \"#utility.yul\":6207:6208   */\n      0x00\n        /* \"#utility.yul\":6196:6205   */\n      dup4\n        /* \"#utility.yul\":6192:6209   */\n      add\n        /* \"#utility.yul\":6183:6189   */\n      dup5\n        /* \"#utility.yul\":6139:6210   */\n      tag_261\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":5995:6217   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6223:6697   */\n    tag_61:\n        /* \"#utility.yul\":6291:6297   */\n      0x00\n        /* \"#utility.yul\":6299:6305   */\n      dup1\n        /* \"#utility.yul\":6348:6350   */\n      0x40\n        /* \"#utility.yul\":6336:6345   */\n      dup4\n        /* \"#utility.yul\":6327:6334   */\n      dup6\n        /* \"#utility.yul\":6323:6346   */\n      sub\n        /* \"#utility.yul\":6319:6351   */\n      slt\n        /* \"#utility.yul\":6316:6435   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":6354:6433   */\n      tag_345\n      tag_238\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":6316:6435   */\n    tag_344:\n        /* \"#utility.yul\":6474:6475   */\n      0x00\n        /* \"#utility.yul\":6499:6552   */\n      tag_346\n        /* \"#utility.yul\":6544:6551   */\n      dup6\n        /* \"#utility.yul\":6535:6541   */\n      dup3\n        /* \"#utility.yul\":6524:6533   */\n      dup7\n        /* \"#utility.yul\":6520:6542   */\n      add\n        /* \"#utility.yul\":6499:6552   */\n      tag_260\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":6489:6552   */\n      swap3\n      pop\n        /* \"#utility.yul\":6445:6562   */\n      pop\n        /* \"#utility.yul\":6601:6603   */\n      0x20\n        /* \"#utility.yul\":6627:6680   */\n      tag_347\n        /* \"#utility.yul\":6672:6679   */\n      dup6\n        /* \"#utility.yul\":6663:6669   */\n      dup3\n        /* \"#utility.yul\":6652:6661   */\n      dup7\n        /* \"#utility.yul\":6648:6670   */\n      add\n        /* \"#utility.yul\":6627:6680   */\n      tag_253\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":6617:6680   */\n      swap2\n      pop\n        /* \"#utility.yul\":6572:6690   */\n      pop\n        /* \"#utility.yul\":6223:6697   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6703:6789   */\n    tag_262:\n        /* \"#utility.yul\":6738:6745   */\n      0x00\n        /* \"#utility.yul\":6778:6782   */\n      0xff\n        /* \"#utility.yul\":6771:6776   */\n      dup3\n        /* \"#utility.yul\":6767:6783   */\n      and\n        /* \"#utility.yul\":6756:6783   */\n      swap1\n      pop\n        /* \"#utility.yul\":6703:6789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6795:6907   */\n    tag_263:\n        /* \"#utility.yul\":6878:6900   */\n      tag_350\n        /* \"#utility.yul\":6894:6899   */\n      dup2\n        /* \"#utility.yul\":6878:6900   */\n      tag_262\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6873:6876   */\n      dup3\n        /* \"#utility.yul\":6866:6901   */\n      mstore\n        /* \"#utility.yul\":6795:6907   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6913:7127   */\n    tag_66:\n        /* \"#utility.yul\":7002:7006   */\n      0x00\n        /* \"#utility.yul\":7040:7042   */\n      0x20\n        /* \"#utility.yul\":7029:7038   */\n      dup3\n        /* \"#utility.yul\":7025:7043   */\n      add\n        /* \"#utility.yul\":7017:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":7053:7120   */\n      tag_352\n        /* \"#utility.yul\":7117:7118   */\n      0x00\n        /* \"#utility.yul\":7106:7115   */\n      dup4\n        /* \"#utility.yul\":7102:7119   */\n      add\n        /* \"#utility.yul\":7093:7099   */\n      dup5\n        /* \"#utility.yul\":7053:7120   */\n      tag_263\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6913:7127   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7133:7462   */\n    tag_75:\n        /* \"#utility.yul\":7192:7198   */\n      0x00\n        /* \"#utility.yul\":7241:7243   */\n      0x20\n        /* \"#utility.yul\":7229:7238   */\n      dup3\n        /* \"#utility.yul\":7220:7227   */\n      dup5\n        /* \"#utility.yul\":7216:7239   */\n      sub\n        /* \"#utility.yul\":7212:7244   */\n      slt\n        /* \"#utility.yul\":7209:7328   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":7247:7326   */\n      tag_355\n      tag_238\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":7209:7328   */\n    tag_354:\n        /* \"#utility.yul\":7367:7368   */\n      0x00\n        /* \"#utility.yul\":7392:7445   */\n      tag_356\n        /* \"#utility.yul\":7437:7444   */\n      dup5\n        /* \"#utility.yul\":7428:7434   */\n      dup3\n        /* \"#utility.yul\":7417:7426   */\n      dup6\n        /* \"#utility.yul\":7413:7435   */\n      add\n        /* \"#utility.yul\":7392:7445   */\n      tag_253\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7382:7445   */\n      swap2\n      pop\n        /* \"#utility.yul\":7338:7455   */\n      pop\n        /* \"#utility.yul\":7133:7462   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7468:7942   */\n    tag_103:\n        /* \"#utility.yul\":7536:7542   */\n      0x00\n        /* \"#utility.yul\":7544:7550   */\n      dup1\n        /* \"#utility.yul\":7593:7595   */\n      0x40\n        /* \"#utility.yul\":7581:7590   */\n      dup4\n        /* \"#utility.yul\":7572:7579   */\n      dup6\n        /* \"#utility.yul\":7568:7591   */\n      sub\n        /* \"#utility.yul\":7564:7596   */\n      slt\n        /* \"#utility.yul\":7561:7680   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":7599:7678   */\n      tag_359\n      tag_238\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7561:7680   */\n    tag_358:\n        /* \"#utility.yul\":7719:7720   */\n      0x00\n        /* \"#utility.yul\":7744:7797   */\n      tag_360\n        /* \"#utility.yul\":7789:7796   */\n      dup6\n        /* \"#utility.yul\":7780:7786   */\n      dup3\n        /* \"#utility.yul\":7769:7778   */\n      dup7\n        /* \"#utility.yul\":7765:7787   */\n      add\n        /* \"#utility.yul\":7744:7797   */\n      tag_253\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":7734:7797   */\n      swap3\n      pop\n        /* \"#utility.yul\":7690:7807   */\n      pop\n        /* \"#utility.yul\":7846:7848   */\n      0x20\n        /* \"#utility.yul\":7872:7925   */\n      tag_361\n        /* \"#utility.yul\":7917:7924   */\n      dup6\n        /* \"#utility.yul\":7908:7914   */\n      dup3\n        /* \"#utility.yul\":7897:7906   */\n      dup7\n        /* \"#utility.yul\":7893:7915   */\n      add\n        /* \"#utility.yul\":7872:7925   */\n      tag_253\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":7862:7925   */\n      swap2\n      pop\n        /* \"#utility.yul\":7817:7935   */\n      pop\n        /* \"#utility.yul\":7468:7942   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7948:8128   */\n    tag_264:\n        /* \"#utility.yul\":7996:8073   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":7986:8074   */\n      mstore\n        /* \"#utility.yul\":8093:8097   */\n      0x22\n        /* \"#utility.yul\":8090:8091   */\n      0x04\n        /* \"#utility.yul\":8083:8098   */\n      mstore\n        /* \"#utility.yul\":8117:8121   */\n      0x24\n        /* \"#utility.yul\":8114:8115   */\n      0x00\n        /* \"#utility.yul\":8107:8122   */\n      revert\n        /* \"#utility.yul\":8134:8454   */\n    tag_112:\n        /* \"#utility.yul\":8178:8184   */\n      0x00\n        /* \"#utility.yul\":8215:8216   */\n      0x02\n        /* \"#utility.yul\":8209:8213   */\n      dup3\n        /* \"#utility.yul\":8205:8217   */\n      div\n        /* \"#utility.yul\":8195:8217   */\n      swap1\n      pop\n        /* \"#utility.yul\":8262:8263   */\n      0x01\n        /* \"#utility.yul\":8256:8260   */\n      dup3\n        /* \"#utility.yul\":8252:8264   */\n      and\n        /* \"#utility.yul\":8283:8301   */\n      dup1\n        /* \"#utility.yul\":8273:8354   */\n      tag_364\n      jumpi\n        /* \"#utility.yul\":8339:8343   */\n      0x7f\n        /* \"#utility.yul\":8331:8337   */\n      dup3\n        /* \"#utility.yul\":8327:8344   */\n      and\n        /* \"#utility.yul\":8317:8344   */\n      swap2\n      pop\n        /* \"#utility.yul\":8273:8354   */\n    tag_364:\n        /* \"#utility.yul\":8401:8403   */\n      0x20\n        /* \"#utility.yul\":8393:8399   */\n      dup3\n        /* \"#utility.yul\":8390:8404   */\n      lt\n        /* \"#utility.yul\":8370:8388   */\n      dup2\n        /* \"#utility.yul\":8367:8405   */\n      sub\n        /* \"#utility.yul\":8364:8448   */\n      tag_365\n      jumpi\n        /* \"#utility.yul\":8420:8438   */\n      tag_366\n      tag_264\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":8364:8448   */\n    tag_365:\n        /* \"#utility.yul\":8185:8454   */\n      pop\n        /* \"#utility.yul\":8134:8454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8578   */\n    tag_265:\n        /* \"#utility.yul\":8547:8571   */\n      tag_368\n        /* \"#utility.yul\":8565:8570   */\n      dup2\n        /* \"#utility.yul\":8547:8571   */\n      tag_251\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":8542:8545   */\n      dup3\n        /* \"#utility.yul\":8535:8572   */\n      mstore\n        /* \"#utility.yul\":8460:8578   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8584:8916   */\n    tag_149:\n        /* \"#utility.yul\":8705:8709   */\n      0x00\n        /* \"#utility.yul\":8743:8745   */\n      0x40\n        /* \"#utility.yul\":8732:8741   */\n      dup3\n        /* \"#utility.yul\":8728:8746   */\n      add\n        /* \"#utility.yul\":8720:8746   */\n      swap1\n      pop\n        /* \"#utility.yul\":8756:8827   */\n      tag_370\n        /* \"#utility.yul\":8824:8825   */\n      0x00\n        /* \"#utility.yul\":8813:8822   */\n      dup4\n        /* \"#utility.yul\":8809:8826   */\n      add\n        /* \"#utility.yul\":8800:8806   */\n      dup6\n        /* \"#utility.yul\":8756:8827   */\n      tag_265\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":8837:8909   */\n      tag_371\n        /* \"#utility.yul\":8905:8907   */\n      0x20\n        /* \"#utility.yul\":8894:8903   */\n      dup4\n        /* \"#utility.yul\":8890:8908   */\n      add\n        /* \"#utility.yul\":8881:8887   */\n      dup5\n        /* \"#utility.yul\":8837:8909   */\n      tag_257\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":8584:8916   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8922:9364   */\n    tag_183:\n        /* \"#utility.yul\":9071:9075   */\n      0x00\n        /* \"#utility.yul\":9109:9111   */\n      0x60\n        /* \"#utility.yul\":9098:9107   */\n      dup3\n        /* \"#utility.yul\":9094:9112   */\n      add\n        /* \"#utility.yul\":9086:9112   */\n      swap1\n      pop\n        /* \"#utility.yul\":9122:9193   */\n      tag_373\n        /* \"#utility.yul\":9190:9191   */\n      0x00\n        /* \"#utility.yul\":9179:9188   */\n      dup4\n        /* \"#utility.yul\":9175:9192   */\n      add\n        /* \"#utility.yul\":9166:9172   */\n      dup7\n        /* \"#utility.yul\":9122:9193   */\n      tag_265\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":9203:9275   */\n      tag_374\n        /* \"#utility.yul\":9271:9273   */\n      0x20\n        /* \"#utility.yul\":9260:9269   */\n      dup4\n        /* \"#utility.yul\":9256:9274   */\n      add\n        /* \"#utility.yul\":9247:9253   */\n      dup6\n        /* \"#utility.yul\":9203:9275   */\n      tag_257\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":9285:9357   */\n      tag_375\n        /* \"#utility.yul\":9353:9355   */\n      0x40\n        /* \"#utility.yul\":9342:9351   */\n      dup4\n        /* \"#utility.yul\":9338:9356   */\n      add\n        /* \"#utility.yul\":9329:9335   */\n      dup5\n        /* \"#utility.yul\":9285:9357   */\n      tag_257\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8922:9364   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9370:9592   */\n    tag_188:\n        /* \"#utility.yul\":9463:9467   */\n      0x00\n        /* \"#utility.yul\":9501:9503   */\n      0x20\n        /* \"#utility.yul\":9490:9499   */\n      dup3\n        /* \"#utility.yul\":9486:9504   */\n      add\n        /* \"#utility.yul\":9478:9504   */\n      swap1\n      pop\n        /* \"#utility.yul\":9514:9585   */\n      tag_377\n        /* \"#utility.yul\":9582:9583   */\n      0x00\n        /* \"#utility.yul\":9571:9580   */\n      dup4\n        /* \"#utility.yul\":9567:9584   */\n      add\n        /* \"#utility.yul\":9558:9564   */\n      dup5\n        /* \"#utility.yul\":9514:9585   */\n      tag_265\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":9370:9592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9598:9778   */\n    tag_266:\n        /* \"#utility.yul\":9646:9723   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9643:9644   */\n      0x00\n        /* \"#utility.yul\":9636:9724   */\n      mstore\n        /* \"#utility.yul\":9743:9747   */\n      0x11\n        /* \"#utility.yul\":9740:9741   */\n      0x04\n        /* \"#utility.yul\":9733:9748   */\n      mstore\n        /* \"#utility.yul\":9767:9771   */\n      0x24\n        /* \"#utility.yul\":9764:9765   */\n      0x00\n        /* \"#utility.yul\":9757:9772   */\n      revert\n        /* \"#utility.yul\":9784:9975   */\n    tag_225:\n        /* \"#utility.yul\":9824:9827   */\n      0x00\n        /* \"#utility.yul\":9843:9863   */\n      tag_380\n        /* \"#utility.yul\":9861:9862   */\n      dup3\n        /* \"#utility.yul\":9843:9863   */\n      tag_254\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":9838:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9877:9897   */\n      tag_381\n        /* \"#utility.yul\":9895:9896   */\n      dup4\n        /* \"#utility.yul\":9877:9897   */\n      tag_254\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":9872:9897   */\n      swap3\n      pop\n        /* \"#utility.yul\":9920:9921   */\n      dup3\n        /* \"#utility.yul\":9917:9918   */\n      dup3\n        /* \"#utility.yul\":9913:9922   */\n      add\n        /* \"#utility.yul\":9906:9922   */\n      swap1\n      pop\n        /* \"#utility.yul\":9941:9944   */\n      dup1\n        /* \"#utility.yul\":9938:9939   */\n      dup3\n        /* \"#utility.yul\":9935:9945   */\n      gt\n        /* \"#utility.yul\":9932:9968   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":9948:9966   */\n      tag_383\n      tag_266\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9932:9968   */\n    tag_382:\n        /* \"#utility.yul\":9784:9975   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9981:10313   */\n    tag_236:\n        /* \"#utility.yul\":10102:10106   */\n      0x00\n        /* \"#utility.yul\":10140:10142   */\n      0x40\n        /* \"#utility.yul\":10129:10138   */\n      dup3\n        /* \"#utility.yul\":10125:10143   */\n      add\n        /* \"#utility.yul\":10117:10143   */\n      swap1\n      pop\n        /* \"#utility.yul\":10153:10224   */\n      tag_385\n        /* \"#utility.yul\":10221:10222   */\n      0x00\n        /* \"#utility.yul\":10210:10219   */\n      dup4\n        /* \"#utility.yul\":10206:10223   */\n      add\n        /* \"#utility.yul\":10197:10203   */\n      dup6\n        /* \"#utility.yul\":10153:10224   */\n      tag_265\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":10234:10306   */\n      tag_386\n        /* \"#utility.yul\":10302:10304   */\n      0x20\n        /* \"#utility.yul\":10291:10300   */\n      dup4\n        /* \"#utility.yul\":10287:10305   */\n      add\n        /* \"#utility.yul\":10278:10284   */\n      dup5\n        /* \"#utility.yul\":10234:10306   */\n      tag_261\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":9981:10313   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122012ff0df29d3c37c87226dd7cddbef7ee8d08f34c6c501e884c59b27c5419428664736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1225": {
									"entryPoint": null,
									"id": 1225,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_711": {
									"entryPoint": null,
									"id": 711,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_529": {
									"entryPoint": 333,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1014": {
									"entryPoint": 195,
									"id": 1014,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_261": {
									"entryPoint": 1233,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_981": {
									"entryPoint": 585,
									"id": 981,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_1288": {
									"entryPoint": 187,
									"id": 1288,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_353": {
									"entryPoint": 1133,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3207,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 3309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 3326,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 3385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2679,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint256": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2769,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3083,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2243,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 3188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1629,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 2082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1891,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2365,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2622,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1281,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1257,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1253,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1976,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1988,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2130,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2173,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13524:1",
										"nodeType": "YulBlock",
										"src": "0:13524:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "423:28:1",
													"nodeType": "YulBlock",
													"src": "423:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:1",
																		"nodeType": "YulLiteral",
																		"src": "440:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:1",
																		"nodeType": "YulLiteral",
																		"src": "443:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:1"
																},
																"nativeSrc": "433:12:1",
																"nodeType": "YulFunctionCall",
																"src": "433:12:1"
															},
															"nativeSrc": "433:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:1"
											},
											{
												"body": {
													"nativeSrc": "546:28:1",
													"nodeType": "YulBlock",
													"src": "546:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:1",
																		"nodeType": "YulLiteral",
																		"src": "563:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:1",
																		"nodeType": "YulLiteral",
																		"src": "566:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:1"
																},
																"nativeSrc": "556:12:1",
																"nodeType": "YulFunctionCall",
																"src": "556:12:1"
															},
															"nativeSrc": "556:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:1"
											},
											{
												"body": {
													"nativeSrc": "628:54:1",
													"nodeType": "YulBlock",
													"src": "628:54:1",
													"statements": [
														{
															"nativeSrc": "638:38:1",
															"nodeType": "YulAssignment",
															"src": "638:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:1",
																				"nodeType": "YulLiteral",
																				"src": "663:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:1"
																		},
																		"nativeSrc": "652:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:1",
																				"nodeType": "YulLiteral",
																				"src": "672:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:1"
																		},
																		"nativeSrc": "668:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:1"
																},
																"nativeSrc": "648:28:1",
																"nodeType": "YulFunctionCall",
																"src": "648:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:1",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:1",
														"nodeType": "YulTypedName",
														"src": "621:6:1",
														"type": ""
													}
												],
												"src": "580:102:1"
											},
											{
												"body": {
													"nativeSrc": "716:152:1",
													"nodeType": "YulBlock",
													"src": "716:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:1",
																		"nodeType": "YulLiteral",
																		"src": "733:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:1",
																		"nodeType": "YulLiteral",
																		"src": "736:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:1"
																},
																"nativeSrc": "726:88:1",
																"nodeType": "YulFunctionCall",
																"src": "726:88:1"
															},
															"nativeSrc": "726:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:1",
																		"nodeType": "YulLiteral",
																		"src": "830:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:1",
																		"nodeType": "YulLiteral",
																		"src": "833:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:1"
																},
																"nativeSrc": "823:15:1",
																"nodeType": "YulFunctionCall",
																"src": "823:15:1"
															},
															"nativeSrc": "823:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:1",
																		"nodeType": "YulLiteral",
																		"src": "854:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:1",
																		"nodeType": "YulLiteral",
																		"src": "857:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nativeSrc": "847:15:1",
																"nodeType": "YulFunctionCall",
																"src": "847:15:1"
															},
															"nativeSrc": "847:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:1"
											},
											{
												"body": {
													"nativeSrc": "917:238:1",
													"nodeType": "YulBlock",
													"src": "917:238:1",
													"statements": [
														{
															"nativeSrc": "927:58:1",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:1"
																		},
																		"nativeSrc": "957:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:1"
																},
																"nativeSrc": "945:40:1",
																"nodeType": "YulFunctionCall",
																"src": "945:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:1",
																	"nodeType": "YulTypedName",
																	"src": "931:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:1",
																"nodeType": "YulBlock",
																"src": "1096:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:1"
																			},
																			"nativeSrc": "1098:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:1"
																		},
																		"nativeSrc": "1098:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:1",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:1"
																		},
																		"nativeSrc": "1036:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:1",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:1"
																		},
																		"nativeSrc": "1072:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:1"
																},
																"nativeSrc": "1033:62:1",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:1"
															},
															"nativeSrc": "1030:88:1",
															"nodeType": "YulIf",
															"src": "1030:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nativeSrc": "1127:22:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:1"
															},
															"nativeSrc": "1127:22:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:1",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:1",
														"nodeType": "YulTypedName",
														"src": "911:4:1",
														"type": ""
													}
												],
												"src": "874:281:1"
											},
											{
												"body": {
													"nativeSrc": "1202:88:1",
													"nodeType": "YulBlock",
													"src": "1202:88:1",
													"statements": [
														{
															"nativeSrc": "1212:30:1",
															"nodeType": "YulAssignment",
															"src": "1212:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:1"
																},
																"nativeSrc": "1222:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:1"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:1",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:1"
																},
																"nativeSrc": "1251:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:1"
															},
															"nativeSrc": "1251:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:1",
														"nodeType": "YulTypedName",
														"src": "1186:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:1",
														"nodeType": "YulTypedName",
														"src": "1195:6:1",
														"type": ""
													}
												],
												"src": "1161:129:1"
											},
											{
												"body": {
													"nativeSrc": "1363:241:1",
													"nodeType": "YulBlock",
													"src": "1363:241:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:1",
																"nodeType": "YulBlock",
																"src": "1468:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:1"
																			},
																			"nativeSrc": "1470:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:1"
																		},
																		"nativeSrc": "1470:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:1",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:1"
																},
																"nativeSrc": "1437:30:1",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:1"
															},
															"nativeSrc": "1434:56:1",
															"nodeType": "YulIf",
															"src": "1434:56:1"
														},
														{
															"nativeSrc": "1500:37:1",
															"nodeType": "YulAssignment",
															"src": "1500:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:1",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:1"
																},
																"nativeSrc": "1508:29:1",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:1"
																}
															]
														},
														{
															"nativeSrc": "1574:23:1",
															"nodeType": "YulAssignment",
															"src": "1574:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:1"
																},
																"nativeSrc": "1582:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:1",
														"nodeType": "YulTypedName",
														"src": "1347:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:1",
														"nodeType": "YulTypedName",
														"src": "1358:4:1",
														"type": ""
													}
												],
												"src": "1296:308:1"
											},
											{
												"body": {
													"nativeSrc": "1672:184:1",
													"nodeType": "YulBlock",
													"src": "1672:184:1",
													"statements": [
														{
															"nativeSrc": "1682:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:1",
																"nodeType": "YulLiteral",
																"src": "1691:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:1",
																"nodeType": "YulBlock",
																"src": "1751:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:1"
																					},
																					"nativeSrc": "1772:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:1"
																							},
																							"nativeSrc": "1791:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:1"
																					},
																					"nativeSrc": "1785:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:1"
																			},
																			"nativeSrc": "1765:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:1"
																		},
																		"nativeSrc": "1765:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:1"
																},
																"nativeSrc": "1709:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:1"
															},
															"nativeSrc": "1701:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:1",
																"nodeType": "YulBlock",
																"src": "1723:19:1",
																"statements": [
																	{
																		"nativeSrc": "1725:15:1",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:1"
																			},
																			"nativeSrc": "1730:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:1",
																"nodeType": "YulBlock",
																"src": "1705:3:1",
																"statements": []
															},
															"src": "1701:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:1"
																		},
																		"nativeSrc": "1830:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:1"
																},
																"nativeSrc": "1823:27:1",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:1"
															},
															"nativeSrc": "1823:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:1",
														"nodeType": "YulTypedName",
														"src": "1654:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:1",
														"nodeType": "YulTypedName",
														"src": "1659:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:1",
														"nodeType": "YulTypedName",
														"src": "1664:6:1",
														"type": ""
													}
												],
												"src": "1610:246:1"
											},
											{
												"body": {
													"nativeSrc": "1957:339:1",
													"nodeType": "YulBlock",
													"src": "1957:339:1",
													"statements": [
														{
															"nativeSrc": "1967:75:1",
															"nodeType": "YulAssignment",
															"src": "1967:75:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:1"
																		},
																		"nativeSrc": "1992:49:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:1"
																},
																"nativeSrc": "1976:66:1",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:1"
																},
																"nativeSrc": "2051:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:1"
															},
															"nativeSrc": "2051:21:1",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:1"
														},
														{
															"nativeSrc": "2081:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:1",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:1"
																},
																"nativeSrc": "2092:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:1",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:1",
																"nodeType": "YulBlock",
																"src": "2146:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:1"
																			},
																			"nativeSrc": "2148:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:1"
																		},
																		"nativeSrc": "2148:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:1"
																		},
																		"nativeSrc": "2123:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:1"
																},
																"nativeSrc": "2120:25:1",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:1"
															},
															"nativeSrc": "2117:112:1",
															"nodeType": "YulIf",
															"src": "2117:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:1"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:1"
																},
																"nativeSrc": "2238:52:1",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:1"
															},
															"nativeSrc": "2238:52:1",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:1",
														"nodeType": "YulTypedName",
														"src": "1930:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:1",
														"nodeType": "YulTypedName",
														"src": "1935:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:1",
														"nodeType": "YulTypedName",
														"src": "1943:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:1",
														"nodeType": "YulTypedName",
														"src": "1951:5:1",
														"type": ""
													}
												],
												"src": "1862:434:1"
											},
											{
												"body": {
													"nativeSrc": "2389:282:1",
													"nodeType": "YulBlock",
													"src": "2389:282:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:1",
																"nodeType": "YulBlock",
																"src": "2438:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:1"
																			},
																			"nativeSrc": "2440:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:1"
																		},
																		"nativeSrc": "2440:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:1",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:1"
																				},
																				"nativeSrc": "2413:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:1"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:1"
																		},
																		"nativeSrc": "2409:27:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nativeSrc": "2402:35:1",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:1"
															},
															"nativeSrc": "2399:122:1",
															"nodeType": "YulIf",
															"src": "2399:122:1"
														},
														{
															"nativeSrc": "2530:27:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:1"
																},
																"nativeSrc": "2544:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:1",
															"nodeType": "YulAssignment",
															"src": "2566:99:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:1"
																		},
																		"nativeSrc": "2634:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:1"
																},
																"nativeSrc": "2575:90:1",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:1",
														"nodeType": "YulTypedName",
														"src": "2367:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:1",
														"nodeType": "YulTypedName",
														"src": "2375:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:1",
														"nodeType": "YulTypedName",
														"src": "2383:5:1",
														"type": ""
													}
												],
												"src": "2316:355:1"
											},
											{
												"body": {
													"nativeSrc": "2722:32:1",
													"nodeType": "YulBlock",
													"src": "2722:32:1",
													"statements": [
														{
															"nativeSrc": "2732:16:1",
															"nodeType": "YulAssignment",
															"src": "2732:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "2743:5:1",
																"nodeType": "YulIdentifier",
																"src": "2743:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2732:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2732:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2677:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2704:5:1",
														"nodeType": "YulTypedName",
														"src": "2704:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2714:7:1",
														"nodeType": "YulTypedName",
														"src": "2714:7:1",
														"type": ""
													}
												],
												"src": "2677:77:1"
											},
											{
												"body": {
													"nativeSrc": "2803:79:1",
													"nodeType": "YulBlock",
													"src": "2803:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2860:16:1",
																"nodeType": "YulBlock",
																"src": "2860:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2869:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2869:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2872:1:1",
																					"nodeType": "YulLiteral",
																					"src": "2872:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2862:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:1"
																			},
																			"nativeSrc": "2862:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2862:12:1"
																		},
																		"nativeSrc": "2862:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2862:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2826:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2826:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2851:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2833:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2833:17:1"
																				},
																				"nativeSrc": "2833:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2833:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2823:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "2823:2:1"
																		},
																		"nativeSrc": "2823:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2823:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2816:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2816:6:1"
																},
																"nativeSrc": "2816:43:1",
																"nodeType": "YulFunctionCall",
																"src": "2816:43:1"
															},
															"nativeSrc": "2813:63:1",
															"nodeType": "YulIf",
															"src": "2813:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2760:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2796:5:1",
														"nodeType": "YulTypedName",
														"src": "2796:5:1",
														"type": ""
													}
												],
												"src": "2760:122:1"
											},
											{
												"body": {
													"nativeSrc": "2951:80:1",
													"nodeType": "YulBlock",
													"src": "2951:80:1",
													"statements": [
														{
															"nativeSrc": "2961:22:1",
															"nodeType": "YulAssignment",
															"src": "2961:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2976:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2976:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2970:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2970:5:1"
																},
																"nativeSrc": "2970:13:1",
																"nodeType": "YulFunctionCall",
																"src": "2970:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2961:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2961:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3019:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3019:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2992:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "2992:26:1"
																},
																"nativeSrc": "2992:33:1",
																"nodeType": "YulFunctionCall",
																"src": "2992:33:1"
															},
															"nativeSrc": "2992:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "2992:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "2888:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2929:6:1",
														"nodeType": "YulTypedName",
														"src": "2929:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2937:3:1",
														"nodeType": "YulTypedName",
														"src": "2937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2945:5:1",
														"nodeType": "YulTypedName",
														"src": "2945:5:1",
														"type": ""
													}
												],
												"src": "2888:143:1"
											},
											{
												"body": {
													"nativeSrc": "3168:878:1",
													"nodeType": "YulBlock",
													"src": "3168:878:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3214:83:1",
																"nodeType": "YulBlock",
																"src": "3214:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3216:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3216:77:1"
																			},
																			"nativeSrc": "3216:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3216:79:1"
																		},
																		"nativeSrc": "3216:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3216:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3189:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3189:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3198:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3198:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3185:3:1"
																		},
																		"nativeSrc": "3185:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3185:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3210:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3210:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3181:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:1"
																},
																"nativeSrc": "3181:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3181:32:1"
															},
															"nativeSrc": "3178:119:1",
															"nodeType": "YulIf",
															"src": "3178:119:1"
														},
														{
															"nativeSrc": "3307:291:1",
															"nodeType": "YulBlock",
															"src": "3307:291:1",
															"statements": [
																{
																	"nativeSrc": "3322:38:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3322:38:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3346:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3346:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3357:1:1",
																						"nodeType": "YulLiteral",
																						"src": "3357:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3342:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3342:3:1"
																				},
																				"nativeSrc": "3342:17:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3342:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3336:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3336:5:1"
																		},
																		"nativeSrc": "3336:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3336:24:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3326:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3326:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3407:83:1",
																		"nodeType": "YulBlock",
																		"src": "3407:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3409:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "3409:77:1"
																					},
																					"nativeSrc": "3409:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3409:79:1"
																				},
																				"nativeSrc": "3409:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3409:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3379:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3379:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3387:18:1",
																				"nodeType": "YulLiteral",
																				"src": "3387:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3376:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3376:2:1"
																		},
																		"nativeSrc": "3376:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3376:30:1"
																	},
																	"nativeSrc": "3373:117:1",
																	"nodeType": "YulIf",
																	"src": "3373:117:1"
																},
																{
																	"nativeSrc": "3504:84:1",
																	"nodeType": "YulAssignment",
																	"src": "3504:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3560:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3560:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3571:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3571:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3556:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3556:3:1"
																				},
																				"nativeSrc": "3556:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3556:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3580:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3580:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3514:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "3514:41:1"
																		},
																		"nativeSrc": "3514:74:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3514:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3504:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3504:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3608:292:1",
															"nodeType": "YulBlock",
															"src": "3608:292:1",
															"statements": [
																{
																	"nativeSrc": "3623:39:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3623:39:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3647:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3647:9:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3658:2:1",
																						"nodeType": "YulLiteral",
																						"src": "3658:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3643:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3643:3:1"
																				},
																				"nativeSrc": "3643:18:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3643:18:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3637:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "3637:5:1"
																		},
																		"nativeSrc": "3637:25:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3637:25:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3627:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3627:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3709:83:1",
																		"nodeType": "YulBlock",
																		"src": "3709:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3711:77:1",
																						"nodeType": "YulIdentifier",
																						"src": "3711:77:1"
																					},
																					"nativeSrc": "3711:79:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3711:79:1"
																				},
																				"nativeSrc": "3711:79:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "3711:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3681:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3681:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3689:18:1",
																				"nodeType": "YulLiteral",
																				"src": "3689:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3678:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3678:2:1"
																		},
																		"nativeSrc": "3678:30:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3678:30:1"
																	},
																	"nativeSrc": "3675:117:1",
																	"nodeType": "YulIf",
																	"src": "3675:117:1"
																},
																{
																	"nativeSrc": "3806:84:1",
																	"nodeType": "YulAssignment",
																	"src": "3806:84:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3862:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3862:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3873:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3873:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3858:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3858:3:1"
																				},
																				"nativeSrc": "3858:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3858:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3882:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3882:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3816:41:1",
																			"nodeType": "YulIdentifier",
																			"src": "3816:41:1"
																		},
																		"nativeSrc": "3816:74:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3816:74:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3806:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3806:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3910:129:1",
															"nodeType": "YulBlock",
															"src": "3910:129:1",
															"statements": [
																{
																	"nativeSrc": "3925:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3925:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3939:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3939:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3929:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3955:74:1",
																	"nodeType": "YulAssignment",
																	"src": "3955:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4001:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4001:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4012:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4012:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3997:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3997:3:1"
																				},
																				"nativeSrc": "3997:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3997:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4021:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4021:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "3965:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "3965:31:1"
																		},
																		"nativeSrc": "3965:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3965:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "3955:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3955:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "3037:1009:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3122:9:1",
														"nodeType": "YulTypedName",
														"src": "3122:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3133:7:1",
														"nodeType": "YulTypedName",
														"src": "3133:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3145:6:1",
														"nodeType": "YulTypedName",
														"src": "3145:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3153:6:1",
														"nodeType": "YulTypedName",
														"src": "3153:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3161:6:1",
														"nodeType": "YulTypedName",
														"src": "3161:6:1",
														"type": ""
													}
												],
												"src": "3037:1009:1"
											},
											{
												"body": {
													"nativeSrc": "4111:40:1",
													"nodeType": "YulBlock",
													"src": "4111:40:1",
													"statements": [
														{
															"nativeSrc": "4122:22:1",
															"nodeType": "YulAssignment",
															"src": "4122:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4138:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4138:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4132:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "4132:5:1"
																},
																"nativeSrc": "4132:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4132:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4122:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4122:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "4052:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4094:5:1",
														"nodeType": "YulTypedName",
														"src": "4094:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4104:6:1",
														"nodeType": "YulTypedName",
														"src": "4104:6:1",
														"type": ""
													}
												],
												"src": "4052:99:1"
											},
											{
												"body": {
													"nativeSrc": "4185:152:1",
													"nodeType": "YulBlock",
													"src": "4185:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4202:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4202:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4205:77:1",
																		"nodeType": "YulLiteral",
																		"src": "4205:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4195:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4195:6:1"
																},
																"nativeSrc": "4195:88:1",
																"nodeType": "YulFunctionCall",
																"src": "4195:88:1"
															},
															"nativeSrc": "4195:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "4195:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4299:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4299:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4302:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4302:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4292:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4292:6:1"
																},
																"nativeSrc": "4292:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4292:15:1"
															},
															"nativeSrc": "4292:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4292:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4323:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4323:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4326:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4326:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4316:6:1"
																},
																"nativeSrc": "4316:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4316:15:1"
															},
															"nativeSrc": "4316:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "4316:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "4157:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "4157:180:1"
											},
											{
												"body": {
													"nativeSrc": "4394:269:1",
													"nodeType": "YulBlock",
													"src": "4394:269:1",
													"statements": [
														{
															"nativeSrc": "4404:22:1",
															"nodeType": "YulAssignment",
															"src": "4404:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4418:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4418:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4424:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4424:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4414:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4414:3:1"
																},
																"nativeSrc": "4414:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4414:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "4404:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4404:6:1"
																}
															]
														},
														{
															"nativeSrc": "4435:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4435:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4465:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4465:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4471:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4471:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4461:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4461:3:1"
																},
																"nativeSrc": "4461:12:1",
																"nodeType": "YulFunctionCall",
																"src": "4461:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "4439:18:1",
																	"nodeType": "YulTypedName",
																	"src": "4439:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4512:51:1",
																"nodeType": "YulBlock",
																"src": "4512:51:1",
																"statements": [
																	{
																		"nativeSrc": "4526:27:1",
																		"nodeType": "YulAssignment",
																		"src": "4526:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4540:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "4540:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4548:4:1",
																					"nodeType": "YulLiteral",
																					"src": "4548:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4536:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4536:3:1"
																			},
																			"nativeSrc": "4536:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4536:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4526:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4526:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4492:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4492:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4485:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:1"
																},
																"nativeSrc": "4485:26:1",
																"nodeType": "YulFunctionCall",
																"src": "4485:26:1"
															},
															"nativeSrc": "4482:81:1",
															"nodeType": "YulIf",
															"src": "4482:81:1"
														},
														{
															"body": {
																"nativeSrc": "4615:42:1",
																"nodeType": "YulBlock",
																"src": "4615:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4629:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "4629:16:1"
																			},
																			"nativeSrc": "4629:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4629:18:1"
																		},
																		"nativeSrc": "4629:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4629:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4579:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "4579:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4602:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "4602:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4610:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4610:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4599:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "4599:2:1"
																		},
																		"nativeSrc": "4599:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4599:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4576:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4576:2:1"
																},
																"nativeSrc": "4576:38:1",
																"nodeType": "YulFunctionCall",
																"src": "4576:38:1"
															},
															"nativeSrc": "4573:84:1",
															"nodeType": "YulIf",
															"src": "4573:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "4343:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4378:4:1",
														"nodeType": "YulTypedName",
														"src": "4378:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "4387:6:1",
														"nodeType": "YulTypedName",
														"src": "4387:6:1",
														"type": ""
													}
												],
												"src": "4343:320:1"
											},
											{
												"body": {
													"nativeSrc": "4723:87:1",
													"nodeType": "YulBlock",
													"src": "4723:87:1",
													"statements": [
														{
															"nativeSrc": "4733:11:1",
															"nodeType": "YulAssignment",
															"src": "4733:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "4741:3:1",
																"nodeType": "YulIdentifier",
																"src": "4741:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4733:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4733:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4761:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4761:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4764:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4764:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4754:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4754:6:1"
																},
																"nativeSrc": "4754:14:1",
																"nodeType": "YulFunctionCall",
																"src": "4754:14:1"
															},
															"nativeSrc": "4754:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "4754:14:1"
														},
														{
															"nativeSrc": "4777:26:1",
															"nodeType": "YulAssignment",
															"src": "4777:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4795:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4795:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4798:4:1",
																		"nodeType": "YulLiteral",
																		"src": "4798:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4785:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "4785:9:1"
																},
																"nativeSrc": "4785:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4785:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4777:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4777:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4669:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4710:3:1",
														"nodeType": "YulTypedName",
														"src": "4710:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4718:4:1",
														"nodeType": "YulTypedName",
														"src": "4718:4:1",
														"type": ""
													}
												],
												"src": "4669:141:1"
											},
											{
												"body": {
													"nativeSrc": "4860:49:1",
													"nodeType": "YulBlock",
													"src": "4860:49:1",
													"statements": [
														{
															"nativeSrc": "4870:33:1",
															"nodeType": "YulAssignment",
															"src": "4870:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4888:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4895:2:1",
																				"nodeType": "YulLiteral",
																				"src": "4895:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4884:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4884:3:1"
																		},
																		"nativeSrc": "4884:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4884:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4900:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4900:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4880:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:1"
																},
																"nativeSrc": "4880:23:1",
																"nodeType": "YulFunctionCall",
																"src": "4880:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4870:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4870:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4816:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4843:5:1",
														"nodeType": "YulTypedName",
														"src": "4843:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4853:6:1",
														"nodeType": "YulTypedName",
														"src": "4853:6:1",
														"type": ""
													}
												],
												"src": "4816:93:1"
											},
											{
												"body": {
													"nativeSrc": "4968:54:1",
													"nodeType": "YulBlock",
													"src": "4968:54:1",
													"statements": [
														{
															"nativeSrc": "4978:37:1",
															"nodeType": "YulAssignment",
															"src": "4978:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "5003:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5003:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "5009:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5009:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4999:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4999:3:1"
																},
																"nativeSrc": "4999:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4999:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4978:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4978:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4915:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4943:4:1",
														"nodeType": "YulTypedName",
														"src": "4943:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4949:5:1",
														"nodeType": "YulTypedName",
														"src": "4949:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4959:8:1",
														"nodeType": "YulTypedName",
														"src": "4959:8:1",
														"type": ""
													}
												],
												"src": "4915:107:1"
											},
											{
												"body": {
													"nativeSrc": "5104:317:1",
													"nodeType": "YulBlock",
													"src": "5104:317:1",
													"statements": [
														{
															"nativeSrc": "5114:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5114:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "5135:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "5135:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5147:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5147:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "5131:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5131:3:1"
																},
																"nativeSrc": "5131:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5131:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "5118:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5118:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5158:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5158:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5189:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5189:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5200:66:1",
																		"nodeType": "YulLiteral",
																		"src": "5200:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5170:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5170:18:1"
																},
																"nativeSrc": "5170:97:1",
																"nodeType": "YulFunctionCall",
																"src": "5170:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5162:4:1",
																	"nodeType": "YulTypedName",
																	"src": "5162:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5276:51:1",
															"nodeType": "YulAssignment",
															"src": "5276:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "5307:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5307:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "5318:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "5318:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "5288:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "5288:18:1"
																},
																"nativeSrc": "5288:39:1",
																"nodeType": "YulFunctionCall",
																"src": "5288:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "5276:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "5276:8:1"
																}
															]
														},
														{
															"nativeSrc": "5336:30:1",
															"nodeType": "YulAssignment",
															"src": "5336:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5349:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5349:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "5360:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5360:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "5356:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5356:3:1"
																		},
																		"nativeSrc": "5356:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5356:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5345:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5345:3:1"
																},
																"nativeSrc": "5345:21:1",
																"nodeType": "YulFunctionCall",
																"src": "5345:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5336:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5336:5:1"
																}
															]
														},
														{
															"nativeSrc": "5375:40:1",
															"nodeType": "YulAssignment",
															"src": "5375:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5388:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5388:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "5399:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "5399:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "5409:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5409:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5395:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5395:3:1"
																		},
																		"nativeSrc": "5395:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5395:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5385:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5385:2:1"
																},
																"nativeSrc": "5385:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5385:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5375:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5375:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "5028:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5065:5:1",
														"nodeType": "YulTypedName",
														"src": "5065:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "5072:10:1",
														"nodeType": "YulTypedName",
														"src": "5072:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "5084:8:1",
														"nodeType": "YulTypedName",
														"src": "5084:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "5097:6:1",
														"nodeType": "YulTypedName",
														"src": "5097:6:1",
														"type": ""
													}
												],
												"src": "5028:393:1"
											},
											{
												"body": {
													"nativeSrc": "5459:28:1",
													"nodeType": "YulBlock",
													"src": "5459:28:1",
													"statements": [
														{
															"nativeSrc": "5469:12:1",
															"nodeType": "YulAssignment",
															"src": "5469:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5476:5:1",
																"nodeType": "YulIdentifier",
																"src": "5476:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5469:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5427:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5445:5:1",
														"nodeType": "YulTypedName",
														"src": "5445:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5455:3:1",
														"nodeType": "YulTypedName",
														"src": "5455:3:1",
														"type": ""
													}
												],
												"src": "5427:60:1"
											},
											{
												"body": {
													"nativeSrc": "5553:82:1",
													"nodeType": "YulBlock",
													"src": "5553:82:1",
													"statements": [
														{
															"nativeSrc": "5563:66:1",
															"nodeType": "YulAssignment",
															"src": "5563:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5621:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5621:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5603:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5603:17:1"
																				},
																				"nativeSrc": "5603:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5603:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5594:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "5594:8:1"
																		},
																		"nativeSrc": "5594:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5594:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5576:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "5576:17:1"
																},
																"nativeSrc": "5576:53:1",
																"nodeType": "YulFunctionCall",
																"src": "5576:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5563:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5563:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5493:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5533:5:1",
														"nodeType": "YulTypedName",
														"src": "5533:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5543:9:1",
														"nodeType": "YulTypedName",
														"src": "5543:9:1",
														"type": ""
													}
												],
												"src": "5493:142:1"
											},
											{
												"body": {
													"nativeSrc": "5688:28:1",
													"nodeType": "YulBlock",
													"src": "5688:28:1",
													"statements": [
														{
															"nativeSrc": "5698:12:1",
															"nodeType": "YulAssignment",
															"src": "5698:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "5705:5:1",
																"nodeType": "YulIdentifier",
																"src": "5705:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5698:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5698:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5641:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5674:5:1",
														"nodeType": "YulTypedName",
														"src": "5674:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5684:3:1",
														"nodeType": "YulTypedName",
														"src": "5684:3:1",
														"type": ""
													}
												],
												"src": "5641:75:1"
											},
											{
												"body": {
													"nativeSrc": "5798:193:1",
													"nodeType": "YulBlock",
													"src": "5798:193:1",
													"statements": [
														{
															"nativeSrc": "5808:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5808:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5863:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "5863:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5832:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "5832:30:1"
																},
																"nativeSrc": "5832:39:1",
																"nodeType": "YulFunctionCall",
																"src": "5832:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5812:16:1",
																	"nodeType": "YulTypedName",
																	"src": "5812:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5887:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5887:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5927:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "5927:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5921:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "5921:5:1"
																				},
																				"nativeSrc": "5921:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5921:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5934:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5934:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5966:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "5966:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5942:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "5942:23:1"
																				},
																				"nativeSrc": "5942:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5942:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5893:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "5893:27:1"
																		},
																		"nativeSrc": "5893:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5893:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5880:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5880:6:1"
																},
																"nativeSrc": "5880:105:1",
																"nodeType": "YulFunctionCall",
																"src": "5880:105:1"
															},
															"nativeSrc": "5880:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "5880:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5722:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5775:4:1",
														"nodeType": "YulTypedName",
														"src": "5775:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5781:6:1",
														"nodeType": "YulTypedName",
														"src": "5781:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5789:7:1",
														"nodeType": "YulTypedName",
														"src": "5789:7:1",
														"type": ""
													}
												],
												"src": "5722:269:1"
											},
											{
												"body": {
													"nativeSrc": "6046:24:1",
													"nodeType": "YulBlock",
													"src": "6046:24:1",
													"statements": [
														{
															"nativeSrc": "6056:8:1",
															"nodeType": "YulAssignment",
															"src": "6056:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "6063:1:1",
																"nodeType": "YulLiteral",
																"src": "6063:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6056:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5997:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6042:3:1",
														"nodeType": "YulTypedName",
														"src": "6042:3:1",
														"type": ""
													}
												],
												"src": "5997:73:1"
											},
											{
												"body": {
													"nativeSrc": "6129:136:1",
													"nodeType": "YulBlock",
													"src": "6129:136:1",
													"statements": [
														{
															"nativeSrc": "6139:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "6139:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "6153:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "6153:30:1"
																},
																"nativeSrc": "6153:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6153:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "6143:6:1",
																	"nodeType": "YulTypedName",
																	"src": "6143:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "6238:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "6238:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6244:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "6252:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6252:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "6194:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6194:43:1"
																},
																"nativeSrc": "6194:65:1",
																"nodeType": "YulFunctionCall",
																"src": "6194:65:1"
															},
															"nativeSrc": "6194:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "6194:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "6076:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "6115:4:1",
														"nodeType": "YulTypedName",
														"src": "6115:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "6121:6:1",
														"nodeType": "YulTypedName",
														"src": "6121:6:1",
														"type": ""
													}
												],
												"src": "6076:189:1"
											},
											{
												"body": {
													"nativeSrc": "6321:136:1",
													"nodeType": "YulBlock",
													"src": "6321:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6388:63:1",
																"nodeType": "YulBlock",
																"src": "6388:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6432:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6432:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6439:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6439:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "6402:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "6402:29:1"
																			},
																			"nativeSrc": "6402:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6402:39:1"
																		},
																		"nativeSrc": "6402:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "6341:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6341:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6348:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6338:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6338:2:1"
																},
																"nativeSrc": "6338:14:1",
																"nodeType": "YulFunctionCall",
																"src": "6338:14:1"
															},
															"nativeSrc": "6331:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6353:26:1",
																"nodeType": "YulBlock",
																"src": "6353:26:1",
																"statements": [
																	{
																		"nativeSrc": "6355:22:1",
																		"nodeType": "YulAssignment",
																		"src": "6355:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "6368:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6368:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6375:1:1",
																					"nodeType": "YulLiteral",
																					"src": "6375:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6364:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6364:3:1"
																			},
																			"nativeSrc": "6364:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6364:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "6355:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6355:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6335:2:1",
																"nodeType": "YulBlock",
																"src": "6335:2:1",
																"statements": []
															},
															"src": "6331:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "6271:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "6309:5:1",
														"nodeType": "YulTypedName",
														"src": "6309:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6316:3:1",
														"nodeType": "YulTypedName",
														"src": "6316:3:1",
														"type": ""
													}
												],
												"src": "6271:186:1"
											},
											{
												"body": {
													"nativeSrc": "6542:464:1",
													"nodeType": "YulBlock",
													"src": "6542:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6568:431:1",
																"nodeType": "YulBlock",
																"src": "6568:431:1",
																"statements": [
																	{
																		"nativeSrc": "6582:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6582:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6630:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "6630:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6598:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "6598:31:1"
																			},
																			"nativeSrc": "6598:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6598:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6586:8:1",
																				"nodeType": "YulTypedName",
																				"src": "6586:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6649:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6649:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6672:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "6672:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6700:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "6700:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6682:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "6682:17:1"
																					},
																					"nativeSrc": "6682:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6682:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6668:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "6668:3:1"
																			},
																			"nativeSrc": "6668:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6668:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6653:11:1",
																				"nodeType": "YulTypedName",
																				"src": "6653:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6869:27:1",
																			"nodeType": "YulBlock",
																			"src": "6869:27:1",
																			"statements": [
																				{
																					"nativeSrc": "6871:23:1",
																					"nodeType": "YulAssignment",
																					"src": "6871:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6886:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "6886:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6871:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "6871:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6853:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "6853:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6865:2:1",
																					"nodeType": "YulLiteral",
																					"src": "6865:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6850:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "6850:2:1"
																			},
																			"nativeSrc": "6850:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6850:18:1"
																		},
																		"nativeSrc": "6847:49:1",
																		"nodeType": "YulIf",
																		"src": "6847:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6938:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "6938:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6955:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "6955:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6983:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "6983:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6965:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "6965:17:1"
																							},
																							"nativeSrc": "6965:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6965:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6951:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "6951:3:1"
																					},
																					"nativeSrc": "6951:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6951:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6909:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "6909:28:1"
																			},
																			"nativeSrc": "6909:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6909:80:1"
																		},
																		"nativeSrc": "6909:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6909:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6559:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6559:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6564:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6564:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6556:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "6556:2:1"
																},
																"nativeSrc": "6556:11:1",
																"nodeType": "YulFunctionCall",
																"src": "6556:11:1"
															},
															"nativeSrc": "6553:446:1",
															"nodeType": "YulIf",
															"src": "6553:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6463:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6518:5:1",
														"nodeType": "YulTypedName",
														"src": "6518:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6525:3:1",
														"nodeType": "YulTypedName",
														"src": "6525:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6530:10:1",
														"nodeType": "YulTypedName",
														"src": "6530:10:1",
														"type": ""
													}
												],
												"src": "6463:543:1"
											},
											{
												"body": {
													"nativeSrc": "7075:54:1",
													"nodeType": "YulBlock",
													"src": "7075:54:1",
													"statements": [
														{
															"nativeSrc": "7085:37:1",
															"nodeType": "YulAssignment",
															"src": "7085:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "7110:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7110:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7116:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7116:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7106:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7106:3:1"
																},
																"nativeSrc": "7106:16:1",
																"nodeType": "YulFunctionCall",
																"src": "7106:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7085:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7085:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "7012:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "7050:4:1",
														"nodeType": "YulTypedName",
														"src": "7050:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "7056:5:1",
														"nodeType": "YulTypedName",
														"src": "7056:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7066:8:1",
														"nodeType": "YulTypedName",
														"src": "7066:8:1",
														"type": ""
													}
												],
												"src": "7012:117:1"
											},
											{
												"body": {
													"nativeSrc": "7186:118:1",
													"nodeType": "YulBlock",
													"src": "7186:118:1",
													"statements": [
														{
															"nativeSrc": "7196:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7196:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7245:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7245:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "7248:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "7248:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "7241:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7241:3:1"
																				},
																				"nativeSrc": "7241:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7241:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "7260:1:1",
																						"nodeType": "YulLiteral",
																						"src": "7260:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "7256:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7256:3:1"
																				},
																				"nativeSrc": "7256:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7256:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "7212:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "7212:28:1"
																		},
																		"nativeSrc": "7212:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7212:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "7208:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7208:3:1"
																},
																"nativeSrc": "7208:56:1",
																"nodeType": "YulFunctionCall",
																"src": "7208:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "7200:4:1",
																	"nodeType": "YulTypedName",
																	"src": "7200:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7273:25:1",
															"nodeType": "YulAssignment",
															"src": "7273:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7287:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7287:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "7293:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7293:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7283:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7283:3:1"
																},
																"nativeSrc": "7283:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7283:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "7273:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "7135:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7163:4:1",
														"nodeType": "YulTypedName",
														"src": "7163:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "7169:5:1",
														"nodeType": "YulTypedName",
														"src": "7169:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "7179:6:1",
														"nodeType": "YulTypedName",
														"src": "7179:6:1",
														"type": ""
													}
												],
												"src": "7135:169:1"
											},
											{
												"body": {
													"nativeSrc": "7390:214:1",
													"nodeType": "YulBlock",
													"src": "7390:214:1",
													"statements": [
														{
															"nativeSrc": "7523:37:1",
															"nodeType": "YulAssignment",
															"src": "7523:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7550:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7550:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7556:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7556:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7531:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "7531:18:1"
																},
																"nativeSrc": "7531:29:1",
																"nodeType": "YulFunctionCall",
																"src": "7531:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7523:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7523:4:1"
																}
															]
														},
														{
															"nativeSrc": "7569:29:1",
															"nodeType": "YulAssignment",
															"src": "7569:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7580:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "7580:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7590:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7590:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7593:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7593:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7586:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7586:3:1"
																		},
																		"nativeSrc": "7586:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7586:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7577:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:1"
																},
																"nativeSrc": "7577:21:1",
																"nodeType": "YulFunctionCall",
																"src": "7577:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7569:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7569:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "7309:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7371:4:1",
														"nodeType": "YulTypedName",
														"src": "7371:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "7377:3:1",
														"nodeType": "YulTypedName",
														"src": "7377:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "7385:4:1",
														"nodeType": "YulTypedName",
														"src": "7385:4:1",
														"type": ""
													}
												],
												"src": "7309:295:1"
											},
											{
												"body": {
													"nativeSrc": "7701:1303:1",
													"nodeType": "YulBlock",
													"src": "7701:1303:1",
													"statements": [
														{
															"nativeSrc": "7712:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7712:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7759:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7759:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7726:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "7726:32:1"
																},
																"nativeSrc": "7726:37:1",
																"nodeType": "YulFunctionCall",
																"src": "7726:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7716:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7716:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7848:22:1",
																"nodeType": "YulBlock",
																"src": "7848:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7850:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "7850:16:1"
																			},
																			"nativeSrc": "7850:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7850:18:1"
																		},
																		"nativeSrc": "7850:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7850:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7820:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7820:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7828:18:1",
																		"nodeType": "YulLiteral",
																		"src": "7828:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7817:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7817:2:1"
																},
																"nativeSrc": "7817:30:1",
																"nodeType": "YulFunctionCall",
																"src": "7817:30:1"
															},
															"nativeSrc": "7814:56:1",
															"nodeType": "YulIf",
															"src": "7814:56:1"
														},
														{
															"nativeSrc": "7880:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "7880:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7926:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7926:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7920:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "7920:5:1"
																		},
																		"nativeSrc": "7920:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7920:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7894:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "7894:25:1"
																},
																"nativeSrc": "7894:38:1",
																"nodeType": "YulFunctionCall",
																"src": "7894:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7884:6:1",
																	"nodeType": "YulTypedName",
																	"src": "7884:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "8025:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8025:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "8031:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8031:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "8039:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8039:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7979:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "7979:45:1"
																},
																"nativeSrc": "7979:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7979:67:1"
															},
															"nativeSrc": "7979:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "7979:67:1"
														},
														{
															"nativeSrc": "8056:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8056:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8073:1:1",
																"nodeType": "YulLiteral",
																"src": "8073:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8060:9:1",
																	"nodeType": "YulTypedName",
																	"src": "8060:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8084:17:1",
															"nodeType": "YulAssignment",
															"src": "8084:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "8097:4:1",
																"nodeType": "YulLiteral",
																"src": "8097:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "8084:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "8084:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8148:611:1",
																		"nodeType": "YulBlock",
																		"src": "8148:611:1",
																		"statements": [
																			{
																				"nativeSrc": "8162:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8162:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "8181:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8181:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "8193:4:1",
																									"nodeType": "YulLiteral",
																									"src": "8193:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "8189:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8189:3:1"
																							},
																							"nativeSrc": "8189:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8189:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "8177:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8177:3:1"
																					},
																					"nativeSrc": "8177:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8177:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "8166:7:1",
																						"nodeType": "YulTypedName",
																						"src": "8166:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8213:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8213:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8259:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8259:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "8227:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "8227:31:1"
																					},
																					"nativeSrc": "8227:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8227:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "8217:6:1",
																						"nodeType": "YulTypedName",
																						"src": "8217:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "8277:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8277:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8286:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8286:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "8281:1:1",
																						"nodeType": "YulTypedName",
																						"src": "8281:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8345:163:1",
																					"nodeType": "YulBlock",
																					"src": "8345:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8370:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8370:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "8388:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "8388:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "8393:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "8393:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "8384:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8384:3:1"
																												},
																												"nativeSrc": "8384:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8384:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "8378:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "8378:5:1"
																										},
																										"nativeSrc": "8378:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8378:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8363:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8363:6:1"
																								},
																								"nativeSrc": "8363:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8363:42:1"
																							},
																							"nativeSrc": "8363:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8363:42:1"
																						},
																						{
																							"nativeSrc": "8422:24:1",
																							"nodeType": "YulAssignment",
																							"src": "8422:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8436:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8436:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8444:1:1",
																										"nodeType": "YulLiteral",
																										"src": "8444:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8432:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8432:3:1"
																								},
																								"nativeSrc": "8432:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8432:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "8422:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8422:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8463:31:1",
																							"nodeType": "YulAssignment",
																							"src": "8463:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8480:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "8480:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8491:2:1",
																										"nodeType": "YulLiteral",
																										"src": "8491:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8476:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8476:3:1"
																								},
																								"nativeSrc": "8476:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8476:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8463:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "8463:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "8311:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "8311:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8314:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8314:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8308:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8308:2:1"
																					},
																					"nativeSrc": "8308:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8308:14:1"
																				},
																				"nativeSrc": "8300:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "8323:21:1",
																					"nodeType": "YulBlock",
																					"src": "8323:21:1",
																					"statements": [
																						{
																							"nativeSrc": "8325:17:1",
																							"nodeType": "YulAssignment",
																							"src": "8325:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "8334:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "8334:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8337:4:1",
																										"nodeType": "YulLiteral",
																										"src": "8337:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8330:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "8330:3:1"
																								},
																								"nativeSrc": "8330:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8330:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "8325:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "8325:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "8304:3:1",
																					"nodeType": "YulBlock",
																					"src": "8304:3:1",
																					"statements": []
																				},
																				"src": "8300:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "8544:156:1",
																					"nodeType": "YulBlock",
																					"src": "8544:156:1",
																					"statements": [
																						{
																							"nativeSrc": "8562:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8562:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8589:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8589:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8594:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8594:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8585:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8585:3:1"
																										},
																										"nativeSrc": "8585:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8585:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8579:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8579:5:1"
																								},
																								"nativeSrc": "8579:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8579:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8566:9:1",
																									"nodeType": "YulTypedName",
																									"src": "8566:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8629:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "8629:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8656:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8656:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8671:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "8671:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8679:4:1",
																														"nodeType": "YulLiteral",
																														"src": "8679:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8667:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "8667:3:1"
																												},
																												"nativeSrc": "8667:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "8667:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8637:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "8637:18:1"
																										},
																										"nativeSrc": "8637:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8637:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8622:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8622:6:1"
																								},
																								"nativeSrc": "8622:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8622:64:1"
																							},
																							"nativeSrc": "8622:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8622:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8527:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "8527:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8536:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "8536:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8524:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8524:2:1"
																					},
																					"nativeSrc": "8524:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8524:19:1"
																				},
																				"nativeSrc": "8521:179:1",
																				"nodeType": "YulIf",
																				"src": "8521:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8720:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8720:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8734:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "8734:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8742:1:1",
																											"nodeType": "YulLiteral",
																											"src": "8742:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8730:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "8730:3:1"
																									},
																									"nativeSrc": "8730:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "8730:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8746:1:1",
																									"nodeType": "YulLiteral",
																									"src": "8746:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8726:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "8726:3:1"
																							},
																							"nativeSrc": "8726:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8726:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8713:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8713:6:1"
																					},
																					"nativeSrc": "8713:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8713:36:1"
																				},
																				"nativeSrc": "8713:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8713:36:1"
																			}
																		]
																	},
																	"nativeSrc": "8141:618:1",
																	"nodeType": "YulCase",
																	"src": "8141:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8146:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8146:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8776:222:1",
																		"nodeType": "YulBlock",
																		"src": "8776:222:1",
																		"statements": [
																			{
																				"nativeSrc": "8790:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8790:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8803:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8803:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8794:5:1",
																						"nodeType": "YulTypedName",
																						"src": "8794:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8827:67:1",
																					"nodeType": "YulBlock",
																					"src": "8827:67:1",
																					"statements": [
																						{
																							"nativeSrc": "8845:35:1",
																							"nodeType": "YulAssignment",
																							"src": "8845:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8864:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "8864:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8869:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "8869:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8860:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "8860:3:1"
																										},
																										"nativeSrc": "8860:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "8860:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8854:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8854:5:1"
																								},
																								"nativeSrc": "8854:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8854:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8845:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8845:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8820:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8820:6:1"
																				},
																				"nativeSrc": "8817:77:1",
																				"nodeType": "YulIf",
																				"src": "8817:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8914:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "8914:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8973:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "8973:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8980:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "8980:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8920:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "8920:52:1"
																							},
																							"nativeSrc": "8920:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "8920:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8907:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "8907:6:1"
																					},
																					"nativeSrc": "8907:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8907:81:1"
																				},
																				"nativeSrc": "8907:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "8907:81:1"
																			}
																		]
																	},
																	"nativeSrc": "8768:230:1",
																	"nodeType": "YulCase",
																	"src": "8768:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "8121:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8121:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8129:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8118:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8118:2:1"
																},
																"nativeSrc": "8118:14:1",
																"nodeType": "YulFunctionCall",
																"src": "8118:14:1"
															},
															"nativeSrc": "8111:887:1",
															"nodeType": "YulSwitch",
															"src": "8111:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7609:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7690:4:1",
														"nodeType": "YulTypedName",
														"src": "7690:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7696:3:1",
														"nodeType": "YulTypedName",
														"src": "7696:3:1",
														"type": ""
													}
												],
												"src": "7609:1395:1"
											},
											{
												"body": {
													"nativeSrc": "9038:152:1",
													"nodeType": "YulBlock",
													"src": "9038:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9055:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9055:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9058:77:1",
																		"nodeType": "YulLiteral",
																		"src": "9058:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9048:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:1"
																},
																"nativeSrc": "9048:88:1",
																"nodeType": "YulFunctionCall",
																"src": "9048:88:1"
															},
															"nativeSrc": "9048:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "9048:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9152:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9152:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9155:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9155:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9145:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9145:6:1"
																},
																"nativeSrc": "9145:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9145:15:1"
															},
															"nativeSrc": "9145:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9145:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9176:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9176:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9179:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9179:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9169:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9169:6:1"
																},
																"nativeSrc": "9169:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9169:15:1"
															},
															"nativeSrc": "9169:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9169:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9010:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9010:180:1"
											},
											{
												"body": {
													"nativeSrc": "9247:51:1",
													"nodeType": "YulBlock",
													"src": "9247:51:1",
													"statements": [
														{
															"nativeSrc": "9257:34:1",
															"nodeType": "YulAssignment",
															"src": "9257:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9282:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9282:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9285:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9285:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9278:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9278:3:1"
																},
																"nativeSrc": "9278:13:1",
																"nodeType": "YulFunctionCall",
																"src": "9278:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9257:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "9257:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "9196:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9228:5:1",
														"nodeType": "YulTypedName",
														"src": "9228:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9238:8:1",
														"nodeType": "YulTypedName",
														"src": "9238:8:1",
														"type": ""
													}
												],
												"src": "9196:102:1"
											},
											{
												"body": {
													"nativeSrc": "9377:775:1",
													"nodeType": "YulBlock",
													"src": "9377:775:1",
													"statements": [
														{
															"nativeSrc": "9387:15:1",
															"nodeType": "YulAssignment",
															"src": "9387:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "9396:6:1",
																"nodeType": "YulIdentifier",
																"src": "9396:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9387:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9387:5:1"
																}
															]
														},
														{
															"nativeSrc": "9411:14:1",
															"nodeType": "YulAssignment",
															"src": "9411:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "9420:5:1",
																"nodeType": "YulIdentifier",
																"src": "9420:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9411:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9411:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9469:677:1",
																"nodeType": "YulBlock",
																"src": "9469:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "9557:22:1",
																			"nodeType": "YulBlock",
																			"src": "9557:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "9559:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "9559:16:1"
																						},
																						"nativeSrc": "9559:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9559:18:1"
																					},
																					"nativeSrc": "9559:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "9559:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "9535:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "9535:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "9545:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9545:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "9550:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "9550:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "9541:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "9541:3:1"
																					},
																					"nativeSrc": "9541:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "9541:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "9532:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "9532:2:1"
																			},
																			"nativeSrc": "9532:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9532:24:1"
																		},
																		"nativeSrc": "9529:50:1",
																		"nodeType": "YulIf",
																		"src": "9529:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "9624:419:1",
																			"nodeType": "YulBlock",
																			"src": "9624:419:1",
																			"statements": [
																				{
																					"nativeSrc": "10004:25:1",
																					"nodeType": "YulAssignment",
																					"src": "10004:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "10017:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "10017:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "10024:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "10024:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "10013:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10013:3:1"
																						},
																						"nativeSrc": "10013:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "10013:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "10004:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "10004:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "9599:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "9599:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9609:1:1",
																					"nodeType": "YulLiteral",
																					"src": "9609:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9595:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9595:3:1"
																			},
																			"nativeSrc": "9595:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9595:16:1"
																		},
																		"nativeSrc": "9592:451:1",
																		"nodeType": "YulIf",
																		"src": "9592:451:1"
																	},
																	{
																		"nativeSrc": "10056:23:1",
																		"nodeType": "YulAssignment",
																		"src": "10056:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10068:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "10068:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "10074:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "10074:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "10064:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10064:3:1"
																			},
																			"nativeSrc": "10064:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10064:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "10056:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "10056:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10092:44:1",
																		"nodeType": "YulAssignment",
																		"src": "10092:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "10127:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "10127:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "10104:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "10104:22:1"
																			},
																			"nativeSrc": "10104:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10104:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "10092:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "10092:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9445:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9445:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9455:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9455:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9442:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9442:2:1"
																},
																"nativeSrc": "9442:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9442:15:1"
															},
															"nativeSrc": "9434:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9458:2:1",
																"nodeType": "YulBlock",
																"src": "9458:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "9438:3:1",
																"nodeType": "YulBlock",
																"src": "9438:3:1",
																"statements": []
															},
															"src": "9434:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "9304:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "9332:6:1",
														"nodeType": "YulTypedName",
														"src": "9332:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "9340:5:1",
														"nodeType": "YulTypedName",
														"src": "9340:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9347:8:1",
														"nodeType": "YulTypedName",
														"src": "9347:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "9357:3:1",
														"nodeType": "YulTypedName",
														"src": "9357:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9365:5:1",
														"nodeType": "YulTypedName",
														"src": "9365:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "9372:4:1",
														"nodeType": "YulTypedName",
														"src": "9372:4:1",
														"type": ""
													}
												],
												"src": "9304:848:1"
											},
											{
												"body": {
													"nativeSrc": "10218:1013:1",
													"nodeType": "YulBlock",
													"src": "10218:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "10413:20:1",
																"nodeType": "YulBlock",
																"src": "10413:20:1",
																"statements": [
																	{
																		"nativeSrc": "10415:10:1",
																		"nodeType": "YulAssignment",
																		"src": "10415:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10424:1:1",
																			"nodeType": "YulLiteral",
																			"src": "10424:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10415:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10415:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10426:5:1",
																		"nodeType": "YulLeave",
																		"src": "10426:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "10403:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "10403:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10396:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10396:6:1"
																},
																"nativeSrc": "10396:16:1",
																"nodeType": "YulFunctionCall",
																"src": "10396:16:1"
															},
															"nativeSrc": "10393:40:1",
															"nodeType": "YulIf",
															"src": "10393:40:1"
														},
														{
															"body": {
																"nativeSrc": "10458:20:1",
																"nodeType": "YulBlock",
																"src": "10458:20:1",
																"statements": [
																	{
																		"nativeSrc": "10460:10:1",
																		"nodeType": "YulAssignment",
																		"src": "10460:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "10469:1:1",
																			"nodeType": "YulLiteral",
																			"src": "10469:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10460:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10460:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "10471:5:1",
																		"nodeType": "YulLeave",
																		"src": "10471:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "10452:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "10452:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10445:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10445:6:1"
																},
																"nativeSrc": "10445:12:1",
																"nodeType": "YulFunctionCall",
																"src": "10445:12:1"
															},
															"nativeSrc": "10442:36:1",
															"nodeType": "YulIf",
															"src": "10442:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "10588:20:1",
																		"nodeType": "YulBlock",
																		"src": "10588:20:1",
																		"statements": [
																			{
																				"nativeSrc": "10590:10:1",
																				"nodeType": "YulAssignment",
																				"src": "10590:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "10599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "10599:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10590:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "10590:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "10601:5:1",
																				"nodeType": "YulLeave",
																				"src": "10601:5:1"
																			}
																		]
																	},
																	"nativeSrc": "10581:27:1",
																	"nodeType": "YulCase",
																	"src": "10581:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10586:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10586:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "10632:176:1",
																		"nodeType": "YulBlock",
																		"src": "10632:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "10667:22:1",
																					"nodeType": "YulBlock",
																					"src": "10667:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10669:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "10669:16:1"
																								},
																								"nativeSrc": "10669:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "10669:18:1"
																							},
																							"nativeSrc": "10669:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "10669:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "10652:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "10652:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10662:3:1",
																							"nodeType": "YulLiteral",
																							"src": "10662:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10649:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "10649:2:1"
																					},
																					"nativeSrc": "10649:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10649:17:1"
																				},
																				"nativeSrc": "10646:43:1",
																				"nodeType": "YulIf",
																				"src": "10646:43:1"
																			},
																			{
																				"nativeSrc": "10702:25:1",
																				"nodeType": "YulAssignment",
																				"src": "10702:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10715:1:1",
																							"nodeType": "YulLiteral",
																							"src": "10715:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "10718:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "10718:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "10711:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "10711:3:1"
																					},
																					"nativeSrc": "10711:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10711:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "10702:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "10702:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "10758:22:1",
																					"nodeType": "YulBlock",
																					"src": "10758:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "10760:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "10760:16:1"
																								},
																								"nativeSrc": "10760:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "10760:18:1"
																							},
																							"nativeSrc": "10760:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "10760:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "10746:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "10746:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "10753:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "10753:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "10743:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "10743:2:1"
																					},
																					"nativeSrc": "10743:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "10743:14:1"
																				},
																				"nativeSrc": "10740:40:1",
																				"nodeType": "YulIf",
																				"src": "10740:40:1"
																			},
																			{
																				"nativeSrc": "10793:5:1",
																				"nodeType": "YulLeave",
																				"src": "10793:5:1"
																			}
																		]
																	},
																	"nativeSrc": "10617:191:1",
																	"nodeType": "YulCase",
																	"src": "10617:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10622:1:1",
																		"nodeType": "YulLiteral",
																		"src": "10622:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "10538:4:1",
																"nodeType": "YulIdentifier",
																"src": "10538:4:1"
															},
															"nativeSrc": "10531:277:1",
															"nodeType": "YulSwitch",
															"src": "10531:277:1"
														},
														{
															"body": {
																"nativeSrc": "10940:123:1",
																"nodeType": "YulBlock",
																"src": "10940:123:1",
																"statements": [
																	{
																		"nativeSrc": "10954:28:1",
																		"nodeType": "YulAssignment",
																		"src": "10954:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "10967:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "10967:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "10973:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "10973:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "10963:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "10963:3:1"
																			},
																			"nativeSrc": "10963:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10963:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "10954:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10954:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11013:22:1",
																			"nodeType": "YulBlock",
																			"src": "11013:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "11015:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "11015:16:1"
																						},
																						"nativeSrc": "11015:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11015:18:1"
																					},
																					"nativeSrc": "11015:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "11015:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "11001:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "11001:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "11008:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "11008:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "10998:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "10998:2:1"
																			},
																			"nativeSrc": "10998:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10998:14:1"
																		},
																		"nativeSrc": "10995:40:1",
																		"nodeType": "YulIf",
																		"src": "10995:40:1"
																	},
																	{
																		"nativeSrc": "11048:5:1",
																		"nodeType": "YulLeave",
																		"src": "11048:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10843:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "10843:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10849:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10849:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10840:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10840:2:1"
																				},
																				"nativeSrc": "10840:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10840:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10857:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "10857:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10867:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10867:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10854:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10854:2:1"
																				},
																				"nativeSrc": "10854:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10854:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10836:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10836:3:1"
																		},
																		"nativeSrc": "10836:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10836:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "10892:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "10892:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10898:3:1",
																						"nodeType": "YulLiteral",
																						"src": "10898:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10889:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10889:2:1"
																				},
																				"nativeSrc": "10889:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10889:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "10907:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "10907:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10917:2:1",
																						"nodeType": "YulLiteral",
																						"src": "10917:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "10904:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "10904:2:1"
																				},
																				"nativeSrc": "10904:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "10904:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10885:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10885:3:1"
																		},
																		"nativeSrc": "10885:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10885:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10820:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10820:2:1"
																},
																"nativeSrc": "10820:111:1",
																"nodeType": "YulFunctionCall",
																"src": "10820:111:1"
															},
															"nativeSrc": "10817:246:1",
															"nodeType": "YulIf",
															"src": "10817:246:1"
														},
														{
															"nativeSrc": "11073:57:1",
															"nodeType": "YulAssignment",
															"src": "11073:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11107:1:1",
																		"nodeType": "YulLiteral",
																		"src": "11107:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11110:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11110:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11116:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "11116:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "11126:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "11126:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "11088:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "11088:18:1"
																},
																"nativeSrc": "11088:42:1",
																"nodeType": "YulFunctionCall",
																"src": "11088:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11073:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11073:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "11080:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11080:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11169:22:1",
																"nodeType": "YulBlock",
																"src": "11169:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11171:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11171:16:1"
																			},
																			"nativeSrc": "11171:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11171:18:1"
																		},
																		"nativeSrc": "11171:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11171:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11146:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11146:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "11157:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "11157:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "11162:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "11162:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "11153:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "11153:3:1"
																		},
																		"nativeSrc": "11153:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11153:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11143:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "11143:2:1"
																},
																"nativeSrc": "11143:25:1",
																"nodeType": "YulFunctionCall",
																"src": "11143:25:1"
															},
															"nativeSrc": "11140:51:1",
															"nodeType": "YulIf",
															"src": "11140:51:1"
														},
														{
															"nativeSrc": "11200:25:1",
															"nodeType": "YulAssignment",
															"src": "11200:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "11213:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "11213:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "11220:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11220:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11209:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11209:3:1"
																},
																"nativeSrc": "11209:16:1",
																"nodeType": "YulFunctionCall",
																"src": "11209:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11200:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11200:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "10158:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "10188:4:1",
														"nodeType": "YulTypedName",
														"src": "10188:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "10194:8:1",
														"nodeType": "YulTypedName",
														"src": "10194:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "10204:3:1",
														"nodeType": "YulTypedName",
														"src": "10204:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "10212:5:1",
														"nodeType": "YulTypedName",
														"src": "10212:5:1",
														"type": ""
													}
												],
												"src": "10158:1073:1"
											},
											{
												"body": {
													"nativeSrc": "11303:219:1",
													"nodeType": "YulBlock",
													"src": "11303:219:1",
													"statements": [
														{
															"nativeSrc": "11313:31:1",
															"nodeType": "YulAssignment",
															"src": "11313:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11339:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11339:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11321:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11321:17:1"
																},
																"nativeSrc": "11321:23:1",
																"nodeType": "YulFunctionCall",
																"src": "11321:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "11313:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "11313:4:1"
																}
															]
														},
														{
															"nativeSrc": "11353:39:1",
															"nodeType": "YulAssignment",
															"src": "11353:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "11383:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "11383:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11365:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11365:17:1"
																},
																"nativeSrc": "11365:27:1",
																"nodeType": "YulFunctionCall",
																"src": "11365:27:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "11353:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "11353:8:1"
																}
															]
														},
														{
															"nativeSrc": "11402:113:1",
															"nodeType": "YulAssignment",
															"src": "11402:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "11432:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "11432:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "11438:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "11438:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11448:66:1",
																		"nodeType": "YulLiteral",
																		"src": "11448:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "11411:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "11411:20:1"
																},
																"nativeSrc": "11411:104:1",
																"nodeType": "YulFunctionCall",
																"src": "11411:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "11402:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "11402:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint256",
												"nativeSrc": "11237:285:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "11278:4:1",
														"nodeType": "YulTypedName",
														"src": "11278:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "11284:8:1",
														"nodeType": "YulTypedName",
														"src": "11284:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "11297:5:1",
														"nodeType": "YulTypedName",
														"src": "11297:5:1",
														"type": ""
													}
												],
												"src": "11237:285:1"
											},
											{
												"body": {
													"nativeSrc": "11576:362:1",
													"nodeType": "YulBlock",
													"src": "11576:362:1",
													"statements": [
														{
															"nativeSrc": "11586:25:1",
															"nodeType": "YulAssignment",
															"src": "11586:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11609:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11609:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11591:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11591:17:1"
																},
																"nativeSrc": "11591:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11591:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11586:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11586:1:1"
																}
															]
														},
														{
															"nativeSrc": "11620:25:1",
															"nodeType": "YulAssignment",
															"src": "11620:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11643:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11643:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11625:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11625:17:1"
																},
																"nativeSrc": "11625:20:1",
																"nodeType": "YulFunctionCall",
																"src": "11625:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11620:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "11620:1:1"
																}
															]
														},
														{
															"nativeSrc": "11654:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "11654:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11677:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11677:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11680:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "11680:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11673:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "11673:3:1"
																},
																"nativeSrc": "11673:9:1",
																"nodeType": "YulFunctionCall",
																"src": "11673:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "11658:11:1",
																	"nodeType": "YulTypedName",
																	"src": "11658:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11691:41:1",
															"nodeType": "YulAssignment",
															"src": "11691:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11720:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "11720:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11702:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "11702:17:1"
																},
																"nativeSrc": "11702:30:1",
																"nodeType": "YulFunctionCall",
																"src": "11702:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11691:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "11691:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11909:22:1",
																"nodeType": "YulBlock",
																"src": "11909:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11911:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "11911:16:1"
																			},
																			"nativeSrc": "11911:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "11911:18:1"
																		},
																		"nativeSrc": "11911:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "11911:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11842:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "11842:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11835:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "11835:6:1"
																				},
																				"nativeSrc": "11835:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11835:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11865:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "11865:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11872:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "11872:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11881:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "11881:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11868:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "11868:3:1"
																						},
																						"nativeSrc": "11868:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "11868:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11862:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "11862:2:1"
																				},
																				"nativeSrc": "11862:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "11862:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11815:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "11815:2:1"
																		},
																		"nativeSrc": "11815:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "11815:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11795:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "11795:6:1"
																},
																"nativeSrc": "11795:113:1",
																"nodeType": "YulFunctionCall",
																"src": "11795:113:1"
															},
															"nativeSrc": "11792:139:1",
															"nodeType": "YulIf",
															"src": "11792:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "11528:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11559:1:1",
														"nodeType": "YulTypedName",
														"src": "11559:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11562:1:1",
														"nodeType": "YulTypedName",
														"src": "11562:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "11568:7:1",
														"nodeType": "YulTypedName",
														"src": "11568:7:1",
														"type": ""
													}
												],
												"src": "11528:410:1"
											},
											{
												"body": {
													"nativeSrc": "11989:81:1",
													"nodeType": "YulBlock",
													"src": "11989:81:1",
													"statements": [
														{
															"nativeSrc": "11999:65:1",
															"nodeType": "YulAssignment",
															"src": "11999:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12014:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12014:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12021:42:1",
																		"nodeType": "YulLiteral",
																		"src": "12021:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12010:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12010:3:1"
																},
																"nativeSrc": "12010:54:1",
																"nodeType": "YulFunctionCall",
																"src": "12010:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "11999:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "11999:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "11944:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11971:5:1",
														"nodeType": "YulTypedName",
														"src": "11971:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "11981:7:1",
														"nodeType": "YulTypedName",
														"src": "11981:7:1",
														"type": ""
													}
												],
												"src": "11944:126:1"
											},
											{
												"body": {
													"nativeSrc": "12121:51:1",
													"nodeType": "YulBlock",
													"src": "12121:51:1",
													"statements": [
														{
															"nativeSrc": "12131:35:1",
															"nodeType": "YulAssignment",
															"src": "12131:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12160:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "12160:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "12142:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12142:17:1"
																},
																"nativeSrc": "12142:24:1",
																"nodeType": "YulFunctionCall",
																"src": "12142:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "12131:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "12131:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "12076:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12103:5:1",
														"nodeType": "YulTypedName",
														"src": "12103:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "12113:7:1",
														"nodeType": "YulTypedName",
														"src": "12113:7:1",
														"type": ""
													}
												],
												"src": "12076:96:1"
											},
											{
												"body": {
													"nativeSrc": "12243:53:1",
													"nodeType": "YulBlock",
													"src": "12243:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12260:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12260:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "12265:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "12265:17:1"
																		},
																		"nativeSrc": "12265:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12265:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12253:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12253:6:1"
																},
																"nativeSrc": "12253:37:1",
																"nodeType": "YulFunctionCall",
																"src": "12253:37:1"
															},
															"nativeSrc": "12253:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "12253:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "12178:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12231:5:1",
														"nodeType": "YulTypedName",
														"src": "12231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12238:3:1",
														"nodeType": "YulTypedName",
														"src": "12238:3:1",
														"type": ""
													}
												],
												"src": "12178:118:1"
											},
											{
												"body": {
													"nativeSrc": "12400:124:1",
													"nodeType": "YulBlock",
													"src": "12400:124:1",
													"statements": [
														{
															"nativeSrc": "12410:26:1",
															"nodeType": "YulAssignment",
															"src": "12410:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12422:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "12422:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12433:2:1",
																		"nodeType": "YulLiteral",
																		"src": "12433:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12418:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12418:3:1"
																},
																"nativeSrc": "12418:18:1",
																"nodeType": "YulFunctionCall",
																"src": "12418:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12410:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "12410:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12490:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "12490:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12503:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "12503:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12514:1:1",
																				"nodeType": "YulLiteral",
																				"src": "12514:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12499:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "12499:3:1"
																		},
																		"nativeSrc": "12499:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12499:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12446:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "12446:43:1"
																},
																"nativeSrc": "12446:71:1",
																"nodeType": "YulFunctionCall",
																"src": "12446:71:1"
															},
															"nativeSrc": "12446:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "12446:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12302:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12372:9:1",
														"nodeType": "YulTypedName",
														"src": "12372:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12384:6:1",
														"nodeType": "YulTypedName",
														"src": "12384:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12395:4:1",
														"nodeType": "YulTypedName",
														"src": "12395:4:1",
														"type": ""
													}
												],
												"src": "12302:222:1"
											},
											{
												"body": {
													"nativeSrc": "12574:147:1",
													"nodeType": "YulBlock",
													"src": "12574:147:1",
													"statements": [
														{
															"nativeSrc": "12584:25:1",
															"nodeType": "YulAssignment",
															"src": "12584:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12607:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12607:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12589:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12589:17:1"
																},
																"nativeSrc": "12589:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12589:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12584:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12584:1:1"
																}
															]
														},
														{
															"nativeSrc": "12618:25:1",
															"nodeType": "YulAssignment",
															"src": "12618:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12641:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12641:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12623:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "12623:17:1"
																},
																"nativeSrc": "12623:20:1",
																"nodeType": "YulFunctionCall",
																"src": "12623:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12618:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "12618:1:1"
																}
															]
														},
														{
															"nativeSrc": "12652:16:1",
															"nodeType": "YulAssignment",
															"src": "12652:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12663:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12663:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12666:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12666:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12659:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12659:3:1"
																},
																"nativeSrc": "12659:9:1",
																"nodeType": "YulFunctionCall",
																"src": "12659:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12652:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "12652:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12692:22:1",
																"nodeType": "YulBlock",
																"src": "12692:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12694:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "12694:16:1"
																			},
																			"nativeSrc": "12694:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "12694:18:1"
																		},
																		"nativeSrc": "12694:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "12694:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12684:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "12684:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12687:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12687:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12681:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "12681:2:1"
																},
																"nativeSrc": "12681:10:1",
																"nodeType": "YulFunctionCall",
																"src": "12681:10:1"
															},
															"nativeSrc": "12678:36:1",
															"nodeType": "YulIf",
															"src": "12678:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12530:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12561:1:1",
														"nodeType": "YulTypedName",
														"src": "12561:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12564:1:1",
														"nodeType": "YulTypedName",
														"src": "12564:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12570:3:1",
														"nodeType": "YulTypedName",
														"src": "12570:3:1",
														"type": ""
													}
												],
												"src": "12530:191:1"
											},
											{
												"body": {
													"nativeSrc": "12792:53:1",
													"nodeType": "YulBlock",
													"src": "12792:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12809:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "12809:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12832:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "12832:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12814:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "12814:17:1"
																		},
																		"nativeSrc": "12814:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "12814:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12802:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "12802:6:1"
																},
																"nativeSrc": "12802:37:1",
																"nodeType": "YulFunctionCall",
																"src": "12802:37:1"
															},
															"nativeSrc": "12802:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "12802:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "12727:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12780:5:1",
														"nodeType": "YulTypedName",
														"src": "12780:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12787:3:1",
														"nodeType": "YulTypedName",
														"src": "12787:3:1",
														"type": ""
													}
												],
												"src": "12727:118:1"
											},
											{
												"body": {
													"nativeSrc": "13005:288:1",
													"nodeType": "YulBlock",
													"src": "13005:288:1",
													"statements": [
														{
															"nativeSrc": "13015:26:1",
															"nodeType": "YulAssignment",
															"src": "13015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13027:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13027:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13038:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13038:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13023:3:1"
																},
																"nativeSrc": "13023:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13023:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13015:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13015:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13095:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13095:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13108:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13108:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13119:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13119:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13104:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13104:3:1"
																		},
																		"nativeSrc": "13104:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13104:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13051:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13051:43:1"
																},
																"nativeSrc": "13051:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13051:71:1"
															},
															"nativeSrc": "13051:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13051:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13176:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13176:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13189:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13189:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13200:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13200:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13185:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13185:3:1"
																		},
																		"nativeSrc": "13185:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13185:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13132:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13132:43:1"
																},
																"nativeSrc": "13132:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13132:72:1"
															},
															"nativeSrc": "13132:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13132:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13258:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13258:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13271:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13271:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13282:2:1",
																				"nodeType": "YulLiteral",
																				"src": "13282:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13267:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13267:3:1"
																		},
																		"nativeSrc": "13267:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13267:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13214:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13214:43:1"
																},
																"nativeSrc": "13214:72:1",
																"nodeType": "YulFunctionCall",
																"src": "13214:72:1"
															},
															"nativeSrc": "13214:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "13214:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12851:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12961:9:1",
														"nodeType": "YulTypedName",
														"src": "12961:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12973:6:1",
														"nodeType": "YulTypedName",
														"src": "12973:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12981:6:1",
														"nodeType": "YulTypedName",
														"src": "12981:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12989:6:1",
														"nodeType": "YulTypedName",
														"src": "12989:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13000:4:1",
														"nodeType": "YulTypedName",
														"src": "13000:4:1",
														"type": ""
													}
												],
												"src": "12851:442:1"
											},
											{
												"body": {
													"nativeSrc": "13397:124:1",
													"nodeType": "YulBlock",
													"src": "13397:124:1",
													"statements": [
														{
															"nativeSrc": "13407:26:1",
															"nodeType": "YulAssignment",
															"src": "13407:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13419:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "13419:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13430:2:1",
																		"nodeType": "YulLiteral",
																		"src": "13430:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13415:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "13415:3:1"
																},
																"nativeSrc": "13415:18:1",
																"nodeType": "YulFunctionCall",
																"src": "13415:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13407:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "13407:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13487:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "13487:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13500:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "13500:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13511:1:1",
																				"nodeType": "YulLiteral",
																				"src": "13511:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13496:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "13496:3:1"
																		},
																		"nativeSrc": "13496:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "13496:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13443:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "13443:43:1"
																},
																"nativeSrc": "13443:71:1",
																"nodeType": "YulFunctionCall",
																"src": "13443:71:1"
															},
															"nativeSrc": "13443:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "13443:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "13299:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13369:9:1",
														"nodeType": "YulTypedName",
														"src": "13369:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13381:6:1",
														"nodeType": "YulTypedName",
														"src": "13381:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13392:4:1",
														"nodeType": "YulTypedName",
														"src": "13392:4:1",
														"type": ""
													}
												],
												"src": "13299:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint256(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040516200258938038062002589833981810160405281019062000036919062000695565b828281600390816200004991906200095a565b5080600490816200005b91906200095a565b5050506200009d3362000073620000bb60201b60201c565b60ff16600a62000084919062000bbb565b8362000091919062000c0b565b620000c360201b60201c565b620000b15f801b336200014d60201b60201c565b5050505062000d54565b5f6008905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000136575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016200012d919062000c98565b60405180910390fd5b620001495f83836200024960201b60201c565b5050565b5f6200016083836200046d60201b60201c565b6200023f57600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550620001db620004d160201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905062000243565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200029d578060025f82825462000290919062000cb3565b925050819055506200036e565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000329578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620003209392919062000cfe565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620003b7578060025f828254039250508190555062000401565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405162000460919062000d39565b60405180910390a3505050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6200053982620004f1565b810181811067ffffffffffffffff821117156200055b576200055a62000501565b5b80604052505050565b5f6200056f620004d8565b90506200057d82826200052e565b919050565b5f67ffffffffffffffff8211156200059f576200059e62000501565b5b620005aa82620004f1565b9050602081019050919050565b5f5b83811015620005d6578082015181840152602081019050620005b9565b5f8484015250505050565b5f620005f7620005f18462000582565b62000564565b905082815260208101848484011115620006165762000615620004ed565b5b62000623848285620005b7565b509392505050565b5f82601f830112620006425762000641620004e9565b5b815162000654848260208601620005e1565b91505092915050565b5f819050919050565b62000671816200065d565b81146200067c575f80fd5b50565b5f815190506200068f8162000666565b92915050565b5f805f60608486031215620006af57620006ae620004e1565b5b5f84015167ffffffffffffffff811115620006cf57620006ce620004e5565b5b620006dd868287016200062b565b935050602084015167ffffffffffffffff811115620007015762000700620004e5565b5b6200070f868287016200062b565b925050604062000722868287016200067f565b9150509250925092565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200077b57607f821691505b60208210810362000791576200079062000736565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620007f57fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620007b8565b620008018683620007b8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f620008426200083c62000836846200065d565b62000819565b6200065d565b9050919050565b5f819050919050565b6200085d8362000822565b620008756200086c8262000849565b848454620007c4565b825550505050565b5f90565b6200088b6200087d565b6200089881848462000852565b505050565b5b81811015620008bf57620008b35f8262000881565b6001810190506200089e565b5050565b601f8211156200090e57620008d88162000797565b620008e384620007a9565b81016020851015620008f3578190505b6200090b6200090285620007a9565b8301826200089d565b50505b505050565b5f82821c905092915050565b5f620009305f198460080262000913565b1980831691505092915050565b5f6200094a83836200091f565b9150826002028217905092915050565b62000965826200072c565b67ffffffffffffffff81111562000981576200098062000501565b5b6200098d825462000763565b6200099a828285620008c3565b5f60209050601f831160018114620009d0575f8415620009bb578287015190505b620009c785826200093d565b86555062000a36565b601f198416620009e08662000797565b5f5b8281101562000a0957848901518255600182019150602085019450602081019050620009e2565b8683101562000a29578489015162000a25601f8916826200091f565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f808291508390505b600185111562000ac85780860481111562000aa05762000a9f62000a3e565b5b600185161562000ab05780820291505b808102905062000ac08562000a6b565b945062000a80565b94509492505050565b5f8262000ae2576001905062000bb4565b8162000af1575f905062000bb4565b816001811462000b0a576002811462000b155762000b4b565b600191505062000bb4565b60ff84111562000b2a5762000b2962000a3e565b5b8360020a91508482111562000b445762000b4362000a3e565b5b5062000bb4565b5060208310610133831016604e8410600b841016171562000b855782820a90508381111562000b7f5762000b7e62000a3e565b5b62000bb4565b62000b94848484600162000a77565b9250905081840481111562000bae5762000bad62000a3e565b5b81810290505b9392505050565b5f62000bc7826200065d565b915062000bd4836200065d565b925062000c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848462000ad1565b905092915050565b5f62000c17826200065d565b915062000c24836200065d565b925082820262000c34816200065d565b9150828204841483151762000c4e5762000c4d62000a3e565b5b5092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f62000c808262000c55565b9050919050565b62000c928162000c74565b82525050565b5f60208201905062000cad5f83018462000c87565b92915050565b5f62000cbf826200065d565b915062000ccc836200065d565b925082820190508082111562000ce75762000ce662000a3e565b5b92915050565b62000cf8816200065d565b82525050565b5f60608201905062000d135f83018662000c87565b62000d22602083018562000ced565b62000d31604083018462000ced565b949350505050565b5f60208201905062000d4e5f83018462000ced565b92915050565b6118278062000d625f395ff3fe608060405234801561000f575f80fd5b506004361061012a575f3560e01c806340c10f19116100ab578063a217fddf1161006f578063a217fddf14610354578063a9059cbb14610372578063d5391393146103a2578063d547741f146103c0578063dd62ed3e146103dc5761012a565b806340c10f191461029e57806370a08231146102ba57806391d14854146102ea57806395d89b411461031a5780639dc29fac146103385761012a565b8063248a9ca3116100f2578063248a9ca3146101fa578063282c51f31461022a5780632f2ff15d14610248578063313ce5671461026457806336568abe146102825761012a565b806301ffc9a71461012e57806306fdde031461015e578063095ea7b31461017c57806318160ddd146101ac57806323b872dd146101ca575b5f80fd5b610148600480360381019061014391906112dd565b61040c565b6040516101559190611322565b60405180910390f35b610166610485565b60405161017391906113c5565b60405180910390f35b61019660048036038101906101919190611472565b610515565b6040516101a39190611322565b60405180910390f35b6101b4610537565b6040516101c191906114bf565b60405180910390f35b6101e460048036038101906101df91906114d8565b610540565b6040516101f19190611322565b60405180910390f35b610214600480360381019061020f919061155b565b61056e565b6040516102219190611595565b60405180910390f35b61023261058b565b60405161023f9190611595565b60405180910390f35b610262600480360381019061025d91906115ae565b6105af565b005b61026c6105d1565b6040516102799190611607565b60405180910390f35b61029c600480360381019061029791906115ae565b6105d9565b005b6102b860048036038101906102b39190611472565b610654565b005b6102d460048036038101906102cf9190611620565b6106c6565b6040516102e191906114bf565b60405180910390f35b61030460048036038101906102ff91906115ae565b61070b565b6040516103119190611322565b60405180910390f35b61032261076f565b60405161032f91906113c5565b60405180910390f35b610352600480360381019061034d9190611472565b6107ff565b005b61035c610871565b6040516103699190611595565b60405180910390f35b61038c60048036038101906103879190611472565b610877565b6040516103999190611322565b60405180910390f35b6103aa610899565b6040516103b79190611595565b60405180910390f35b6103da60048036038101906103d591906115ae565b6108bd565b005b6103f660048036038101906103f1919061164b565b6108df565b60405161040391906114bf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047e575061047d82610961565b5b9050919050565b606060038054610494906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546104c0906116b6565b801561050b5780601f106104e25761010080835404028352916020019161050b565b820191905f5260205f20905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b5f8061051f6109ca565b905061052c8185856109d1565b600191505092915050565b5f600254905090565b5f8061054a6109ca565b90506105578582856109e3565b610562858585610a75565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6105b88261056e565b6105c181610b65565b6105cb8383610b79565b50505050565b5f6008905090565b6105e16109ca565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610645576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61064f8282610c63565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661067e81610b65565b6106888383610d4d565b7f79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e83836040516106b99291906116f5565b60405180910390a1505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461077e906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa906116b6565b80156107f55780601f106107cc576101008083540402835291602001916107f5565b820191905f5260205f20905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861082981610b65565b6108338383610dcc565b7fd1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c583836040516108649291906116f5565b60405180910390a1505050565b5f801b81565b5f806108816109ca565b905061088e818585610a75565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6108c68261056e565b6108cf81610b65565b6108d98383610c63565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6109de8383836001610e4b565b505050565b5f6109ee84846108df565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a6f5781811015610a60578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a579392919061171c565b60405180910390fd5b610a6e84848484035f610e4b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ae5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610adc9190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b55575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b4c9190611751565b60405180910390fd5b610b6083838361101a565b505050565b610b7681610b716109ca565b611233565b50565b5f610b84838361070b565b610c5957600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bf66109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c5d565b5f90505b92915050565b5f610c6e838361070b565b15610d43575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ce06109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d47565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610db49190611751565b60405180910390fd5b610dc85f838361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e3c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e339190611751565b60405180910390fd5b610e47825f8361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ebb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610eb29190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f2b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f229190611751565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611014578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161100b91906114bf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106a578060025f82825461105e9190611797565b92505081905550611138565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110f3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ea9392919061171c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117f578060025f82825403925050819055506111c9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122691906114bf565b60405180910390a3505050565b61123d828261070b565b6112805780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016112779291906117ca565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112bc81611288565b81146112c6575f80fd5b50565b5f813590506112d7816112b3565b92915050565b5f602082840312156112f2576112f1611284565b5b5f6112ff848285016112c9565b91505092915050565b5f8115159050919050565b61131c81611308565b82525050565b5f6020820190506113355f830184611313565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611372578082015181840152602081019050611357565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113978261133b565b6113a18185611345565b93506113b1818560208601611355565b6113ba8161137d565b840191505092915050565b5f6020820190508181035f8301526113dd818461138d565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61140e826113e5565b9050919050565b61141e81611404565b8114611428575f80fd5b50565b5f8135905061143981611415565b92915050565b5f819050919050565b6114518161143f565b811461145b575f80fd5b50565b5f8135905061146c81611448565b92915050565b5f806040838503121561148857611487611284565b5b5f6114958582860161142b565b92505060206114a68582860161145e565b9150509250929050565b6114b98161143f565b82525050565b5f6020820190506114d25f8301846114b0565b92915050565b5f805f606084860312156114ef576114ee611284565b5b5f6114fc8682870161142b565b935050602061150d8682870161142b565b925050604061151e8682870161145e565b9150509250925092565b5f819050919050565b61153a81611528565b8114611544575f80fd5b50565b5f8135905061155581611531565b92915050565b5f602082840312156115705761156f611284565b5b5f61157d84828501611547565b91505092915050565b61158f81611528565b82525050565b5f6020820190506115a85f830184611586565b92915050565b5f80604083850312156115c4576115c3611284565b5b5f6115d185828601611547565b92505060206115e28582860161142b565b9150509250929050565b5f60ff82169050919050565b611601816115ec565b82525050565b5f60208201905061161a5f8301846115f8565b92915050565b5f6020828403121561163557611634611284565b5b5f6116428482850161142b565b91505092915050565b5f806040838503121561166157611660611284565b5b5f61166e8582860161142b565b925050602061167f8582860161142b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116cd57607f821691505b6020821081036116e0576116df611689565b5b50919050565b6116ef81611404565b82525050565b5f6040820190506117085f8301856116e6565b61171560208301846114b0565b9392505050565b5f60608201905061172f5f8301866116e6565b61173c60208301856114b0565b61174960408301846114b0565b949350505050565b5f6020820190506117645f8301846116e6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117a18261143f565b91506117ac8361143f565b92508282019050808211156117c4576117c361176a565b5b92915050565b5f6040820190506117dd5f8301856116e6565b6117ea6020830184611586565b939250505056fea264697066735822122012ff0df29d3c37c87226dd7cddbef7ee8d08f34c6c501e884c59b27c5419428664736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2589 CODESIZE SUB DUP1 PUSH3 0x2589 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x695 JUMP JUMPDEST DUP3 DUP3 DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x49 SWAP2 SWAP1 PUSH3 0x95A JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5B SWAP2 SWAP1 PUSH3 0x95A JUMP JUMPDEST POP POP POP PUSH3 0x9D CALLER PUSH3 0x73 PUSH3 0xBB PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0xA PUSH3 0x84 SWAP2 SWAP1 PUSH3 0xBBB JUMP JUMPDEST DUP4 PUSH3 0x91 SWAP2 SWAP1 PUSH3 0xC0B JUMP JUMPDEST PUSH3 0xC3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xB1 PUSH0 DUP1 SHL CALLER PUSH3 0x14D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP POP PUSH3 0xD54 JUMP JUMPDEST PUSH0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x136 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x12D SWAP2 SWAP1 PUSH3 0xC98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x149 PUSH0 DUP4 DUP4 PUSH3 0x249 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH3 0x160 DUP4 DUP4 PUSH3 0x46D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x23F JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x1DB PUSH3 0x4D1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH3 0x243 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x29D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x290 SWAP2 SWAP1 PUSH3 0xCB3 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x36E JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x329 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x320 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xCFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3B7 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x401 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x460 SWAP2 SWAP1 PUSH3 0xD39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0x539 DUP3 PUSH3 0x4F1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x55B JUMPI PUSH3 0x55A PUSH3 0x501 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x56F PUSH3 0x4D8 JUMP JUMPDEST SWAP1 POP PUSH3 0x57D DUP3 DUP3 PUSH3 0x52E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x59F JUMPI PUSH3 0x59E PUSH3 0x501 JUMP JUMPDEST JUMPDEST PUSH3 0x5AA DUP3 PUSH3 0x4F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x5D6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x5B9 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x5F7 PUSH3 0x5F1 DUP5 PUSH3 0x582 JUMP JUMPDEST PUSH3 0x564 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x616 JUMPI PUSH3 0x615 PUSH3 0x4ED JUMP JUMPDEST JUMPDEST PUSH3 0x623 DUP5 DUP3 DUP6 PUSH3 0x5B7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x642 JUMPI PUSH3 0x641 PUSH3 0x4E9 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x654 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x5E1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x671 DUP2 PUSH3 0x65D JUMP JUMPDEST DUP2 EQ PUSH3 0x67C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0x68F DUP2 PUSH3 0x666 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x6AF JUMPI PUSH3 0x6AE PUSH3 0x4E1 JUMP JUMPDEST JUMPDEST PUSH0 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x6CF JUMPI PUSH3 0x6CE PUSH3 0x4E5 JUMP JUMPDEST JUMPDEST PUSH3 0x6DD DUP7 DUP3 DUP8 ADD PUSH3 0x62B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x701 JUMPI PUSH3 0x700 PUSH3 0x4E5 JUMP JUMPDEST JUMPDEST PUSH3 0x70F DUP7 DUP3 DUP8 ADD PUSH3 0x62B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x722 DUP7 DUP3 DUP8 ADD PUSH3 0x67F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x77B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x791 JUMPI PUSH3 0x790 PUSH3 0x736 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x7F5 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x7B8 JUMP JUMPDEST PUSH3 0x801 DUP7 DUP4 PUSH3 0x7B8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x842 PUSH3 0x83C PUSH3 0x836 DUP5 PUSH3 0x65D JUMP JUMPDEST PUSH3 0x819 JUMP JUMPDEST PUSH3 0x65D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x85D DUP4 PUSH3 0x822 JUMP JUMPDEST PUSH3 0x875 PUSH3 0x86C DUP3 PUSH3 0x849 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x7C4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x88B PUSH3 0x87D JUMP JUMPDEST PUSH3 0x898 DUP2 DUP5 DUP5 PUSH3 0x852 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x8BF JUMPI PUSH3 0x8B3 PUSH0 DUP3 PUSH3 0x881 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x89E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x90E JUMPI PUSH3 0x8D8 DUP2 PUSH3 0x797 JUMP JUMPDEST PUSH3 0x8E3 DUP5 PUSH3 0x7A9 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x8F3 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x90B PUSH3 0x902 DUP6 PUSH3 0x7A9 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x89D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x930 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x913 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x94A DUP4 DUP4 PUSH3 0x91F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x965 DUP3 PUSH3 0x72C JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x981 JUMPI PUSH3 0x980 PUSH3 0x501 JUMP JUMPDEST JUMPDEST PUSH3 0x98D DUP3 SLOAD PUSH3 0x763 JUMP JUMPDEST PUSH3 0x99A DUP3 DUP3 DUP6 PUSH3 0x8C3 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x9D0 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x9BB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x9C7 DUP6 DUP3 PUSH3 0x93D JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0xA36 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x9E0 DUP7 PUSH3 0x797 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0xA09 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x9E2 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0xA29 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0xA25 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x91F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH3 0xAC8 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH3 0xAA0 JUMPI PUSH3 0xA9F PUSH3 0xA3E JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH3 0xAB0 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH3 0xAC0 DUP6 PUSH3 0xA6B JUMP JUMPDEST SWAP5 POP PUSH3 0xA80 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH3 0xAE2 JUMPI PUSH1 0x1 SWAP1 POP PUSH3 0xBB4 JUMP JUMPDEST DUP2 PUSH3 0xAF1 JUMPI PUSH0 SWAP1 POP PUSH3 0xBB4 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0xB0A JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0xB15 JUMPI PUSH3 0xB4B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0xBB4 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0xB2A JUMPI PUSH3 0xB29 PUSH3 0xA3E JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH3 0xB44 JUMPI PUSH3 0xB43 PUSH3 0xA3E JUMP JUMPDEST JUMPDEST POP PUSH3 0xBB4 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0xB85 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH3 0xB7F JUMPI PUSH3 0xB7E PUSH3 0xA3E JUMP JUMPDEST JUMPDEST PUSH3 0xBB4 JUMP JUMPDEST PUSH3 0xB94 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH3 0xA77 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH3 0xBAE JUMPI PUSH3 0xBAD PUSH3 0xA3E JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xBC7 DUP3 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP PUSH3 0xBD4 DUP4 PUSH3 0x65D JUMP JUMPDEST SWAP3 POP PUSH3 0xC03 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH3 0xAD1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xC17 DUP3 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP PUSH3 0xC24 DUP4 PUSH3 0x65D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0xC34 DUP2 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0xC4E JUMPI PUSH3 0xC4D PUSH3 0xA3E JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xC80 DUP3 PUSH3 0xC55 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xC92 DUP2 PUSH3 0xC74 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xCAD PUSH0 DUP4 ADD DUP5 PUSH3 0xC87 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xCBF DUP3 PUSH3 0x65D JUMP JUMPDEST SWAP2 POP PUSH3 0xCCC DUP4 PUSH3 0x65D JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xCE7 JUMPI PUSH3 0xCE6 PUSH3 0xA3E JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xCF8 DUP2 PUSH3 0x65D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xD13 PUSH0 DUP4 ADD DUP7 PUSH3 0xC87 JUMP JUMPDEST PUSH3 0xD22 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xCED JUMP JUMPDEST PUSH3 0xD31 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xCED JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xD4E PUSH0 DUP4 ADD DUP5 PUSH3 0xCED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1827 DUP1 PUSH3 0xD62 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x338 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x282 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x47E JUMPI POP PUSH2 0x47D DUP3 PUSH2 0x961 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x494 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C0 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51F PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x52C DUP2 DUP6 DUP6 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x54A PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x557 DUP6 DUP3 DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x562 DUP6 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x5B8 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x5CB DUP4 DUP4 PUSH2 0xB79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64F DUP3 DUP3 PUSH2 0xC63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x67E DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x688 DUP4 DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH32 0x79C65068F81072733B15AB3CBA61B23110793F90AB099D228A414B186333A81E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7AA SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x829 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x833 DUP4 DUP4 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0xD1DF306C742159C188C29D2C167874A39B84FD0F96F794AD7EA53295680EC1C5 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x864 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x881 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x8C6 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x8CF DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x8D9 DUP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EE DUP5 DUP5 PUSH2 0x8DF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA6F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA60 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE4B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB60 DUP4 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB76 DUP2 PUSH2 0xB71 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB84 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0xC59 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF6 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC5D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC6E DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST ISZERO PUSH2 0xD43 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE0 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD47 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC8 PUSH0 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE47 DUP3 PUSH0 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1014 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1138 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x123D DUP3 DUP3 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x1280 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP3 SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BC DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D7 DUP2 PUSH2 0x12B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F1 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FF DUP5 DUP3 DUP6 ADD PUSH2 0x12C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1308 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1335 PUSH0 DUP4 ADD DUP5 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1372 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1397 DUP3 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x13A1 DUP2 DUP6 PUSH2 0x1345 JUMP JUMPDEST SWAP4 POP PUSH2 0x13B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x137D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13DD DUP2 DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x140E DUP3 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141E DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP2 EQ PUSH2 0x1428 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x1415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP2 EQ PUSH2 0x145B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1495 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A6 DUP6 DUP3 DUP7 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B9 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FC DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x151E DUP7 DUP3 DUP8 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP2 EQ PUSH2 0x1544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1555 DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1570 JUMPI PUSH2 0x156F PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157D DUP5 DUP3 DUP6 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x158F DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E2 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1601 DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161A PUSH0 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1635 JUMPI PUSH2 0x1634 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1642 DUP5 DUP3 DUP6 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166E DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167F DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x1689 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EF DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1708 PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x1715 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x172F PUSH0 DUP4 ADD DUP7 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x173C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1749 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17A1 DUP3 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP PUSH2 0x17AC DUP4 PUSH2 0x143F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17C4 JUMPI PUSH2 0x17C3 PUSH2 0x176A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17DD PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x17EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SELFDESTRUCT 0xD CALLCODE SWAP14 EXTCODECOPY CALLDATACOPY 0xC8 PUSH19 0x26DD7CDDBEF7EE8D08F34C6C501E884C59B27C SLOAD NOT TIMESTAMP DUP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "34115:1235:0:-:0;;;34452:378;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34565:4;34571:6;24856:5;24848;:13;;;;;;:::i;:::-;;24881:7;24871;:17;;;;;;:::i;:::-;;24782:113;;34589:62:::1;34595:10;34638;:8;;;:10;;:::i;:::-;34630:19;;34624:2;:25;;;;:::i;:::-;34607:13;:43;;;;:::i;:::-;34589:5;;;:62;;:::i;:::-;34781:42;14758:4;34792:18:::0;::::1;34812:10;34781;;;:42;;:::i;:::-;;34452:378:::0;;;34115:1235;;35258:90;35316:5;35340:1;35333:8;;35258:90;:::o;30607:208::-;30696:1;30677:21;;:7;:21;;;30673:91;;30750:1;30721:32;;;;;;;;;;;:::i;:::-;;;;;;;;30673:91;30773:35;30789:1;30793:7;30802:5;30773:7;;;:35;;:::i;:::-;30607:208;;:::o;18705:316::-;18782:4;18803:22;18811:4;18817:7;18803;;;:22;;:::i;:::-;18798:217;;18873:4;18841:6;:12;18848:4;18841:12;;;;;;;;;;;:20;;:29;18862:7;18841:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;18923:12;:10;;;:12;;:::i;:::-;18896:40;;18914:7;18896:40;;18908:4;18896:40;;;;;;;;;;18957:4;18950:11;;;;18798:217;18999:5;18992:12;;18705:316;;;;;:::o;29157:1107::-;29262:1;29246:18;;:4;:18;;;29242:540;;29398:5;29382:12;;:21;;;;;;;:::i;:::-;;;;;;;;29242:540;;;29434:19;29456:9;:15;29466:4;29456:15;;;;;;;;;;;;;;;;29434:37;;29503:5;29489:11;:19;29485:115;;;29560:4;29566:11;29579:5;29535:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;29485:115;29752:5;29738:11;:19;29720:9;:15;29730:4;29720:15;;;;;;;;;;;;;;;:37;;;;29420:362;29242:540;29810:1;29796:16;;:2;:16;;;29792:425;;29975:5;29959:12;;:21;;;;;;;;;;;29792:425;;;30187:5;30170:9;:13;30180:2;30170:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;29792:425;30247:2;30232:25;;30241:4;30232:25;;;30251:5;30232:25;;;;;;:::i;:::-;;;;;;;;29157:1107;;;:::o;15380:136::-;15457:4;15480:6;:12;15487:4;15480:12;;;;;;;;;;;:20;;:29;15501:7;15480:29;;;;;;;;;;;;;;;;;;;;;;;;;15473:36;;15380:136;;;;:::o;12345:96::-;12398:7;12424:10;12417:17;;12345:96;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:77::-;2714:7;2743:5;2732:16;;2677:77;;;:::o;2760:122::-;2833:24;2851:5;2833:24;:::i;:::-;2826:5;2823:35;2813:63;;2872:1;2869;2862:12;2813:63;2760:122;:::o;2888:143::-;2945:5;2976:6;2970:13;2961:22;;2992:33;3019:5;2992:33;:::i;:::-;2888:143;;;;:::o;3037:1009::-;3145:6;3153;3161;3210:2;3198:9;3189:7;3185:23;3181:32;3178:119;;;3216:79;;:::i;:::-;3178:119;3357:1;3346:9;3342:17;3336:24;3387:18;3379:6;3376:30;3373:117;;;3409:79;;:::i;:::-;3373:117;3514:74;3580:7;3571:6;3560:9;3556:22;3514:74;:::i;:::-;3504:84;;3307:291;3658:2;3647:9;3643:18;3637:25;3689:18;3681:6;3678:30;3675:117;;;3711:79;;:::i;:::-;3675:117;3816:74;3882:7;3873:6;3862:9;3858:22;3816:74;:::i;:::-;3806:84;;3608:292;3939:2;3965:64;4021:7;4012:6;4001:9;3997:22;3965:64;:::i;:::-;3955:74;;3910:129;3037:1009;;;;;:::o;4052:99::-;4104:6;4138:5;4132:12;4122:22;;4052:99;;;:::o;4157:180::-;4205:77;4202:1;4195:88;4302:4;4299:1;4292:15;4326:4;4323:1;4316:15;4343:320;4387:6;4424:1;4418:4;4414:12;4404:22;;4471:1;4465:4;4461:12;4492:18;4482:81;;4548:4;4540:6;4536:17;4526:27;;4482:81;4610:2;4602:6;4599:14;4579:18;4576:38;4573:84;;4629:18;;:::i;:::-;4573:84;4394:269;4343:320;;;:::o;4669:141::-;4718:4;4741:3;4733:11;;4764:3;4761:1;4754:14;4798:4;4795:1;4785:18;4777:26;;4669:141;;;:::o;4816:93::-;4853:6;4900:2;4895;4888:5;4884:14;4880:23;4870:33;;4816:93;;;:::o;4915:107::-;4959:8;5009:5;5003:4;4999:16;4978:37;;4915:107;;;;:::o;5028:393::-;5097:6;5147:1;5135:10;5131:18;5170:97;5200:66;5189:9;5170:97;:::i;:::-;5288:39;5318:8;5307:9;5288:39;:::i;:::-;5276:51;;5360:4;5356:9;5349:5;5345:21;5336:30;;5409:4;5399:8;5395:19;5388:5;5385:30;5375:40;;5104:317;;5028:393;;;;;:::o;5427:60::-;5455:3;5476:5;5469:12;;5427:60;;;:::o;5493:142::-;5543:9;5576:53;5594:34;5603:24;5621:5;5603:24;:::i;:::-;5594:34;:::i;:::-;5576:53;:::i;:::-;5563:66;;5493:142;;;:::o;5641:75::-;5684:3;5705:5;5698:12;;5641:75;;;:::o;5722:269::-;5832:39;5863:7;5832:39;:::i;:::-;5893:91;5942:41;5966:16;5942:41;:::i;:::-;5934:6;5927:4;5921:11;5893:91;:::i;:::-;5887:4;5880:105;5798:193;5722:269;;;:::o;5997:73::-;6042:3;5997:73;:::o;6076:189::-;6153:32;;:::i;:::-;6194:65;6252:6;6244;6238:4;6194:65;:::i;:::-;6129:136;6076:189;;:::o;6271:186::-;6331:120;6348:3;6341:5;6338:14;6331:120;;;6402:39;6439:1;6432:5;6402:39;:::i;:::-;6375:1;6368:5;6364:13;6355:22;;6331:120;;;6271:186;;:::o;6463:543::-;6564:2;6559:3;6556:11;6553:446;;;6598:38;6630:5;6598:38;:::i;:::-;6682:29;6700:10;6682:29;:::i;:::-;6672:8;6668:44;6865:2;6853:10;6850:18;6847:49;;;6886:8;6871:23;;6847:49;6909:80;6965:22;6983:3;6965:22;:::i;:::-;6955:8;6951:37;6938:11;6909:80;:::i;:::-;6568:431;;6553:446;6463:543;;;:::o;7012:117::-;7066:8;7116:5;7110:4;7106:16;7085:37;;7012:117;;;;:::o;7135:169::-;7179:6;7212:51;7260:1;7256:6;7248:5;7245:1;7241:13;7212:51;:::i;:::-;7208:56;7293:4;7287;7283:15;7273:25;;7186:118;7135:169;;;;:::o;7309:295::-;7385:4;7531:29;7556:3;7550:4;7531:29;:::i;:::-;7523:37;;7593:3;7590:1;7586:11;7580:4;7577:21;7569:29;;7309:295;;;;:::o;7609:1395::-;7726:37;7759:3;7726:37;:::i;:::-;7828:18;7820:6;7817:30;7814:56;;;7850:18;;:::i;:::-;7814:56;7894:38;7926:4;7920:11;7894:38;:::i;:::-;7979:67;8039:6;8031;8025:4;7979:67;:::i;:::-;8073:1;8097:4;8084:17;;8129:2;8121:6;8118:14;8146:1;8141:618;;;;8803:1;8820:6;8817:77;;;8869:9;8864:3;8860:19;8854:26;8845:35;;8817:77;8920:67;8980:6;8973:5;8920:67;:::i;:::-;8914:4;8907:81;8776:222;8111:887;;8141:618;8193:4;8189:9;8181:6;8177:22;8227:37;8259:4;8227:37;:::i;:::-;8286:1;8300:208;8314:7;8311:1;8308:14;8300:208;;;8393:9;8388:3;8384:19;8378:26;8370:6;8363:42;8444:1;8436:6;8432:14;8422:24;;8491:2;8480:9;8476:18;8463:31;;8337:4;8334:1;8330:12;8325:17;;8300:208;;;8536:6;8527:7;8524:19;8521:179;;;8594:9;8589:3;8585:19;8579:26;8637:48;8679:4;8671:6;8667:17;8656:9;8637:48;:::i;:::-;8629:6;8622:64;8544:156;8521:179;8746:1;8742;8734:6;8730:14;8726:22;8720:4;8713:36;8148:611;;;8111:887;;7701:1303;;;7609:1395;;:::o;9010:180::-;9058:77;9055:1;9048:88;9155:4;9152:1;9145:15;9179:4;9176:1;9169:15;9196:102;9238:8;9285:5;9282:1;9278:13;9257:34;;9196:102;;;:::o;9304:848::-;9365:5;9372:4;9396:6;9387:15;;9420:5;9411:14;;9434:712;9455:1;9445:8;9442:15;9434:712;;;9550:4;9545:3;9541:14;9535:4;9532:24;9529:50;;;9559:18;;:::i;:::-;9529:50;9609:1;9599:8;9595:16;9592:451;;;10024:4;10017:5;10013:16;10004:25;;9592:451;10074:4;10068;10064:15;10056:23;;10104:32;10127:8;10104:32;:::i;:::-;10092:44;;9434:712;;;9304:848;;;;;;;:::o;10158:1073::-;10212:5;10403:8;10393:40;;10424:1;10415:10;;10426:5;;10393:40;10452:4;10442:36;;10469:1;10460:10;;10471:5;;10442:36;10538:4;10586:1;10581:27;;;;10622:1;10617:191;;;;10531:277;;10581:27;10599:1;10590:10;;10601:5;;;10617:191;10662:3;10652:8;10649:17;10646:43;;;10669:18;;:::i;:::-;10646:43;10718:8;10715:1;10711:16;10702:25;;10753:3;10746:5;10743:14;10740:40;;;10760:18;;:::i;:::-;10740:40;10793:5;;;10531:277;;10917:2;10907:8;10904:16;10898:3;10892:4;10889:13;10885:36;10867:2;10857:8;10854:16;10849:2;10843:4;10840:12;10836:35;10820:111;10817:246;;;10973:8;10967:4;10963:19;10954:28;;11008:3;11001:5;10998:14;10995:40;;;11015:18;;:::i;:::-;10995:40;11048:5;;10817:246;11088:42;11126:3;11116:8;11110:4;11107:1;11088:42;:::i;:::-;11073:57;;;;11162:4;11157:3;11153:14;11146:5;11143:25;11140:51;;;11171:18;;:::i;:::-;11140:51;11220:4;11213:5;11209:16;11200:25;;10158:1073;;;;;;:::o;11237:285::-;11297:5;11321:23;11339:4;11321:23;:::i;:::-;11313:31;;11365:27;11383:8;11365:27;:::i;:::-;11353:39;;11411:104;11448:66;11438:8;11432:4;11411:104;:::i;:::-;11402:113;;11237:285;;;;:::o;11528:410::-;11568:7;11591:20;11609:1;11591:20;:::i;:::-;11586:25;;11625:20;11643:1;11625:20;:::i;:::-;11620:25;;11680:1;11677;11673:9;11702:30;11720:11;11702:30;:::i;:::-;11691:41;;11881:1;11872:7;11868:15;11865:1;11862:22;11842:1;11835:9;11815:83;11792:139;;11911:18;;:::i;:::-;11792:139;11576:362;11528:410;;;;:::o;11944:126::-;11981:7;12021:42;12014:5;12010:54;11999:65;;11944:126;;;:::o;12076:96::-;12113:7;12142:24;12160:5;12142:24;:::i;:::-;12131:35;;12076:96;;;:::o;12178:118::-;12265:24;12283:5;12265:24;:::i;:::-;12260:3;12253:37;12178:118;;:::o;12302:222::-;12395:4;12433:2;12422:9;12418:18;12410:26;;12446:71;12514:1;12503:9;12499:17;12490:6;12446:71;:::i;:::-;12302:222;;;;:::o;12530:191::-;12570:3;12589:20;12607:1;12589:20;:::i;:::-;12584:25;;12623:20;12641:1;12623:20;:::i;:::-;12618:25;;12666:1;12663;12659:9;12652:16;;12687:3;12684:1;12681:10;12678:36;;;12694:18;;:::i;:::-;12678:36;12530:191;;;;:::o;12727:118::-;12814:24;12832:5;12814:24;:::i;:::-;12809:3;12802:37;12727:118;;:::o;12851:442::-;13000:4;13038:2;13027:9;13023:18;13015:26;;13051:71;13119:1;13108:9;13104:17;13095:6;13051:71;:::i;:::-;13132:72;13200:2;13189:9;13185:18;13176:6;13132:72;:::i;:::-;13214;13282:2;13271:9;13267:18;13258:6;13214:72;:::i;:::-;12851:442;;;;;;:::o;13299:222::-;13392:4;13430:2;13419:9;13415:18;13407:26;;13443:71;13511:1;13500:9;13496:17;13487:6;13443:71;:::i;:::-;13299:222;;;;:::o;34115:1235:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BURNER_ROLE_1189": {
									"entryPoint": 1419,
									"id": 1189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_302": {
									"entryPoint": 2161,
									"id": 302,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1184": {
									"entryPoint": 2201,
									"id": 1184,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_1065": {
									"entryPoint": 2513,
									"id": 1065,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1125": {
									"entryPoint": 3659,
									"id": 1125,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1047": {
									"entryPoint": 3532,
									"id": 1047,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_366": {
									"entryPoint": 2917,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_387": {
									"entryPoint": 4659,
									"id": 387,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_529": {
									"entryPoint": 2937,
									"id": 529,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_1014": {
									"entryPoint": 3405,
									"id": 1014,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_261": {
									"entryPoint": 2506,
									"id": 261,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_567": {
									"entryPoint": 3171,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1173": {
									"entryPoint": 2531,
									"id": 1173,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_904": {
									"entryPoint": 2677,
									"id": 904,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_981": {
									"entryPoint": 4122,
									"id": 981,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_801": {
									"entryPoint": 2271,
									"id": 801,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_825": {
									"entryPoint": 1301,
									"id": 825,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_760": {
									"entryPoint": 1734,
									"id": 760,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1279": {
									"entryPoint": 2047,
									"id": 1279,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_1288": {
									"entryPoint": 1489,
									"id": 1288,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_401": {
									"entryPoint": 1390,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_420": {
									"entryPoint": 1455,
									"id": 420,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_353": {
									"entryPoint": 1803,
									"id": 353,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_1258": {
									"entryPoint": 1620,
									"id": 1258,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_720": {
									"entryPoint": 1157,
									"id": 720,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_462": {
									"entryPoint": 1497,
									"id": 462,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_439": {
									"entryPoint": 2237,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_31": {
									"entryPoint": 2401,
									"id": 31,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_335": {
									"entryPoint": 1036,
									"id": 335,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_729": {
									"entryPoint": 1903,
									"id": 729,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_747": {
									"entryPoint": 1335,
									"id": 747,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_857": {
									"entryPoint": 1344,
									"id": 857,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_784": {
									"entryPoint": 2167,
									"id": 784,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5550,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4883,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 6090,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5877,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5311,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5639,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5124,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5814,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5769,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4740,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4989,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 5141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10316:1",
										"nodeType": "YulBlock",
										"src": "0:10316:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "378:105:1",
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nativeSrc": "388:89:1",
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:1",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nativeSrc": "399:78:1",
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:1",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:1",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nativeSrc": "531:78:1",
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:1",
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:1",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:1",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nativeSrc": "589:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nativeSrc": "589:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:1",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nativeSrc": "561:23:1",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nativeSrc": "551:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nativeSrc": "544:42:1",
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nativeSrc": "541:62:1",
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:1",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nativeSrc": "666:86:1",
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nativeSrc": "676:29:1",
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nativeSrc": "685:20:1",
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nativeSrc": "714:32:1",
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nativeSrc": "714:32:1",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:1",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:1",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:1",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nativeSrc": "823:262:1",
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:1",
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nativeSrc": "871:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nativeSrc": "871:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nativeSrc": "840:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:1",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nativeSrc": "836:32:1",
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nativeSrc": "833:119:1",
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nativeSrc": "962:116:1",
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nativeSrc": "977:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:1",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:1",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:1",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nativeSrc": "1036:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:1",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nativeSrc": "1016:52:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:1",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:1",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:1",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nativeSrc": "1133:48:1",
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nativeSrc": "1143:32:1",
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nativeSrc": "1161:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nativeSrc": "1154:21:1",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:1",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:1",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nativeSrc": "1246:50:1",
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nativeSrc": "1268:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nativeSrc": "1256:34:1",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nativeSrc": "1256:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:1",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:1",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nativeSrc": "1394:118:1",
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nativeSrc": "1404:26:1",
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nativeSrc": "1412:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nativeSrc": "1487:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nativeSrc": "1440:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nativeSrc": "1440:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:1",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:1",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:1",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nativeSrc": "1577:40:1",
													"nodeType": "YulBlock",
													"src": "1577:40:1",
													"statements": [
														{
															"nativeSrc": "1588:22:1",
															"nodeType": "YulAssignment",
															"src": "1588:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:1"
																},
																"nativeSrc": "1598:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:1",
														"nodeType": "YulTypedName",
														"src": "1560:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:1",
														"nodeType": "YulTypedName",
														"src": "1570:6:1",
														"type": ""
													}
												],
												"src": "1518:99:1"
											},
											{
												"body": {
													"nativeSrc": "1719:73:1",
													"nodeType": "YulBlock",
													"src": "1719:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:1"
																},
																"nativeSrc": "1729:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:1"
															},
															"nativeSrc": "1729:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:1"
														},
														{
															"nativeSrc": "1757:29:1",
															"nodeType": "YulAssignment",
															"src": "1757:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:1"
																},
																"nativeSrc": "1772:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:1",
														"nodeType": "YulTypedName",
														"src": "1691:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:1",
														"nodeType": "YulTypedName",
														"src": "1696:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:1",
														"nodeType": "YulTypedName",
														"src": "1707:11:1",
														"type": ""
													}
												],
												"src": "1623:169:1"
											},
											{
												"body": {
													"nativeSrc": "1860:184:1",
													"nodeType": "YulBlock",
													"src": "1860:184:1",
													"statements": [
														{
															"nativeSrc": "1870:10:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:1",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:1",
																"nodeType": "YulLiteral",
																"src": "1879:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:1",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:1",
																"nodeType": "YulBlock",
																"src": "1939:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:1"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:1"
																					},
																					"nativeSrc": "1960:11:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:1"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:1"
																							},
																							"nativeSrc": "1979:11:1",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:1"
																					},
																					"nativeSrc": "1973:18:1",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:1"
																			},
																			"nativeSrc": "1953:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:1"
																		},
																		"nativeSrc": "1953:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:1"
																},
																"nativeSrc": "1897:13:1",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:1"
															},
															"nativeSrc": "1889:113:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:1",
																"nodeType": "YulBlock",
																"src": "1911:19:1",
																"statements": [
																	{
																		"nativeSrc": "1913:15:1",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:1",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:1",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:1"
																			},
																			"nativeSrc": "1918:10:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:1",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:1",
																"nodeType": "YulBlock",
																"src": "1893:3:1",
																"statements": []
															},
															"src": "1889:113:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:1"
																		},
																		"nativeSrc": "2018:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:1"
																},
																"nativeSrc": "2011:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:1"
															},
															"nativeSrc": "2011:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:1",
														"nodeType": "YulTypedName",
														"src": "1842:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:1",
														"nodeType": "YulTypedName",
														"src": "1847:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:1",
														"nodeType": "YulTypedName",
														"src": "1852:6:1",
														"type": ""
													}
												],
												"src": "1798:246:1"
											},
											{
												"body": {
													"nativeSrc": "2098:54:1",
													"nodeType": "YulBlock",
													"src": "2098:54:1",
													"statements": [
														{
															"nativeSrc": "2108:38:1",
															"nodeType": "YulAssignment",
															"src": "2108:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:1"
																		},
																		"nativeSrc": "2122:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:1"
																		},
																		"nativeSrc": "2138:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:1"
																},
																"nativeSrc": "2118:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:1",
														"nodeType": "YulTypedName",
														"src": "2081:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:1",
														"nodeType": "YulTypedName",
														"src": "2091:6:1",
														"type": ""
													}
												],
												"src": "2050:102:1"
											},
											{
												"body": {
													"nativeSrc": "2250:285:1",
													"nodeType": "YulBlock",
													"src": "2250:285:1",
													"statements": [
														{
															"nativeSrc": "2260:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:1"
																},
																"nativeSrc": "2274:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:1",
															"nodeType": "YulAssignment",
															"src": "2322:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:1"
																},
																"nativeSrc": "2329:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:1"
																		},
																		"nativeSrc": "2444:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:1"
																},
																"nativeSrc": "2409:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:1"
															},
															"nativeSrc": "2409:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:1"
														},
														{
															"nativeSrc": "2483:46:1",
															"nodeType": "YulAssignment",
															"src": "2483:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:1"
																		},
																		"nativeSrc": "2499:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:1"
																},
																"nativeSrc": "2490:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:1",
														"nodeType": "YulTypedName",
														"src": "2231:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:1",
														"nodeType": "YulTypedName",
														"src": "2238:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:1",
														"nodeType": "YulTypedName",
														"src": "2246:3:1",
														"type": ""
													}
												],
												"src": "2158:377:1"
											},
											{
												"body": {
													"nativeSrc": "2659:195:1",
													"nodeType": "YulBlock",
													"src": "2659:195:1",
													"statements": [
														{
															"nativeSrc": "2669:26:1",
															"nodeType": "YulAssignment",
															"src": "2669:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:1"
																},
																"nativeSrc": "2677:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:1"
																		},
																		"nativeSrc": "2712:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:1"
																		},
																		"nativeSrc": "2731:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:1"
																},
																"nativeSrc": "2705:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:1"
															},
															"nativeSrc": "2705:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:1"
														},
														{
															"nativeSrc": "2761:86:1",
															"nodeType": "YulAssignment",
															"src": "2761:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:1"
																},
																"nativeSrc": "2769:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:1",
														"nodeType": "YulTypedName",
														"src": "2631:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:1",
														"nodeType": "YulTypedName",
														"src": "2643:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:1",
														"nodeType": "YulTypedName",
														"src": "2654:4:1",
														"type": ""
													}
												],
												"src": "2541:313:1"
											},
											{
												"body": {
													"nativeSrc": "2905:81:1",
													"nodeType": "YulBlock",
													"src": "2905:81:1",
													"statements": [
														{
															"nativeSrc": "2915:65:1",
															"nodeType": "YulAssignment",
															"src": "2915:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2930:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2937:42:1",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2926:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:1"
																},
																"nativeSrc": "2926:54:1",
																"nodeType": "YulFunctionCall",
																"src": "2926:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2860:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:1",
														"nodeType": "YulTypedName",
														"src": "2887:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:1",
														"nodeType": "YulTypedName",
														"src": "2897:7:1",
														"type": ""
													}
												],
												"src": "2860:126:1"
											},
											{
												"body": {
													"nativeSrc": "3037:51:1",
													"nodeType": "YulBlock",
													"src": "3037:51:1",
													"statements": [
														{
															"nativeSrc": "3047:35:1",
															"nodeType": "YulAssignment",
															"src": "3047:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3076:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3058:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:1"
																},
																"nativeSrc": "3058:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3058:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3047:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2992:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3019:5:1",
														"nodeType": "YulTypedName",
														"src": "3019:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3029:7:1",
														"nodeType": "YulTypedName",
														"src": "3029:7:1",
														"type": ""
													}
												],
												"src": "2992:96:1"
											},
											{
												"body": {
													"nativeSrc": "3137:79:1",
													"nodeType": "YulBlock",
													"src": "3137:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3194:16:1",
																"nodeType": "YulBlock",
																"src": "3194:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3203:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3206:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3196:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:1"
																			},
																			"nativeSrc": "3196:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:1"
																		},
																		"nativeSrc": "3196:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3160:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3185:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3167:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:1"
																				},
																				"nativeSrc": "3167:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3157:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:1"
																		},
																		"nativeSrc": "3157:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3150:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:1"
																},
																"nativeSrc": "3150:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3150:43:1"
															},
															"nativeSrc": "3147:63:1",
															"nodeType": "YulIf",
															"src": "3147:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3094:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3130:5:1",
														"nodeType": "YulTypedName",
														"src": "3130:5:1",
														"type": ""
													}
												],
												"src": "3094:122:1"
											},
											{
												"body": {
													"nativeSrc": "3274:87:1",
													"nodeType": "YulBlock",
													"src": "3274:87:1",
													"statements": [
														{
															"nativeSrc": "3284:29:1",
															"nodeType": "YulAssignment",
															"src": "3284:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3306:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3293:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:1"
																},
																"nativeSrc": "3293:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3293:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3284:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3349:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3322:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:1"
																},
																"nativeSrc": "3322:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3322:33:1"
															},
															"nativeSrc": "3322:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3222:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3252:6:1",
														"nodeType": "YulTypedName",
														"src": "3252:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3260:3:1",
														"nodeType": "YulTypedName",
														"src": "3260:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3268:5:1",
														"nodeType": "YulTypedName",
														"src": "3268:5:1",
														"type": ""
													}
												],
												"src": "3222:139:1"
											},
											{
												"body": {
													"nativeSrc": "3412:32:1",
													"nodeType": "YulBlock",
													"src": "3412:32:1",
													"statements": [
														{
															"nativeSrc": "3422:16:1",
															"nodeType": "YulAssignment",
															"src": "3422:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "3433:5:1",
																"nodeType": "YulIdentifier",
																"src": "3433:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3422:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3367:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3394:5:1",
														"nodeType": "YulTypedName",
														"src": "3394:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3404:7:1",
														"nodeType": "YulTypedName",
														"src": "3404:7:1",
														"type": ""
													}
												],
												"src": "3367:77:1"
											},
											{
												"body": {
													"nativeSrc": "3493:79:1",
													"nodeType": "YulBlock",
													"src": "3493:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3550:16:1",
																"nodeType": "YulBlock",
																"src": "3550:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3559:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3562:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3552:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:1"
																			},
																			"nativeSrc": "3552:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:1"
																		},
																		"nativeSrc": "3552:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3516:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3541:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3523:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:1"
																				},
																				"nativeSrc": "3523:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3513:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:1"
																		},
																		"nativeSrc": "3513:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3506:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:1"
																},
																"nativeSrc": "3506:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3506:43:1"
															},
															"nativeSrc": "3503:63:1",
															"nodeType": "YulIf",
															"src": "3503:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "3450:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:1",
														"nodeType": "YulTypedName",
														"src": "3486:5:1",
														"type": ""
													}
												],
												"src": "3450:122:1"
											},
											{
												"body": {
													"nativeSrc": "3630:87:1",
													"nodeType": "YulBlock",
													"src": "3630:87:1",
													"statements": [
														{
															"nativeSrc": "3640:29:1",
															"nodeType": "YulAssignment",
															"src": "3640:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3662:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3649:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:1"
																},
																"nativeSrc": "3649:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3649:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3640:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3705:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3678:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:1"
																},
																"nativeSrc": "3678:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3678:33:1"
															},
															"nativeSrc": "3678:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3578:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3608:6:1",
														"nodeType": "YulTypedName",
														"src": "3608:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3616:3:1",
														"nodeType": "YulTypedName",
														"src": "3616:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3624:5:1",
														"nodeType": "YulTypedName",
														"src": "3624:5:1",
														"type": ""
													}
												],
												"src": "3578:139:1"
											},
											{
												"body": {
													"nativeSrc": "3806:391:1",
													"nodeType": "YulBlock",
													"src": "3806:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3852:83:1",
																"nodeType": "YulBlock",
																"src": "3852:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3854:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:1"
																			},
																			"nativeSrc": "3854:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:1"
																		},
																		"nativeSrc": "3854:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3827:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3836:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3823:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:1"
																		},
																		"nativeSrc": "3823:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3819:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:1"
																},
																"nativeSrc": "3819:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3819:32:1"
															},
															"nativeSrc": "3816:119:1",
															"nodeType": "YulIf",
															"src": "3816:119:1"
														},
														{
															"nativeSrc": "3945:117:1",
															"nodeType": "YulBlock",
															"src": "3945:117:1",
															"statements": [
																{
																	"nativeSrc": "3960:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3974:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3964:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3989:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3989:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4024:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4035:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4020:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:1"
																				},
																				"nativeSrc": "4020:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4044:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3999:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:1"
																		},
																		"nativeSrc": "3999:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3989:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4072:118:1",
															"nodeType": "YulBlock",
															"src": "4072:118:1",
															"statements": [
																{
																	"nativeSrc": "4087:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4101:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4091:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4117:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4117:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4152:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4163:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4148:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:1"
																				},
																				"nativeSrc": "4148:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4172:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4127:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:1"
																		},
																		"nativeSrc": "4127:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4117:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3723:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3768:9:1",
														"nodeType": "YulTypedName",
														"src": "3768:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3779:7:1",
														"nodeType": "YulTypedName",
														"src": "3779:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3791:6:1",
														"nodeType": "YulTypedName",
														"src": "3791:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3799:6:1",
														"nodeType": "YulTypedName",
														"src": "3799:6:1",
														"type": ""
													}
												],
												"src": "3723:474:1"
											},
											{
												"body": {
													"nativeSrc": "4268:53:1",
													"nodeType": "YulBlock",
													"src": "4268:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4285:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4308:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4290:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:1"
																		},
																		"nativeSrc": "4290:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4278:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:1"
																},
																"nativeSrc": "4278:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4278:37:1"
															},
															"nativeSrc": "4278:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4203:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4256:5:1",
														"nodeType": "YulTypedName",
														"src": "4256:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4263:3:1",
														"nodeType": "YulTypedName",
														"src": "4263:3:1",
														"type": ""
													}
												],
												"src": "4203:118:1"
											},
											{
												"body": {
													"nativeSrc": "4425:124:1",
													"nodeType": "YulBlock",
													"src": "4425:124:1",
													"statements": [
														{
															"nativeSrc": "4435:26:1",
															"nodeType": "YulAssignment",
															"src": "4435:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4447:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4458:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4443:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:1"
																},
																"nativeSrc": "4443:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4443:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4435:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4515:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4528:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4539:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4524:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:1"
																		},
																		"nativeSrc": "4524:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4471:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:1"
																},
																"nativeSrc": "4471:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4471:71:1"
															},
															"nativeSrc": "4471:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4327:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4397:9:1",
														"nodeType": "YulTypedName",
														"src": "4397:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4409:6:1",
														"nodeType": "YulTypedName",
														"src": "4409:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4420:4:1",
														"nodeType": "YulTypedName",
														"src": "4420:4:1",
														"type": ""
													}
												],
												"src": "4327:222:1"
											},
											{
												"body": {
													"nativeSrc": "4655:519:1",
													"nodeType": "YulBlock",
													"src": "4655:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4701:83:1",
																"nodeType": "YulBlock",
																"src": "4701:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4703:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:1"
																			},
																			"nativeSrc": "4703:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:1"
																		},
																		"nativeSrc": "4703:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4676:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4685:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4672:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:1"
																		},
																		"nativeSrc": "4672:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4697:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4668:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:1"
																},
																"nativeSrc": "4668:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4668:32:1"
															},
															"nativeSrc": "4665:119:1",
															"nodeType": "YulIf",
															"src": "4665:119:1"
														},
														{
															"nativeSrc": "4794:117:1",
															"nodeType": "YulBlock",
															"src": "4794:117:1",
															"statements": [
																{
																	"nativeSrc": "4809:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4823:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4813:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4838:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4838:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4873:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4884:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4869:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:1"
																				},
																				"nativeSrc": "4869:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4893:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4848:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:1"
																		},
																		"nativeSrc": "4848:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4838:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4921:118:1",
															"nodeType": "YulBlock",
															"src": "4921:118:1",
															"statements": [
																{
																	"nativeSrc": "4936:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4950:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4940:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4966:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4966:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5001:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5012:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4997:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:1"
																				},
																				"nativeSrc": "4997:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5021:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4976:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:1"
																		},
																		"nativeSrc": "4976:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4966:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5049:118:1",
															"nodeType": "YulBlock",
															"src": "5049:118:1",
															"statements": [
																{
																	"nativeSrc": "5064:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5078:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5068:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5094:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5094:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5129:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5140:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5125:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:1"
																				},
																				"nativeSrc": "5125:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5149:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5104:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:1"
																		},
																		"nativeSrc": "5104:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5094:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4555:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4609:9:1",
														"nodeType": "YulTypedName",
														"src": "4609:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4620:7:1",
														"nodeType": "YulTypedName",
														"src": "4620:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4632:6:1",
														"nodeType": "YulTypedName",
														"src": "4632:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4640:6:1",
														"nodeType": "YulTypedName",
														"src": "4640:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4648:6:1",
														"nodeType": "YulTypedName",
														"src": "4648:6:1",
														"type": ""
													}
												],
												"src": "4555:619:1"
											},
											{
												"body": {
													"nativeSrc": "5225:32:1",
													"nodeType": "YulBlock",
													"src": "5225:32:1",
													"statements": [
														{
															"nativeSrc": "5235:16:1",
															"nodeType": "YulAssignment",
															"src": "5235:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "5246:5:1",
																"nodeType": "YulIdentifier",
																"src": "5246:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5235:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5235:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "5180:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5207:5:1",
														"nodeType": "YulTypedName",
														"src": "5207:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5217:7:1",
														"nodeType": "YulTypedName",
														"src": "5217:7:1",
														"type": ""
													}
												],
												"src": "5180:77:1"
											},
											{
												"body": {
													"nativeSrc": "5306:79:1",
													"nodeType": "YulBlock",
													"src": "5306:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5363:16:1",
																"nodeType": "YulBlock",
																"src": "5363:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5372:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5375:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5375:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5365:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "5365:6:1"
																			},
																			"nativeSrc": "5365:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5365:12:1"
																		},
																		"nativeSrc": "5365:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5365:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5329:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5329:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5354:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "5354:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "5336:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "5336:17:1"
																				},
																				"nativeSrc": "5336:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5336:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5326:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "5326:2:1"
																		},
																		"nativeSrc": "5326:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5326:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5319:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5319:6:1"
																},
																"nativeSrc": "5319:43:1",
																"nodeType": "YulFunctionCall",
																"src": "5319:43:1"
															},
															"nativeSrc": "5316:63:1",
															"nodeType": "YulIf",
															"src": "5316:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "5263:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5299:5:1",
														"nodeType": "YulTypedName",
														"src": "5299:5:1",
														"type": ""
													}
												],
												"src": "5263:122:1"
											},
											{
												"body": {
													"nativeSrc": "5443:87:1",
													"nodeType": "YulBlock",
													"src": "5443:87:1",
													"statements": [
														{
															"nativeSrc": "5453:29:1",
															"nodeType": "YulAssignment",
															"src": "5453:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5475:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5475:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5462:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "5462:12:1"
																},
																"nativeSrc": "5462:20:1",
																"nodeType": "YulFunctionCall",
																"src": "5462:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5453:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "5453:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5518:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5518:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "5491:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "5491:26:1"
																},
																"nativeSrc": "5491:33:1",
																"nodeType": "YulFunctionCall",
																"src": "5491:33:1"
															},
															"nativeSrc": "5491:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "5491:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "5391:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5421:6:1",
														"nodeType": "YulTypedName",
														"src": "5421:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5429:3:1",
														"nodeType": "YulTypedName",
														"src": "5429:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5437:5:1",
														"nodeType": "YulTypedName",
														"src": "5437:5:1",
														"type": ""
													}
												],
												"src": "5391:139:1"
											},
											{
												"body": {
													"nativeSrc": "5602:263:1",
													"nodeType": "YulBlock",
													"src": "5602:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5648:83:1",
																"nodeType": "YulBlock",
																"src": "5648:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5650:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5650:77:1"
																			},
																			"nativeSrc": "5650:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5650:79:1"
																		},
																		"nativeSrc": "5650:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5650:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5623:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5623:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5632:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5632:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5619:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5619:3:1"
																		},
																		"nativeSrc": "5619:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5619:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5644:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5615:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5615:3:1"
																},
																"nativeSrc": "5615:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5615:32:1"
															},
															"nativeSrc": "5612:119:1",
															"nodeType": "YulIf",
															"src": "5612:119:1"
														},
														{
															"nativeSrc": "5741:117:1",
															"nodeType": "YulBlock",
															"src": "5741:117:1",
															"statements": [
																{
																	"nativeSrc": "5756:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5756:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5770:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5770:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5760:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5760:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5785:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5785:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5820:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5820:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5831:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5831:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5816:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5816:3:1"
																				},
																				"nativeSrc": "5816:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5816:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5840:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5840:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5795:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5795:20:1"
																		},
																		"nativeSrc": "5795:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5795:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5785:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5785:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "5536:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5572:9:1",
														"nodeType": "YulTypedName",
														"src": "5572:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5583:7:1",
														"nodeType": "YulTypedName",
														"src": "5583:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5595:6:1",
														"nodeType": "YulTypedName",
														"src": "5595:6:1",
														"type": ""
													}
												],
												"src": "5536:329:1"
											},
											{
												"body": {
													"nativeSrc": "5936:53:1",
													"nodeType": "YulBlock",
													"src": "5936:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5953:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5953:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5976:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5976:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5958:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "5958:17:1"
																		},
																		"nativeSrc": "5958:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5946:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5946:6:1"
																},
																"nativeSrc": "5946:37:1",
																"nodeType": "YulFunctionCall",
																"src": "5946:37:1"
															},
															"nativeSrc": "5946:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "5946:37:1"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5871:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5924:5:1",
														"nodeType": "YulTypedName",
														"src": "5924:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5931:3:1",
														"nodeType": "YulTypedName",
														"src": "5931:3:1",
														"type": ""
													}
												],
												"src": "5871:118:1"
											},
											{
												"body": {
													"nativeSrc": "6093:124:1",
													"nodeType": "YulBlock",
													"src": "6093:124:1",
													"statements": [
														{
															"nativeSrc": "6103:26:1",
															"nodeType": "YulAssignment",
															"src": "6103:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6115:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6115:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6126:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6126:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6111:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6111:3:1"
																},
																"nativeSrc": "6111:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6111:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6103:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6103:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6183:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6183:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6196:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6196:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6207:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6207:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6192:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6192:3:1"
																		},
																		"nativeSrc": "6192:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6192:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "6139:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6139:43:1"
																},
																"nativeSrc": "6139:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6139:71:1"
															},
															"nativeSrc": "6139:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6139:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5995:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6065:9:1",
														"nodeType": "YulTypedName",
														"src": "6065:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6077:6:1",
														"nodeType": "YulTypedName",
														"src": "6077:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6088:4:1",
														"nodeType": "YulTypedName",
														"src": "6088:4:1",
														"type": ""
													}
												],
												"src": "5995:222:1"
											},
											{
												"body": {
													"nativeSrc": "6306:391:1",
													"nodeType": "YulBlock",
													"src": "6306:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6352:83:1",
																"nodeType": "YulBlock",
																"src": "6352:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6354:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6354:77:1"
																			},
																			"nativeSrc": "6354:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6354:79:1"
																		},
																		"nativeSrc": "6354:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6354:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6327:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6327:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6336:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6336:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6323:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6323:3:1"
																		},
																		"nativeSrc": "6323:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6323:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6348:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6348:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6319:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6319:3:1"
																},
																"nativeSrc": "6319:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6319:32:1"
															},
															"nativeSrc": "6316:119:1",
															"nodeType": "YulIf",
															"src": "6316:119:1"
														},
														{
															"nativeSrc": "6445:117:1",
															"nodeType": "YulBlock",
															"src": "6445:117:1",
															"statements": [
																{
																	"nativeSrc": "6460:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6460:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6474:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6474:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6464:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6464:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6489:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6489:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6524:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6524:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6535:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6535:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6520:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6520:3:1"
																				},
																				"nativeSrc": "6520:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6520:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6544:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6544:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "6499:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6499:20:1"
																		},
																		"nativeSrc": "6499:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6499:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6489:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6489:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6572:118:1",
															"nodeType": "YulBlock",
															"src": "6572:118:1",
															"statements": [
																{
																	"nativeSrc": "6587:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6587:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6601:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6601:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6591:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6591:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6617:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6617:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6652:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6652:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6663:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6663:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6648:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6648:3:1"
																				},
																				"nativeSrc": "6648:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6648:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6672:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6672:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6627:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6627:20:1"
																		},
																		"nativeSrc": "6627:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6627:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6617:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6617:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "6223:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6268:9:1",
														"nodeType": "YulTypedName",
														"src": "6268:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6279:7:1",
														"nodeType": "YulTypedName",
														"src": "6279:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6291:6:1",
														"nodeType": "YulTypedName",
														"src": "6291:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6299:6:1",
														"nodeType": "YulTypedName",
														"src": "6299:6:1",
														"type": ""
													}
												],
												"src": "6223:474:1"
											},
											{
												"body": {
													"nativeSrc": "6746:43:1",
													"nodeType": "YulBlock",
													"src": "6746:43:1",
													"statements": [
														{
															"nativeSrc": "6756:27:1",
															"nodeType": "YulAssignment",
															"src": "6756:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6771:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6771:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6778:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6778:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6767:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6767:3:1"
																},
																"nativeSrc": "6767:16:1",
																"nodeType": "YulFunctionCall",
																"src": "6767:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6756:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6756:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6703:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6728:5:1",
														"nodeType": "YulTypedName",
														"src": "6728:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6738:7:1",
														"nodeType": "YulTypedName",
														"src": "6738:7:1",
														"type": ""
													}
												],
												"src": "6703:86:1"
											},
											{
												"body": {
													"nativeSrc": "6856:51:1",
													"nodeType": "YulBlock",
													"src": "6856:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6873:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6873:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6894:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6894:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6878:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "6878:15:1"
																		},
																		"nativeSrc": "6878:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6878:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6866:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6866:6:1"
																},
																"nativeSrc": "6866:35:1",
																"nodeType": "YulFunctionCall",
																"src": "6866:35:1"
															},
															"nativeSrc": "6866:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "6866:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6795:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6844:5:1",
														"nodeType": "YulTypedName",
														"src": "6844:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6851:3:1",
														"nodeType": "YulTypedName",
														"src": "6851:3:1",
														"type": ""
													}
												],
												"src": "6795:112:1"
											},
											{
												"body": {
													"nativeSrc": "7007:120:1",
													"nodeType": "YulBlock",
													"src": "7007:120:1",
													"statements": [
														{
															"nativeSrc": "7017:26:1",
															"nodeType": "YulAssignment",
															"src": "7017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7029:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7029:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7040:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7040:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7025:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7025:3:1"
																},
																"nativeSrc": "7025:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7025:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7017:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7017:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7093:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "7093:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7106:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7106:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7117:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7117:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7102:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7102:3:1"
																		},
																		"nativeSrc": "7102:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7102:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7053:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "7053:39:1"
																},
																"nativeSrc": "7053:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7053:67:1"
															},
															"nativeSrc": "7053:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "7053:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6913:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6979:9:1",
														"nodeType": "YulTypedName",
														"src": "6979:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6991:6:1",
														"nodeType": "YulTypedName",
														"src": "6991:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7002:4:1",
														"nodeType": "YulTypedName",
														"src": "7002:4:1",
														"type": ""
													}
												],
												"src": "6913:214:1"
											},
											{
												"body": {
													"nativeSrc": "7199:263:1",
													"nodeType": "YulBlock",
													"src": "7199:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7245:83:1",
																"nodeType": "YulBlock",
																"src": "7245:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7247:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7247:77:1"
																			},
																			"nativeSrc": "7247:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7247:79:1"
																		},
																		"nativeSrc": "7247:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7247:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7220:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7220:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7229:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7229:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7216:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:1"
																		},
																		"nativeSrc": "7216:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7216:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7241:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7241:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7212:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7212:3:1"
																},
																"nativeSrc": "7212:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7212:32:1"
															},
															"nativeSrc": "7209:119:1",
															"nodeType": "YulIf",
															"src": "7209:119:1"
														},
														{
															"nativeSrc": "7338:117:1",
															"nodeType": "YulBlock",
															"src": "7338:117:1",
															"statements": [
																{
																	"nativeSrc": "7353:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7353:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7367:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7367:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7357:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7357:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7382:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7382:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7417:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7417:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7428:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7428:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7413:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7413:3:1"
																				},
																				"nativeSrc": "7413:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7413:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7437:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7437:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7392:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7392:20:1"
																		},
																		"nativeSrc": "7392:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7392:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7382:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7382:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7133:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7169:9:1",
														"nodeType": "YulTypedName",
														"src": "7169:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7180:7:1",
														"nodeType": "YulTypedName",
														"src": "7180:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7192:6:1",
														"nodeType": "YulTypedName",
														"src": "7192:6:1",
														"type": ""
													}
												],
												"src": "7133:329:1"
											},
											{
												"body": {
													"nativeSrc": "7551:391:1",
													"nodeType": "YulBlock",
													"src": "7551:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "7597:83:1",
																"nodeType": "YulBlock",
																"src": "7597:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7599:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "7599:77:1"
																			},
																			"nativeSrc": "7599:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7599:79:1"
																		},
																		"nativeSrc": "7599:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "7599:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7572:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7572:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7581:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7581:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7568:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7568:3:1"
																		},
																		"nativeSrc": "7568:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7568:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7593:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7593:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7564:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7564:3:1"
																},
																"nativeSrc": "7564:32:1",
																"nodeType": "YulFunctionCall",
																"src": "7564:32:1"
															},
															"nativeSrc": "7561:119:1",
															"nodeType": "YulIf",
															"src": "7561:119:1"
														},
														{
															"nativeSrc": "7690:117:1",
															"nodeType": "YulBlock",
															"src": "7690:117:1",
															"statements": [
																{
																	"nativeSrc": "7705:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7705:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7719:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7719:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7709:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7709:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7734:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7734:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7769:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7769:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7780:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7780:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7765:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7765:3:1"
																				},
																				"nativeSrc": "7765:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7765:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7789:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7789:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7744:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7744:20:1"
																		},
																		"nativeSrc": "7744:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7744:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7734:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7734:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7817:118:1",
															"nodeType": "YulBlock",
															"src": "7817:118:1",
															"statements": [
																{
																	"nativeSrc": "7832:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7832:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7846:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7846:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7836:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7836:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7862:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7862:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7897:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7897:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7908:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7908:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7893:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7893:3:1"
																				},
																				"nativeSrc": "7893:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7893:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7917:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7917:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7872:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7872:20:1"
																		},
																		"nativeSrc": "7872:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7872:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7862:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7862:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "7468:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7513:9:1",
														"nodeType": "YulTypedName",
														"src": "7513:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7524:7:1",
														"nodeType": "YulTypedName",
														"src": "7524:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7536:6:1",
														"nodeType": "YulTypedName",
														"src": "7536:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7544:6:1",
														"nodeType": "YulTypedName",
														"src": "7544:6:1",
														"type": ""
													}
												],
												"src": "7468:474:1"
											},
											{
												"body": {
													"nativeSrc": "7976:152:1",
													"nodeType": "YulBlock",
													"src": "7976:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7993:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7993:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7996:77:1",
																		"nodeType": "YulLiteral",
																		"src": "7996:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7986:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7986:6:1"
																},
																"nativeSrc": "7986:88:1",
																"nodeType": "YulFunctionCall",
																"src": "7986:88:1"
															},
															"nativeSrc": "7986:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "7986:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8090:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8090:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8093:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8093:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8083:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8083:6:1"
																},
																"nativeSrc": "8083:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8083:15:1"
															},
															"nativeSrc": "8083:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8083:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8114:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8114:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8117:4:1",
																		"nodeType": "YulLiteral",
																		"src": "8117:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8107:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8107:6:1"
																},
																"nativeSrc": "8107:15:1",
																"nodeType": "YulFunctionCall",
																"src": "8107:15:1"
															},
															"nativeSrc": "8107:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "8107:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7948:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "7948:180:1"
											},
											{
												"body": {
													"nativeSrc": "8185:269:1",
													"nodeType": "YulBlock",
													"src": "8185:269:1",
													"statements": [
														{
															"nativeSrc": "8195:22:1",
															"nodeType": "YulAssignment",
															"src": "8195:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8209:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8209:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8215:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8215:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "8205:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8205:3:1"
																},
																"nativeSrc": "8205:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8205:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8195:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8195:6:1"
																}
															]
														},
														{
															"nativeSrc": "8226:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "8226:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8256:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8256:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8262:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8262:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8252:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8252:3:1"
																},
																"nativeSrc": "8252:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8252:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8230:18:1",
																	"nodeType": "YulTypedName",
																	"src": "8230:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8303:51:1",
																"nodeType": "YulBlock",
																"src": "8303:51:1",
																"statements": [
																	{
																		"nativeSrc": "8317:27:1",
																		"nodeType": "YulAssignment",
																		"src": "8317:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8331:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "8331:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8339:4:1",
																					"nodeType": "YulLiteral",
																					"src": "8339:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8327:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8327:3:1"
																			},
																			"nativeSrc": "8327:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8327:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8317:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8317:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8283:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8283:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8276:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8276:6:1"
																},
																"nativeSrc": "8276:26:1",
																"nodeType": "YulFunctionCall",
																"src": "8276:26:1"
															},
															"nativeSrc": "8273:81:1",
															"nodeType": "YulIf",
															"src": "8273:81:1"
														},
														{
															"body": {
																"nativeSrc": "8406:42:1",
																"nodeType": "YulBlock",
																"src": "8406:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "8420:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8420:16:1"
																			},
																			"nativeSrc": "8420:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8420:18:1"
																		},
																		"nativeSrc": "8420:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8420:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8370:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "8370:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8393:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8393:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8401:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8401:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8390:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "8390:2:1"
																		},
																		"nativeSrc": "8390:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8367:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8367:2:1"
																},
																"nativeSrc": "8367:38:1",
																"nodeType": "YulFunctionCall",
																"src": "8367:38:1"
															},
															"nativeSrc": "8364:84:1",
															"nodeType": "YulIf",
															"src": "8364:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8134:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8169:4:1",
														"nodeType": "YulTypedName",
														"src": "8169:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8178:6:1",
														"nodeType": "YulTypedName",
														"src": "8178:6:1",
														"type": ""
													}
												],
												"src": "8134:320:1"
											},
											{
												"body": {
													"nativeSrc": "8525:53:1",
													"nodeType": "YulBlock",
													"src": "8525:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8542:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8542:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8565:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8565:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8547:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "8547:17:1"
																		},
																		"nativeSrc": "8547:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8547:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8535:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8535:6:1"
																},
																"nativeSrc": "8535:37:1",
																"nodeType": "YulFunctionCall",
																"src": "8535:37:1"
															},
															"nativeSrc": "8535:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "8535:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8460:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8513:5:1",
														"nodeType": "YulTypedName",
														"src": "8513:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8520:3:1",
														"nodeType": "YulTypedName",
														"src": "8520:3:1",
														"type": ""
													}
												],
												"src": "8460:118:1"
											},
											{
												"body": {
													"nativeSrc": "8710:206:1",
													"nodeType": "YulBlock",
													"src": "8710:206:1",
													"statements": [
														{
															"nativeSrc": "8720:26:1",
															"nodeType": "YulAssignment",
															"src": "8720:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8732:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8732:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8743:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8743:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8728:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8728:3:1"
																},
																"nativeSrc": "8728:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8728:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8720:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8720:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8800:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8800:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8813:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8813:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8824:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8824:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8809:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8809:3:1"
																		},
																		"nativeSrc": "8809:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8809:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8756:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8756:43:1"
																},
																"nativeSrc": "8756:71:1",
																"nodeType": "YulFunctionCall",
																"src": "8756:71:1"
															},
															"nativeSrc": "8756:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "8756:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8881:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "8881:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8894:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8894:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8905:2:1",
																				"nodeType": "YulLiteral",
																				"src": "8905:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8890:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8890:3:1"
																		},
																		"nativeSrc": "8890:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8890:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8837:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "8837:43:1"
																},
																"nativeSrc": "8837:72:1",
																"nodeType": "YulFunctionCall",
																"src": "8837:72:1"
															},
															"nativeSrc": "8837:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "8837:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8584:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8674:9:1",
														"nodeType": "YulTypedName",
														"src": "8674:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8686:6:1",
														"nodeType": "YulTypedName",
														"src": "8686:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8694:6:1",
														"nodeType": "YulTypedName",
														"src": "8694:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8705:4:1",
														"nodeType": "YulTypedName",
														"src": "8705:4:1",
														"type": ""
													}
												],
												"src": "8584:332:1"
											},
											{
												"body": {
													"nativeSrc": "9076:288:1",
													"nodeType": "YulBlock",
													"src": "9076:288:1",
													"statements": [
														{
															"nativeSrc": "9086:26:1",
															"nodeType": "YulAssignment",
															"src": "9086:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9098:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9098:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9109:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9109:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9094:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9094:3:1"
																},
																"nativeSrc": "9094:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9094:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9086:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9086:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9166:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9166:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9179:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9179:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9190:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9190:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9175:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9175:3:1"
																		},
																		"nativeSrc": "9175:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9175:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9122:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9122:43:1"
																},
																"nativeSrc": "9122:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9122:71:1"
															},
															"nativeSrc": "9122:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9122:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9247:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9247:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9260:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9260:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9271:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9271:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9256:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9256:3:1"
																		},
																		"nativeSrc": "9256:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9256:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9203:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9203:43:1"
																},
																"nativeSrc": "9203:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9203:72:1"
															},
															"nativeSrc": "9203:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9203:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9329:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9329:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9342:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9342:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9353:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9353:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9338:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9338:3:1"
																		},
																		"nativeSrc": "9338:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9338:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9285:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9285:43:1"
																},
																"nativeSrc": "9285:72:1",
																"nodeType": "YulFunctionCall",
																"src": "9285:72:1"
															},
															"nativeSrc": "9285:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "9285:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8922:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9032:9:1",
														"nodeType": "YulTypedName",
														"src": "9032:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9044:6:1",
														"nodeType": "YulTypedName",
														"src": "9044:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9052:6:1",
														"nodeType": "YulTypedName",
														"src": "9052:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9060:6:1",
														"nodeType": "YulTypedName",
														"src": "9060:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9071:4:1",
														"nodeType": "YulTypedName",
														"src": "9071:4:1",
														"type": ""
													}
												],
												"src": "8922:442:1"
											},
											{
												"body": {
													"nativeSrc": "9468:124:1",
													"nodeType": "YulBlock",
													"src": "9468:124:1",
													"statements": [
														{
															"nativeSrc": "9478:26:1",
															"nodeType": "YulAssignment",
															"src": "9478:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9490:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "9490:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9501:2:1",
																		"nodeType": "YulLiteral",
																		"src": "9501:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9486:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9486:3:1"
																},
																"nativeSrc": "9486:18:1",
																"nodeType": "YulFunctionCall",
																"src": "9486:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9478:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9478:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9558:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "9558:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9571:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "9571:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9582:1:1",
																				"nodeType": "YulLiteral",
																				"src": "9582:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9567:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "9567:3:1"
																		},
																		"nativeSrc": "9567:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9567:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9514:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "9514:43:1"
																},
																"nativeSrc": "9514:71:1",
																"nodeType": "YulFunctionCall",
																"src": "9514:71:1"
															},
															"nativeSrc": "9514:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "9514:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "9370:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9440:9:1",
														"nodeType": "YulTypedName",
														"src": "9440:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9452:6:1",
														"nodeType": "YulTypedName",
														"src": "9452:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9463:4:1",
														"nodeType": "YulTypedName",
														"src": "9463:4:1",
														"type": ""
													}
												],
												"src": "9370:222:1"
											},
											{
												"body": {
													"nativeSrc": "9626:152:1",
													"nodeType": "YulBlock",
													"src": "9626:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9643:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9643:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9646:77:1",
																		"nodeType": "YulLiteral",
																		"src": "9646:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9636:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9636:6:1"
																},
																"nativeSrc": "9636:88:1",
																"nodeType": "YulFunctionCall",
																"src": "9636:88:1"
															},
															"nativeSrc": "9636:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "9636:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9740:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9740:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9743:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9743:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9733:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9733:6:1"
																},
																"nativeSrc": "9733:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9733:15:1"
															},
															"nativeSrc": "9733:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9733:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9764:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9764:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9767:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9767:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9757:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9757:6:1"
																},
																"nativeSrc": "9757:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9757:15:1"
															},
															"nativeSrc": "9757:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9757:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9598:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9598:180:1"
											},
											{
												"body": {
													"nativeSrc": "9828:147:1",
													"nodeType": "YulBlock",
													"src": "9828:147:1",
													"statements": [
														{
															"nativeSrc": "9838:25:1",
															"nodeType": "YulAssignment",
															"src": "9838:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9861:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9861:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9843:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9843:17:1"
																},
																"nativeSrc": "9843:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9843:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9838:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9838:1:1"
																}
															]
														},
														{
															"nativeSrc": "9872:25:1",
															"nodeType": "YulAssignment",
															"src": "9872:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9895:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9895:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9877:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9877:17:1"
																},
																"nativeSrc": "9877:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9877:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9872:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9872:1:1"
																}
															]
														},
														{
															"nativeSrc": "9906:16:1",
															"nodeType": "YulAssignment",
															"src": "9906:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9917:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9917:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9920:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9920:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9913:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:1"
																},
																"nativeSrc": "9913:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9913:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9906:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9906:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9946:22:1",
																"nodeType": "YulBlock",
																"src": "9946:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9948:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9948:16:1"
																			},
																			"nativeSrc": "9948:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9948:18:1"
																		},
																		"nativeSrc": "9948:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9948:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9938:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9938:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9941:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9941:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9935:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9935:2:1"
																},
																"nativeSrc": "9935:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9935:10:1"
															},
															"nativeSrc": "9932:36:1",
															"nodeType": "YulIf",
															"src": "9932:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9784:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9815:1:1",
														"nodeType": "YulTypedName",
														"src": "9815:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9818:1:1",
														"nodeType": "YulTypedName",
														"src": "9818:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9824:3:1",
														"nodeType": "YulTypedName",
														"src": "9824:3:1",
														"type": ""
													}
												],
												"src": "9784:191:1"
											},
											{
												"body": {
													"nativeSrc": "10107:206:1",
													"nodeType": "YulBlock",
													"src": "10107:206:1",
													"statements": [
														{
															"nativeSrc": "10117:26:1",
															"nodeType": "YulAssignment",
															"src": "10117:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10129:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10129:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10140:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10140:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10125:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10125:3:1"
																},
																"nativeSrc": "10125:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10125:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10117:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10117:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10197:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10197:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10210:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10210:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10221:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10221:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10206:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10206:3:1"
																		},
																		"nativeSrc": "10206:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10206:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10153:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10153:43:1"
																},
																"nativeSrc": "10153:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10153:71:1"
															},
															"nativeSrc": "10153:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10153:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10278:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10278:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10291:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10291:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10302:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10302:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10287:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10287:3:1"
																		},
																		"nativeSrc": "10287:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10287:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "10234:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10234:43:1"
																},
																"nativeSrc": "10234:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10234:72:1"
															},
															"nativeSrc": "10234:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10234:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "9981:332:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10071:9:1",
														"nodeType": "YulTypedName",
														"src": "10071:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10083:6:1",
														"nodeType": "YulTypedName",
														"src": "10083:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10091:6:1",
														"nodeType": "YulTypedName",
														"src": "10091:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10102:4:1",
														"nodeType": "YulTypedName",
														"src": "10102:4:1",
														"type": ""
													}
												],
												"src": "9981:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061012a575f3560e01c806340c10f19116100ab578063a217fddf1161006f578063a217fddf14610354578063a9059cbb14610372578063d5391393146103a2578063d547741f146103c0578063dd62ed3e146103dc5761012a565b806340c10f191461029e57806370a08231146102ba57806391d14854146102ea57806395d89b411461031a5780639dc29fac146103385761012a565b8063248a9ca3116100f2578063248a9ca3146101fa578063282c51f31461022a5780632f2ff15d14610248578063313ce5671461026457806336568abe146102825761012a565b806301ffc9a71461012e57806306fdde031461015e578063095ea7b31461017c57806318160ddd146101ac57806323b872dd146101ca575b5f80fd5b610148600480360381019061014391906112dd565b61040c565b6040516101559190611322565b60405180910390f35b610166610485565b60405161017391906113c5565b60405180910390f35b61019660048036038101906101919190611472565b610515565b6040516101a39190611322565b60405180910390f35b6101b4610537565b6040516101c191906114bf565b60405180910390f35b6101e460048036038101906101df91906114d8565b610540565b6040516101f19190611322565b60405180910390f35b610214600480360381019061020f919061155b565b61056e565b6040516102219190611595565b60405180910390f35b61023261058b565b60405161023f9190611595565b60405180910390f35b610262600480360381019061025d91906115ae565b6105af565b005b61026c6105d1565b6040516102799190611607565b60405180910390f35b61029c600480360381019061029791906115ae565b6105d9565b005b6102b860048036038101906102b39190611472565b610654565b005b6102d460048036038101906102cf9190611620565b6106c6565b6040516102e191906114bf565b60405180910390f35b61030460048036038101906102ff91906115ae565b61070b565b6040516103119190611322565b60405180910390f35b61032261076f565b60405161032f91906113c5565b60405180910390f35b610352600480360381019061034d9190611472565b6107ff565b005b61035c610871565b6040516103699190611595565b60405180910390f35b61038c60048036038101906103879190611472565b610877565b6040516103999190611322565b60405180910390f35b6103aa610899565b6040516103b79190611595565b60405180910390f35b6103da60048036038101906103d591906115ae565b6108bd565b005b6103f660048036038101906103f1919061164b565b6108df565b60405161040391906114bf565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061047e575061047d82610961565b5b9050919050565b606060038054610494906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546104c0906116b6565b801561050b5780601f106104e25761010080835404028352916020019161050b565b820191905f5260205f20905b8154815290600101906020018083116104ee57829003601f168201915b5050505050905090565b5f8061051f6109ca565b905061052c8185856109d1565b600191505092915050565b5f600254905090565b5f8061054a6109ca565b90506105578582856109e3565b610562858585610a75565b60019150509392505050565b5f60055f8381526020019081526020015f20600101549050919050565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84881565b6105b88261056e565b6105c181610b65565b6105cb8383610b79565b50505050565b5f6008905090565b6105e16109ca565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610645576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61064f8282610c63565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661067e81610b65565b6106888383610d4d565b7f79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e83836040516106b99291906116f5565b60405180910390a1505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b5f60055f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b60606004805461077e906116b6565b80601f01602080910402602001604051908101604052809291908181526020018280546107aa906116b6565b80156107f55780601f106107cc576101008083540402835291602001916107f5565b820191905f5260205f20905b8154815290600101906020018083116107d857829003601f168201915b5050505050905090565b7f3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a84861082981610b65565b6108338383610dcc565b7fd1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c583836040516108649291906116f5565b60405180910390a1505050565b5f801b81565b5f806108816109ca565b905061088e818585610a75565b600191505092915050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6108c68261056e565b6108cf81610b65565b6108d98383610c63565b50505050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f33905090565b6109de8383836001610e4b565b505050565b5f6109ee84846108df565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610a6f5781811015610a60578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610a579392919061171c565b60405180910390fd5b610a6e84848484035f610e4b565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ae5575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610adc9190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b55575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610b4c9190611751565b60405180910390fd5b610b6083838361101a565b505050565b610b7681610b716109ca565b611233565b50565b5f610b84838361070b565b610c5957600160055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610bf66109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610c5d565b5f90505b92915050565b5f610c6e838361070b565b15610d43575f60055f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610ce06109ca565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610d47565b5f90505b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dbd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610db49190611751565b60405180910390fd5b610dc85f838361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e3c575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610e339190611751565b60405180910390fd5b610e47825f8361101a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ebb575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610eb29190611751565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610f2b575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610f229190611751565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611014578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161100b91906114bf565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361106a578060025f82825461105e9190611797565b92505081905550611138565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156110f3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016110ea9392919061171c565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361117f578060025f82825403925050819055506111c9565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161122691906114bf565b60405180910390a3505050565b61123d828261070b565b6112805780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016112779291906117ca565b60405180910390fd5b5050565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6112bc81611288565b81146112c6575f80fd5b50565b5f813590506112d7816112b3565b92915050565b5f602082840312156112f2576112f1611284565b5b5f6112ff848285016112c9565b91505092915050565b5f8115159050919050565b61131c81611308565b82525050565b5f6020820190506113355f830184611313565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611372578082015181840152602081019050611357565b5f8484015250505050565b5f601f19601f8301169050919050565b5f6113978261133b565b6113a18185611345565b93506113b1818560208601611355565b6113ba8161137d565b840191505092915050565b5f6020820190508181035f8301526113dd818461138d565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61140e826113e5565b9050919050565b61141e81611404565b8114611428575f80fd5b50565b5f8135905061143981611415565b92915050565b5f819050919050565b6114518161143f565b811461145b575f80fd5b50565b5f8135905061146c81611448565b92915050565b5f806040838503121561148857611487611284565b5b5f6114958582860161142b565b92505060206114a68582860161145e565b9150509250929050565b6114b98161143f565b82525050565b5f6020820190506114d25f8301846114b0565b92915050565b5f805f606084860312156114ef576114ee611284565b5b5f6114fc8682870161142b565b935050602061150d8682870161142b565b925050604061151e8682870161145e565b9150509250925092565b5f819050919050565b61153a81611528565b8114611544575f80fd5b50565b5f8135905061155581611531565b92915050565b5f602082840312156115705761156f611284565b5b5f61157d84828501611547565b91505092915050565b61158f81611528565b82525050565b5f6020820190506115a85f830184611586565b92915050565b5f80604083850312156115c4576115c3611284565b5b5f6115d185828601611547565b92505060206115e28582860161142b565b9150509250929050565b5f60ff82169050919050565b611601816115ec565b82525050565b5f60208201905061161a5f8301846115f8565b92915050565b5f6020828403121561163557611634611284565b5b5f6116428482850161142b565b91505092915050565b5f806040838503121561166157611660611284565b5b5f61166e8582860161142b565b925050602061167f8582860161142b565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116cd57607f821691505b6020821081036116e0576116df611689565b5b50919050565b6116ef81611404565b82525050565b5f6040820190506117085f8301856116e6565b61171560208301846114b0565b9392505050565b5f60608201905061172f5f8301866116e6565b61173c60208301856114b0565b61174960408301846114b0565b949350505050565b5f6020820190506117645f8301846116e6565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117a18261143f565b91506117ac8361143f565b92508282019050808211156117c4576117c361176a565b5b92915050565b5f6040820190506117dd5f8301856116e6565b6117ea6020830184611586565b939250505056fea264697066735822122012ff0df29d3c37c87226dd7cddbef7ee8d08f34c6c501e884c59b27c5419428664736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3A2 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3C0 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x3DC JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2EA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x338 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x282C51F3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x282 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x15E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1AC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1CA JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x148 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x143 SWAP2 SWAP1 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x155 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x166 PUSH2 0x485 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x173 SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x515 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A3 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B4 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DF SWAP2 SWAP1 PUSH2 0x14D8 JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x155B JUMP JUMPDEST PUSH2 0x56E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x26C PUSH2 0x5D1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x5D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2CF SWAP2 SWAP1 PUSH2 0x1620 JUMP JUMPDEST PUSH2 0x6C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH2 0x76F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x13C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x7FF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35C PUSH2 0x871 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1472 JUMP JUMPDEST PUSH2 0x877 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1322 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AA PUSH2 0x899 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B7 SWAP2 SWAP1 PUSH2 0x1595 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D5 SWAP2 SWAP1 PUSH2 0x15AE JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F1 SWAP2 SWAP1 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x8DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x403 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x47E JUMPI POP PUSH2 0x47D DUP3 PUSH2 0x961 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x494 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4C0 SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x50B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4E2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x50B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4EE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x51F PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x52C DUP2 DUP6 DUP6 PUSH2 0x9D1 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x54A PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x557 DUP6 DUP3 DUP6 PUSH2 0x9E3 JUMP JUMPDEST PUSH2 0x562 DUP6 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 DUP2 JUMP JUMPDEST PUSH2 0x5B8 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x5C1 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x5CB DUP4 DUP4 PUSH2 0xB79 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5E1 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x645 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x64F DUP3 DUP3 PUSH2 0xC63 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x67E DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x688 DUP4 DUP4 PUSH2 0xD4D JUMP JUMPDEST PUSH32 0x79C65068F81072733B15AB3CBA61B23110793F90AB099D228A414B186333A81E DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x6B9 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x77E SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7AA SWAP1 PUSH2 0x16B6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7F5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7CC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7D8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH32 0x3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848 PUSH2 0x829 DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x833 DUP4 DUP4 PUSH2 0xDCC JUMP JUMPDEST PUSH32 0xD1DF306C742159C188C29D2C167874A39B84FD0F96F794AD7EA53295680EC1C5 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x864 SWAP3 SWAP2 SWAP1 PUSH2 0x16F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x881 PUSH2 0x9CA JUMP JUMPDEST SWAP1 POP PUSH2 0x88E DUP2 DUP6 DUP6 PUSH2 0xA75 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x8C6 DUP3 PUSH2 0x56E JUMP JUMPDEST PUSH2 0x8CF DUP2 PUSH2 0xB65 JUMP JUMPDEST PUSH2 0x8D9 DUP4 DUP4 PUSH2 0xC63 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9DE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xE4B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9EE DUP5 DUP5 PUSH2 0x8DF JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xA6F JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xA60 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA57 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA6E DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xE4B JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB60 DUP4 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB76 DUP2 PUSH2 0xB71 PUSH2 0x9CA JUMP JUMPDEST PUSH2 0x1233 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB84 DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST PUSH2 0xC59 JUMPI PUSH1 0x1 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xBF6 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xC5D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xC6E DUP4 DUP4 PUSH2 0x70B JUMP JUMPDEST ISZERO PUSH2 0xD43 JUMPI PUSH0 PUSH1 0x5 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCE0 PUSH2 0x9CA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xD47 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDBD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDC8 PUSH0 DUP4 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE3C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE47 DUP3 PUSH0 DUP4 PUSH2 0x101A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEBB JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB2 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF2B JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF22 SWAP2 SWAP1 PUSH2 0x1751 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1014 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x100B SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x106A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x105E SWAP2 SWAP1 PUSH2 0x1797 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1138 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x10F3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10EA SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x171C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x11C9 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x14BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x123D DUP3 DUP3 PUSH2 0x70B JUMP JUMPDEST PUSH2 0x1280 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1277 SWAP3 SWAP2 SWAP1 PUSH2 0x17CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12BC DUP2 PUSH2 0x1288 JUMP JUMPDEST DUP2 EQ PUSH2 0x12C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12D7 DUP2 PUSH2 0x12B3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x12F2 JUMPI PUSH2 0x12F1 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12FF DUP5 DUP3 DUP6 ADD PUSH2 0x12C9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x131C DUP2 PUSH2 0x1308 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1335 PUSH0 DUP4 ADD DUP5 PUSH2 0x1313 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1372 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1357 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1397 DUP3 PUSH2 0x133B JUMP JUMPDEST PUSH2 0x13A1 DUP2 DUP6 PUSH2 0x1345 JUMP JUMPDEST SWAP4 POP PUSH2 0x13B1 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1355 JUMP JUMPDEST PUSH2 0x13BA DUP2 PUSH2 0x137D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x13DD DUP2 DUP5 PUSH2 0x138D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x140E DUP3 PUSH2 0x13E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x141E DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP2 EQ PUSH2 0x1428 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1439 DUP2 PUSH2 0x1415 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1451 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP2 EQ PUSH2 0x145B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x146C DUP2 PUSH2 0x1448 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1488 JUMPI PUSH2 0x1487 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1495 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A6 DUP6 DUP3 DUP7 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x14B9 DUP2 PUSH2 0x143F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x14D2 PUSH0 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14EF JUMPI PUSH2 0x14EE PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14FC DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x151E DUP7 DUP3 DUP8 ADD PUSH2 0x145E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP2 EQ PUSH2 0x1544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1555 DUP2 PUSH2 0x1531 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1570 JUMPI PUSH2 0x156F PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x157D DUP5 DUP3 DUP6 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x158F DUP2 PUSH2 0x1528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15A8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15C4 JUMPI PUSH2 0x15C3 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x15D1 DUP6 DUP3 DUP7 ADD PUSH2 0x1547 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15E2 DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1601 DUP2 PUSH2 0x15EC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161A PUSH0 DUP4 ADD DUP5 PUSH2 0x15F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1635 JUMPI PUSH2 0x1634 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1642 DUP5 DUP3 DUP6 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1661 JUMPI PUSH2 0x1660 PUSH2 0x1284 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x166E DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x167F DUP6 DUP3 DUP7 ADD PUSH2 0x142B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16CD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16E0 JUMPI PUSH2 0x16DF PUSH2 0x1689 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16EF DUP2 PUSH2 0x1404 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1708 PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x1715 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x172F PUSH0 DUP4 ADD DUP7 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x173C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x14B0 JUMP JUMPDEST PUSH2 0x1749 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17A1 DUP3 PUSH2 0x143F JUMP JUMPDEST SWAP2 POP PUSH2 0x17AC DUP4 PUSH2 0x143F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17C4 JUMPI PUSH2 0x17C3 PUSH2 0x176A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x17DD PUSH0 DUP4 ADD DUP6 PUSH2 0x16E6 JUMP JUMPDEST PUSH2 0x17EA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1586 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT SELFDESTRUCT 0xD CALLCODE SWAP14 EXTCODECOPY CALLDATACOPY 0xC8 PUSH19 0x26DD7CDDBEF7EE8D08F34C6C501E884C59B27C SLOAD NOT TIMESTAMP DUP7 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "34115:1235:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15091:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24960:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27179:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26030:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;27925:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16336:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34294:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16752:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;35258:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17854:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;34938:151;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26185:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15380:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25162:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;35095:157;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;14713:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;26496:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;34226:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17168:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26732:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15091:202;15176:4;15214:32;15199:47;;;:11;:47;;;;:87;;;;15250:36;15274:11;15250:23;:36::i;:::-;15199:87;15192:94;;15091:202;;;:::o;24960:89::-;25005:13;25037:5;25030:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24960:89;:::o;27179:186::-;27252:4;27268:13;27284:12;:10;:12::i;:::-;27268:28;;27306:31;27315:5;27322:7;27331:5;27306:8;:31::i;:::-;27354:4;27347:11;;;27179:186;;;;:::o;26030:97::-;26082:7;26108:12;;26101:19;;26030:97;:::o;27925:244::-;28012:4;28028:15;28046:12;:10;:12::i;:::-;28028:30;;28068:37;28084:4;28090:7;28099:5;28068:15;:37::i;:::-;28115:26;28125:4;28131:2;28135:5;28115:9;:26::i;:::-;28158:4;28151:11;;;27925:244;;;;;:::o;16336:120::-;16401:7;16427:6;:12;16434:4;16427:12;;;;;;;;;;;:22;;;16420:29;;16336:120;;;:::o;34294:62::-;34332:24;34294:62;:::o;16752:136::-;16826:18;16839:4;16826:12;:18::i;:::-;14990:16;15001:4;14990:10;:16::i;:::-;16856:25:::1;16867:4;16873:7;16856:10;:25::i;:::-;;16752:136:::0;;;:::o;35258:90::-;35316:5;35340:1;35333:8;;35258:90;:::o;17854:245::-;17969:12;:10;:12::i;:::-;17947:34;;:18;:34;;;17943:102;;18004:30;;;;;;;;;;;;;;17943:102;18055:37;18067:4;18073:18;18055:11;:37::i;:::-;;17854:245;;:::o;34938:151::-;34264:24;14990:16;15001:4;14990:10;:16::i;:::-;35029:17:::1;35035:2;35039:6;35029:5;:17::i;:::-;35061:21;35071:2;35075:6;35061:21;;;;;;;:::i;:::-;;;;;;;;34938:151:::0;;;:::o;26185:116::-;26250:7;26276:9;:18;26286:7;26276:18;;;;;;;;;;;;;;;;26269:25;;26185:116;;;:::o;15380:136::-;15457:4;15480:6;:12;15487:4;15480:12;;;;;;;;;;;:20;;:29;15501:7;15480:29;;;;;;;;;;;;;;;;;;;;;;;;;15473:36;;15380:136;;;;:::o;25162:93::-;25209:13;25241:7;25234:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25162:93;:::o;35095:157::-;34332:24;14990:16;15001:4;14990:10;:16::i;:::-;35188:19:::1;35194:4;35200:6;35188:5;:19::i;:::-;35222:23;35232:4;35238:6;35222:23;;;;;;;:::i;:::-;;;;;;;;35095:157:::0;;;:::o;14713:49::-;14758:4;14713:49;;;:::o;26496:178::-;26565:4;26581:13;26597:12;:10;:12::i;:::-;26581:28;;26619:27;26629:5;26636:2;26640:5;26619:9;:27::i;:::-;26663:4;26656:11;;;26496:178;;;;:::o;34226:62::-;34264:24;34226:62;:::o;17168:138::-;17243:18;17256:4;17243:12;:18::i;:::-;14990:16;15001:4;14990:10;:16::i;:::-;17273:26:::1;17285:4;17291:7;17273:11;:26::i;:::-;;17168:138:::0;;;:::o;26732:140::-;26812:7;26838:11;:18;26850:5;26838:18;;;;;;;;;;;;;;;:27;26857:7;26838:27;;;;;;;;;;;;;;;;26831:34;;26732:140;;;;:::o;1663:146::-;1739:4;1777:25;1762:40;;;:11;:40;;;;1755:47;;1663:146;;;:::o;12345:96::-;12398:7;12424:10;12417:17;;12345:96;:::o;31875:128::-;31959:37;31968:5;31975:7;31984:5;31991:4;31959:8;:37::i;:::-;31875:128;;;:::o;33549:477::-;33648:24;33675:25;33685:5;33692:7;33675:9;:25::i;:::-;33648:52;;33734:17;33714:16;:37;33710:310;;33790:5;33771:16;:24;33767:130;;;33849:7;33858:16;33876:5;33822:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;33767:130;33938:57;33947:5;33954:7;33982:5;33963:16;:24;33989:5;33938:8;:57::i;:::-;33710:310;33638:388;33549:477;;;:::o;28542:300::-;28641:1;28625:18;;:4;:18;;;28621:86;;28693:1;28666:30;;;;;;;;;;;:::i;:::-;;;;;;;;28621:86;28734:1;28720:16;;:2;:16;;;28716:86;;28788:1;28759:32;;;;;;;;;;;:::i;:::-;;;;;;;;28716:86;28811:24;28819:4;28825:2;28829:5;28811:7;:24::i;:::-;28542:300;;;:::o;15725:103::-;15791:30;15802:4;15808:12;:10;:12::i;:::-;15791:10;:30::i;:::-;15725:103;:::o;18705:316::-;18782:4;18803:22;18811:4;18817:7;18803;:22::i;:::-;18798:217;;18873:4;18841:6;:12;18848:4;18841:12;;;;;;;;;;;:20;;:29;18862:7;18841:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;18923:12;:10;:12::i;:::-;18896:40;;18914:7;18896:40;;18908:4;18896:40;;;;;;;;;;18957:4;18950:11;;;;18798:217;18999:5;18992:12;;18705:316;;;;;:::o;19256:317::-;19334:4;19354:22;19362:4;19368:7;19354;:22::i;:::-;19350:217;;;19424:5;19392:6;:12;19399:4;19392:12;;;;;;;;;;;:20;;:29;19413:7;19392:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;19475:12;:10;:12::i;:::-;19448:40;;19466:7;19448:40;;19460:4;19448:40;;;;;;;;;;19509:4;19502:11;;;;19350:217;19551:5;19544:12;;19256:317;;;;;:::o;30607:208::-;30696:1;30677:21;;:7;:21;;;30673:91;;30750:1;30721:32;;;;;;;;;;;:::i;:::-;;;;;;;;30673:91;30773:35;30789:1;30793:7;30802:5;30773:7;:35::i;:::-;30607:208;;:::o;31133:206::-;31222:1;31203:21;;:7;:21;;;31199:89;;31274:1;31247:30;;;;;;;;;;;:::i;:::-;;;;;;;;31199:89;31297:35;31305:7;31322:1;31326:5;31297:7;:35::i;:::-;31133:206;;:::o;32835:432::-;32964:1;32947:19;;:5;:19;;;32943:89;;33018:1;32989:32;;;;;;;;;;;:::i;:::-;;;;;;;;32943:89;33064:1;33045:21;;:7;:21;;;33041:90;;33117:1;33089:31;;;;;;;;;;;:::i;:::-;;;;;;;;33041:90;33170:5;33140:11;:18;33152:5;33140:18;;;;;;;;;;;;;;;:27;33159:7;33140:27;;;;;;;;;;;;;;;:35;;;;33189:9;33185:76;;;33235:7;33219:31;;33228:5;33219:31;;;33244:5;33219:31;;;;;;:::i;:::-;;;;;;;;33185:76;32835:432;;;;:::o;29157:1107::-;29262:1;29246:18;;:4;:18;;;29242:540;;29398:5;29382:12;;:21;;;;;;;:::i;:::-;;;;;;;;29242:540;;;29434:19;29456:9;:15;29466:4;29456:15;;;;;;;;;;;;;;;;29434:37;;29503:5;29489:11;:19;29485:115;;;29560:4;29566:11;29579:5;29535:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;29485:115;29752:5;29738:11;:19;29720:9;:15;29730:4;29720:15;;;;;;;;;;;;;;;:37;;;;29420:362;29242:540;29810:1;29796:16;;:2;:16;;;29792:425;;29975:5;29959:12;;:21;;;;;;;;;;;29792:425;;;30187:5;30170:9;:13;30180:2;30170:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;29792:425;30247:2;30232:25;;30241:4;30232:25;;;30251:5;30232:25;;;;;;:::i;:::-;;;;;;;;29157:1107;;;:::o;15958:197::-;16046:22;16054:4;16060:7;16046;:22::i;:::-;16041:108;;16124:7;16133:4;16091:47;;;;;;;;;;;;:::i;:::-;;;;;;;;16041:108;15958:197;;:::o;88:117:1:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:77::-;5217:7;5246:5;5235:16;;5180:77;;;:::o;5263:122::-;5336:24;5354:5;5336:24;:::i;:::-;5329:5;5326:35;5316:63;;5375:1;5372;5365:12;5316:63;5263:122;:::o;5391:139::-;5437:5;5475:6;5462:20;5453:29;;5491:33;5518:5;5491:33;:::i;:::-;5391:139;;;;:::o;5536:329::-;5595:6;5644:2;5632:9;5623:7;5619:23;5615:32;5612:119;;;5650:79;;:::i;:::-;5612:119;5770:1;5795:53;5840:7;5831:6;5820:9;5816:22;5795:53;:::i;:::-;5785:63;;5741:117;5536:329;;;;:::o;5871:118::-;5958:24;5976:5;5958:24;:::i;:::-;5953:3;5946:37;5871:118;;:::o;5995:222::-;6088:4;6126:2;6115:9;6111:18;6103:26;;6139:71;6207:1;6196:9;6192:17;6183:6;6139:71;:::i;:::-;5995:222;;;;:::o;6223:474::-;6291:6;6299;6348:2;6336:9;6327:7;6323:23;6319:32;6316:119;;;6354:79;;:::i;:::-;6316:119;6474:1;6499:53;6544:7;6535:6;6524:9;6520:22;6499:53;:::i;:::-;6489:63;;6445:117;6601:2;6627:53;6672:7;6663:6;6652:9;6648:22;6627:53;:::i;:::-;6617:63;;6572:118;6223:474;;;;;:::o;6703:86::-;6738:7;6778:4;6771:5;6767:16;6756:27;;6703:86;;;:::o;6795:112::-;6878:22;6894:5;6878:22;:::i;:::-;6873:3;6866:35;6795:112;;:::o;6913:214::-;7002:4;7040:2;7029:9;7025:18;7017:26;;7053:67;7117:1;7106:9;7102:17;7093:6;7053:67;:::i;:::-;6913:214;;;;:::o;7133:329::-;7192:6;7241:2;7229:9;7220:7;7216:23;7212:32;7209:119;;;7247:79;;:::i;:::-;7209:119;7367:1;7392:53;7437:7;7428:6;7417:9;7413:22;7392:53;:::i;:::-;7382:63;;7338:117;7133:329;;;;:::o;7468:474::-;7536:6;7544;7593:2;7581:9;7572:7;7568:23;7564:32;7561:119;;;7599:79;;:::i;:::-;7561:119;7719:1;7744:53;7789:7;7780:6;7769:9;7765:22;7744:53;:::i;:::-;7734:63;;7690:117;7846:2;7872:53;7917:7;7908:6;7897:9;7893:22;7872:53;:::i;:::-;7862:63;;7817:118;7468:474;;;;;:::o;7948:180::-;7996:77;7993:1;7986:88;8093:4;8090:1;8083:15;8117:4;8114:1;8107:15;8134:320;8178:6;8215:1;8209:4;8205:12;8195:22;;8262:1;8256:4;8252:12;8283:18;8273:81;;8339:4;8331:6;8327:17;8317:27;;8273:81;8401:2;8393:6;8390:14;8370:18;8367:38;8364:84;;8420:18;;:::i;:::-;8364:84;8185:269;8134:320;;;:::o;8460:118::-;8547:24;8565:5;8547:24;:::i;:::-;8542:3;8535:37;8460:118;;:::o;8584:332::-;8705:4;8743:2;8732:9;8728:18;8720:26;;8756:71;8824:1;8813:9;8809:17;8800:6;8756:71;:::i;:::-;8837:72;8905:2;8894:9;8890:18;8881:6;8837:72;:::i;:::-;8584:332;;;;;:::o;8922:442::-;9071:4;9109:2;9098:9;9094:18;9086:26;;9122:71;9190:1;9179:9;9175:17;9166:6;9122:71;:::i;:::-;9203:72;9271:2;9260:9;9256:18;9247:6;9203:72;:::i;:::-;9285;9353:2;9342:9;9338:18;9329:6;9285:72;:::i;:::-;8922:442;;;;;;:::o;9370:222::-;9463:4;9501:2;9490:9;9486:18;9478:26;;9514:71;9582:1;9571:9;9567:17;9558:6;9514:71;:::i;:::-;9370:222;;;;:::o;9598:180::-;9646:77;9643:1;9636:88;9743:4;9740:1;9733:15;9767:4;9764:1;9757:15;9784:191;9824:3;9843:20;9861:1;9843:20;:::i;:::-;9838:25;;9877:20;9895:1;9877:20;:::i;:::-;9872:25;;9920:1;9917;9913:9;9906:16;;9941:3;9938:1;9935:10;9932:36;;;9948:18;;:::i;:::-;9932:36;9784:191;;;;:::o;9981:332::-;10102:4;10140:2;10129:9;10125:18;10117:26;;10153:71;10221:1;10210:9;10206:17;10197:6;10153:71;:::i;:::-;10234:72;10302:2;10291:9;10287:18;10278:6;10234:72;:::i;:::-;9981:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1236600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BURNER_ROLE()": "370",
								"DEFAULT_ADMIN_ROLE()": "352",
								"MINTER_ROLE()": "391",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"burn(address,uint256)": "infinite",
								"decimals()": "427",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3189",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 34115,
									"end": 35350,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 34452,
									"end": 34830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34565,
									"end": 34569,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 34571,
									"end": 34577,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 24856,
									"end": 24861,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24853,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24848,
									"end": 24861,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24848,
									"end": 24861,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24881,
									"end": 24888,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24878,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 24871,
									"end": 24888,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24871,
									"end": 24888,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24782,
									"end": 24895,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24782,
									"end": 24895,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34589,
									"end": 34651,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 34595,
									"end": 34605,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 34638,
									"end": 34648,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 34638,
									"end": 34646,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 34638,
									"end": 34646,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34638,
									"end": 34646,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 34638,
									"end": 34648,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34638,
									"end": 34648,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 34638,
									"end": 34648,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34638,
									"end": 34648,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 34638,
									"end": 34648,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34630,
									"end": 34649,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 34630,
									"end": 34649,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 34624,
									"end": 34626,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 34624,
									"end": 34649,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 34624,
									"end": 34649,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34624,
									"end": 34649,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34624,
									"end": 34649,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 34624,
									"end": 34649,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34624,
									"end": 34649,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 34624,
									"end": 34649,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34607,
									"end": 34620,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 34607,
									"end": 34650,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 34607,
									"end": 34650,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 34607,
									"end": 34650,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 34607,
									"end": 34650,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 34607,
									"end": 34650,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34607,
									"end": 34650,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 34607,
									"end": 34650,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34589,
									"end": 34594,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 34589,
									"end": 34594,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34589,
									"end": 34594,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 34589,
									"end": 34651,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34589,
									"end": 34651,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 34589,
									"end": 34651,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34589,
									"end": 34651,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 34589,
									"end": 34651,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34781,
									"end": 34823,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 14758,
									"end": 14762,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34792,
									"end": 34810,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34792,
									"end": 34810,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 34812,
									"end": 34822,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 34781,
									"end": 34791,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34781,
									"end": 34791,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34781,
									"end": 34791,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 34781,
									"end": 34823,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 34781,
									"end": 34823,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 34781,
									"end": 34823,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 34781,
									"end": 34823,
									"modifierDepth": 1,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 34781,
									"end": 34823,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34781,
									"end": 34823,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34452,
									"end": 34830,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 35258,
									"end": 35348,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 35258,
									"end": 35348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35316,
									"end": 35321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35340,
									"end": 35341,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 35333,
									"end": 35341,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35333,
									"end": 35341,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35258,
									"end": 35348,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 35258,
									"end": 35348,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30607,
									"end": 30815,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 30607,
									"end": 30815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30696,
									"end": 30697,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30677,
									"end": 30698,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30677,
									"end": 30698,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30677,
									"end": 30684,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30677,
									"end": 30698,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30677,
									"end": 30698,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30677,
									"end": 30698,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30673,
									"end": 30764,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30673,
									"end": 30764,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 30750,
									"end": 30751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 30721,
									"end": 30753,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30721,
									"end": 30753,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30673,
									"end": 30764,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30673,
									"end": 30764,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30773,
									"end": 30808,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 30789,
									"end": 30790,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30793,
									"end": 30800,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30802,
									"end": 30807,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30773,
									"end": 30780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 30773,
									"end": 30780,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30773,
									"end": 30780,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 30773,
									"end": 30808,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30773,
									"end": 30808,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 30773,
									"end": 30808,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30773,
									"end": 30808,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 30773,
									"end": 30808,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30607,
									"end": 30815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30607,
									"end": 30815,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30607,
									"end": 30815,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18782,
									"end": 18786,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18803,
									"end": 18825,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18811,
									"end": 18815,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18817,
									"end": 18824,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18803,
									"end": 18810,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 18803,
									"end": 18810,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18803,
									"end": 18810,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18803,
									"end": 18825,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18803,
									"end": 18825,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18803,
									"end": 18825,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18803,
									"end": 18825,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18803,
									"end": 18825,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18798,
									"end": 19015,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 18798,
									"end": 19015,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18873,
									"end": 18877,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18841,
									"end": 18847,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18848,
									"end": 18852,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18841,
									"end": 18853,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18861,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18841,
									"end": 18861,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18862,
									"end": 18869,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18870,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 18841,
									"end": 18877,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18923,
									"end": 18935,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 18923,
									"end": 18933,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 18923,
									"end": 18933,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18923,
									"end": 18933,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18923,
									"end": 18935,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18923,
									"end": 18935,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18923,
									"end": 18935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18923,
									"end": 18935,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 18923,
									"end": 18935,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18914,
									"end": 18921,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18908,
									"end": 18912,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18896,
									"end": 18936,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 18957,
									"end": 18961,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 18950,
									"end": 18961,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18950,
									"end": 18961,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18950,
									"end": 18961,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 18950,
									"end": 18961,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18798,
									"end": 19015,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 18798,
									"end": 19015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18999,
									"end": 19004,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18992,
									"end": 19004,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18992,
									"end": 19004,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18705,
									"end": 19021,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18705,
									"end": 19021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29157,
									"end": 30264,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 29157,
									"end": 30264,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29262,
									"end": 29263,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29246,
									"end": 29264,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29246,
									"end": 29264,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29246,
									"end": 29250,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29246,
									"end": 29264,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29246,
									"end": 29264,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29246,
									"end": 29264,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29398,
									"end": 29403,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29394,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29382,
									"end": 29394,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 29382,
									"end": 29403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29382,
									"end": 29403,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "tag",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29434,
									"end": 29453,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29456,
									"end": 29465,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29466,
									"end": 29470,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 29456,
									"end": 29471,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29434,
									"end": 29471,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29434,
									"end": 29471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29503,
									"end": 29508,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29489,
									"end": 29500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29489,
									"end": 29508,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 29485,
									"end": 29600,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 29485,
									"end": 29600,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 29485,
									"end": 29600,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29560,
									"end": 29564,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29566,
									"end": 29577,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29579,
									"end": 29584,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 29535,
									"end": 29585,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29535,
									"end": 29585,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 29485,
									"end": 29600,
									"name": "tag",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 29485,
									"end": 29600,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29752,
									"end": 29757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29738,
									"end": 29749,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29738,
									"end": 29757,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29729,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29730,
									"end": 29734,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29720,
									"end": 29735,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29757,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29757,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29757,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29720,
									"end": 29757,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29420,
									"end": 29782,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 29242,
									"end": 29782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 29810,
									"end": 29811,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29796,
									"end": 29812,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29796,
									"end": 29812,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29796,
									"end": 29798,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29796,
									"end": 29812,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 29796,
									"end": 29812,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 29796,
									"end": 29812,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 29975,
									"end": 29980,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29971,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 29959,
									"end": 29971,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 29959,
									"end": 29980,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30187,
									"end": 30192,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30179,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30180,
									"end": 30182,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30183,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 30170,
									"end": 30192,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "tag",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 29792,
									"end": 30217,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30247,
									"end": 30249,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30241,
									"end": 30245,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 30251,
									"end": 30256,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "47"
								},
								{
									"begin": 30232,
									"end": 30257,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "tag",
									"source": 0,
									"value": "46"
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 30232,
									"end": 30257,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 29157,
									"end": 30264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29157,
									"end": 30264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29157,
									"end": 30264,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 29157,
									"end": 30264,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 15380,
									"end": 15516,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 15380,
									"end": 15516,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15457,
									"end": 15461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15480,
									"end": 15486,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15487,
									"end": 15491,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15480,
									"end": 15492,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15480,
									"end": 15500,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15501,
									"end": 15508,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 15480,
									"end": 15509,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 15473,
									"end": 15509,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 15473,
									"end": 15509,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15380,
									"end": 15516,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 15380,
									"end": 15516,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 15380,
									"end": 15516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15380,
									"end": 15516,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15380,
									"end": 15516,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12345,
									"end": 12441,
									"name": "tag",
									"source": 0,
									"value": "34"
								},
								{
									"begin": 12345,
									"end": 12441,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12398,
									"end": 12405,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 12424,
									"end": 12434,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12417,
									"end": 12434,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12417,
									"end": 12434,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12345,
									"end": 12441,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12345,
									"end": 12441,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 1,
									"value": "101"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 1,
									"value": "103"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 1,
									"value": "102"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 1,
									"value": "108"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "112"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 1,
									"value": "117"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 1,
									"value": "118"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 1,
									"value": "123"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2714,
									"end": 2721,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2748,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2732,
									"end": 2748,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2754,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2677,
									"end": 2754,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 2851,
									"end": 2856,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2833,
									"end": 2857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 2833,
									"end": 2857,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2831,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2823,
									"end": 2858,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2872,
									"end": 2873,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2869,
									"end": 2870,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 2874,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 2813,
									"end": 2876,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2760,
									"end": 2882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2760,
									"end": 2882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2945,
									"end": 2950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2976,
									"end": 2982,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2970,
									"end": 2983,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2961,
									"end": 2983,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 3019,
									"end": 3024,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 2992,
									"end": 3025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 2992,
									"end": 3025,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 3031,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2888,
									"end": 3031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3145,
									"end": 3151,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3153,
									"end": 3159,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3161,
									"end": 3167,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3210,
									"end": 3212,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 3198,
									"end": 3207,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3189,
									"end": 3196,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3185,
									"end": 3208,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3181,
									"end": 3213,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 3216,
									"end": 3295,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "tag",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 3216,
									"end": 3295,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 3178,
									"end": 3297,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3357,
									"end": 3358,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3346,
									"end": 3355,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3342,
									"end": 3359,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3360,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3387,
									"end": 3405,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3379,
									"end": 3385,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3376,
									"end": 3406,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3409,
									"end": 3488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 3409,
									"end": 3488,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "tag",
									"source": 1,
									"value": "134"
								},
								{
									"begin": 3373,
									"end": 3490,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 3580,
									"end": 3587,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3571,
									"end": 3577,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3560,
									"end": 3569,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3556,
									"end": 3578,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3514,
									"end": 3588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "tag",
									"source": 1,
									"value": "136"
								},
								{
									"begin": 3514,
									"end": 3588,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3504,
									"end": 3588,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3307,
									"end": 3598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3658,
									"end": 3660,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3647,
									"end": 3656,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3643,
									"end": 3661,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3637,
									"end": 3662,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3689,
									"end": 3707,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3681,
									"end": 3687,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3678,
									"end": 3708,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3711,
									"end": 3790,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "tag",
									"source": 1,
									"value": "138"
								},
								{
									"begin": 3711,
									"end": 3790,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 3675,
									"end": 3792,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 3882,
									"end": 3889,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3873,
									"end": 3879,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3862,
									"end": 3871,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3858,
									"end": 3880,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3816,
									"end": 3890,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 3816,
									"end": 3890,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3806,
									"end": 3890,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3608,
									"end": 3900,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3939,
									"end": 3941,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4021,
									"end": 4028,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 4012,
									"end": 4018,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4001,
									"end": 4010,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3997,
									"end": 4019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3965,
									"end": 4029,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 3965,
									"end": 4029,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3955,
									"end": 4029,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3910,
									"end": 4039,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 4046,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3037,
									"end": 4046,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4104,
									"end": 4110,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4138,
									"end": 4143,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4132,
									"end": 4144,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4122,
									"end": 4144,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4151,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4052,
									"end": 4151,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 4157,
									"end": 4337,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4205,
									"end": 4282,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4202,
									"end": 4203,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4195,
									"end": 4283,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4302,
									"end": 4306,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 4299,
									"end": 4300,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 4292,
									"end": 4307,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4326,
									"end": 4330,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 4323,
									"end": 4324,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4316,
									"end": 4331,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4387,
									"end": 4393,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4424,
									"end": 4425,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4418,
									"end": 4422,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4414,
									"end": 4426,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4404,
									"end": 4426,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4471,
									"end": 4472,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 4465,
									"end": 4469,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4461,
									"end": 4473,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4492,
									"end": 4510,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4548,
									"end": 4552,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 4540,
									"end": 4546,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4536,
									"end": 4553,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4526,
									"end": 4553,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 4482,
									"end": 4563,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4610,
									"end": 4612,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4602,
									"end": 4608,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4599,
									"end": 4613,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4579,
									"end": 4597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4576,
									"end": 4614,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 4629,
									"end": 4647,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 4629,
									"end": 4647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 4573,
									"end": 4657,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4394,
									"end": 4663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4343,
									"end": 4663,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4343,
									"end": 4663,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4718,
									"end": 4722,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4733,
									"end": 4744,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4764,
									"end": 4767,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4761,
									"end": 4762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4754,
									"end": 4768,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 4798,
									"end": 4802,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4795,
									"end": 4796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4785,
									"end": 4803,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4777,
									"end": 4803,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4669,
									"end": 4810,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4669,
									"end": 4810,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4900,
									"end": 4902,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4895,
									"end": 4897,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 4888,
									"end": 4893,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4884,
									"end": 4898,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4880,
									"end": 4903,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4870,
									"end": 4903,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4816,
									"end": 4909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4816,
									"end": 4909,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4959,
									"end": 4967,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5009,
									"end": 5014,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5003,
									"end": 5007,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5015,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4978,
									"end": 5015,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4915,
									"end": 5022,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4915,
									"end": 5022,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5097,
									"end": 5103,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5147,
									"end": 5148,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 5135,
									"end": 5145,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5131,
									"end": 5149,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5200,
									"end": 5266,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5189,
									"end": 5198,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 5170,
									"end": 5267,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5170,
									"end": 5267,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5318,
									"end": 5326,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5307,
									"end": 5316,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 5288,
									"end": 5327,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5288,
									"end": 5327,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 5276,
									"end": 5327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5360,
									"end": 5364,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5356,
									"end": 5365,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5349,
									"end": 5354,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5345,
									"end": 5366,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5336,
									"end": 5366,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5409,
									"end": 5413,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 5399,
									"end": 5407,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5395,
									"end": 5414,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5388,
									"end": 5393,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5385,
									"end": 5415,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5375,
									"end": 5415,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5104,
									"end": 5421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 5421,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5028,
									"end": 5421,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5455,
									"end": 5458,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5476,
									"end": 5481,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5469,
									"end": 5481,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5427,
									"end": 5487,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5427,
									"end": 5487,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5543,
									"end": 5552,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 5621,
									"end": 5626,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 5603,
									"end": 5627,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "tag",
									"source": 1,
									"value": "157"
								},
								{
									"begin": 5603,
									"end": 5627,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 5594,
									"end": 5628,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 5594,
									"end": 5628,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 5576,
									"end": 5629,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "tag",
									"source": 1,
									"value": "155"
								},
								{
									"begin": 5576,
									"end": 5629,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5563,
									"end": 5629,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5635,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5684,
									"end": 5687,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5705,
									"end": 5710,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5698,
									"end": 5710,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5641,
									"end": 5716,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5641,
									"end": 5716,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 5863,
									"end": 5870,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 5832,
									"end": 5871,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 5832,
									"end": 5871,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 5966,
									"end": 5982,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 5942,
									"end": 5983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "tag",
									"source": 1,
									"value": "162"
								},
								{
									"begin": 5942,
									"end": 5983,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5934,
									"end": 5940,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5927,
									"end": 5931,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5921,
									"end": 5932,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 5893,
									"end": 5984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "tag",
									"source": 1,
									"value": "161"
								},
								{
									"begin": 5893,
									"end": 5984,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5887,
									"end": 5891,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5880,
									"end": 5985,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5798,
									"end": 5991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5722,
									"end": 5991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5722,
									"end": 5991,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6042,
									"end": 6045,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5997,
									"end": 6070,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5997,
									"end": 6070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 6153,
									"end": 6185,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "tag",
									"source": 1,
									"value": "165"
								},
								{
									"begin": 6153,
									"end": 6185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 6252,
									"end": 6258,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6244,
									"end": 6250,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6238,
									"end": 6242,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 6194,
									"end": 6259,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 6194,
									"end": 6259,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6129,
									"end": 6265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6076,
									"end": 6265,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6076,
									"end": 6265,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6348,
									"end": 6351,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6341,
									"end": 6346,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6338,
									"end": 6352,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 6439,
									"end": 6440,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6432,
									"end": 6437,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 6402,
									"end": 6441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 6402,
									"end": 6441,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6375,
									"end": 6376,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6368,
									"end": 6373,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6364,
									"end": 6377,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6355,
									"end": 6377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 6331,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6457,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6271,
									"end": 6457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "tag",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6564,
									"end": 6566,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 6559,
									"end": 6562,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6556,
									"end": 6567,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 6630,
									"end": 6635,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 6598,
									"end": 6636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 6598,
									"end": 6636,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 6700,
									"end": 6710,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 6682,
									"end": 6711,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 6682,
									"end": 6711,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6672,
									"end": 6680,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6668,
									"end": 6712,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6865,
									"end": 6867,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6853,
									"end": 6863,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6850,
									"end": 6868,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6886,
									"end": 6894,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6871,
									"end": 6894,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 6847,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 6983,
									"end": 6986,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 6965,
									"end": 6987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 6965,
									"end": 6987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6955,
									"end": 6963,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6951,
									"end": 6988,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6938,
									"end": 6949,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 6909,
									"end": 6989,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 6909,
									"end": 6989,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6568,
									"end": 6999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 6553,
									"end": 6999,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6463,
									"end": 7006,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6463,
									"end": 7006,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "tag",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7066,
									"end": 7074,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7121,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7110,
									"end": 7114,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7106,
									"end": 7122,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7085,
									"end": 7122,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7012,
									"end": 7129,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7012,
									"end": 7129,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "tag",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7179,
									"end": 7185,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 7260,
									"end": 7261,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7256,
									"end": 7262,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7248,
									"end": 7253,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7245,
									"end": 7246,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7241,
									"end": 7254,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "81"
								},
								{
									"begin": 7212,
									"end": 7263,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 7212,
									"end": 7263,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7208,
									"end": 7264,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 7293,
									"end": 7297,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7287,
									"end": 7291,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7283,
									"end": 7298,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7273,
									"end": 7298,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7186,
									"end": 7304,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7135,
									"end": 7304,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7135,
									"end": 7304,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "tag",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7385,
									"end": 7389,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 7556,
									"end": 7559,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7550,
									"end": 7554,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 7531,
									"end": 7560,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 7531,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7523,
									"end": 7560,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7593,
									"end": 7596,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7590,
									"end": 7591,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 7586,
									"end": 7597,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7580,
									"end": 7584,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7577,
									"end": 7598,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7569,
									"end": 7598,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7309,
									"end": 7604,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7309,
									"end": 7604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 7759,
									"end": 7762,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 7726,
									"end": 7763,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 7726,
									"end": 7763,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7828,
									"end": 7846,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7820,
									"end": 7826,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7817,
									"end": 7847,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 7850,
									"end": 7868,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "tag",
									"source": 1,
									"value": "187"
								},
								{
									"begin": 7850,
									"end": 7868,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 7814,
									"end": 7870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 7926,
									"end": 7930,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7920,
									"end": 7931,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 7894,
									"end": 7932,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "tag",
									"source": 1,
									"value": "188"
								},
								{
									"begin": 7894,
									"end": 7932,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 8039,
									"end": 8045,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8031,
									"end": 8037,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8025,
									"end": 8029,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 7979,
									"end": 8046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "tag",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 7979,
									"end": 8046,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8073,
									"end": 8074,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8097,
									"end": 8101,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8084,
									"end": 8101,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8129,
									"end": 8131,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8121,
									"end": 8127,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8118,
									"end": 8132,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8146,
									"end": 8147,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8803,
									"end": 8804,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8820,
									"end": 8826,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8869,
									"end": 8878,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8864,
									"end": 8867,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 8860,
									"end": 8879,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8854,
									"end": 8880,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8845,
									"end": 8880,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "tag",
									"source": 1,
									"value": "192"
								},
								{
									"begin": 8817,
									"end": 8894,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 8980,
									"end": 8986,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8973,
									"end": 8978,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "83"
								},
								{
									"begin": 8920,
									"end": 8987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "tag",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 8920,
									"end": 8987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8914,
									"end": 8918,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8907,
									"end": 8988,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8776,
									"end": 8998,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 8141,
									"end": 8759,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8193,
									"end": 8197,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8189,
									"end": 8198,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 8181,
									"end": 8187,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8177,
									"end": 8199,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 8259,
									"end": 8263,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 8227,
									"end": 8264,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 8227,
									"end": 8264,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8286,
									"end": 8287,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8314,
									"end": 8321,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8311,
									"end": 8312,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8308,
									"end": 8322,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8393,
									"end": 8402,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8391,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8384,
									"end": 8403,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8378,
									"end": 8404,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8370,
									"end": 8376,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8363,
									"end": 8405,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8444,
									"end": 8445,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8436,
									"end": 8442,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8432,
									"end": 8446,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8422,
									"end": 8446,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8491,
									"end": 8493,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8480,
									"end": 8489,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 8476,
									"end": 8494,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 8463,
									"end": 8494,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8337,
									"end": 8341,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8334,
									"end": 8335,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8330,
									"end": 8342,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8325,
									"end": 8342,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 8300,
									"end": 8508,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8536,
									"end": 8542,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 8527,
									"end": 8534,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8524,
									"end": 8543,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8594,
									"end": 8603,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8589,
									"end": 8592,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8585,
									"end": 8604,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8579,
									"end": 8605,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 8679,
									"end": 8683,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 8671,
									"end": 8677,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 8667,
									"end": 8684,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8665,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "82"
								},
								{
									"begin": 8637,
									"end": 8685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 8637,
									"end": 8685,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8629,
									"end": 8635,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8622,
									"end": 8686,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8544,
									"end": 8700,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "tag",
									"source": 1,
									"value": "198"
								},
								{
									"begin": 8521,
									"end": 8700,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8746,
									"end": 8747,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8742,
									"end": 8743,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8734,
									"end": 8740,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8730,
									"end": 8744,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8726,
									"end": 8748,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 8720,
									"end": 8724,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 8713,
									"end": 8749,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8148,
									"end": 8759,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8111,
									"end": 8998,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7701,
									"end": 9004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7609,
									"end": 9004,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7609,
									"end": 9004,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9010,
									"end": 9190,
									"name": "tag",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 9010,
									"end": 9190,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9058,
									"end": 9135,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 9055,
									"end": 9056,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9048,
									"end": 9136,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9155,
									"end": 9159,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 9152,
									"end": 9153,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 9145,
									"end": 9160,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 9179,
									"end": 9183,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 9176,
									"end": 9177,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9169,
									"end": 9184,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "tag",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9238,
									"end": 9246,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9285,
									"end": 9290,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9282,
									"end": 9283,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 9278,
									"end": 9291,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 9257,
									"end": 9291,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9257,
									"end": 9291,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9196,
									"end": 9298,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9196,
									"end": 9298,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9365,
									"end": 9370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9372,
									"end": 9376,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9396,
									"end": 9402,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9402,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9402,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9420,
									"end": 9425,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9411,
									"end": 9425,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9411,
									"end": 9425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "tag",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9455,
									"end": 9456,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 9445,
									"end": 9453,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9442,
									"end": 9457,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9554,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9545,
									"end": 9548,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 9541,
									"end": 9555,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 9535,
									"end": 9539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9532,
									"end": 9556,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 9559,
									"end": 9577,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "tag",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 9559,
									"end": 9577,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 9529,
									"end": 9579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9609,
									"end": 9610,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 9599,
									"end": 9607,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 9595,
									"end": 9611,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10024,
									"end": 10028,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10017,
									"end": 10022,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10013,
									"end": 10029,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 10004,
									"end": 10029,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10004,
									"end": 10029,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 9592,
									"end": 10043,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10074,
									"end": 10078,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 10068,
									"end": 10072,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10064,
									"end": 10079,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 10056,
									"end": 10079,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10056,
									"end": 10079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10127,
									"end": 10135,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "85"
								},
								{
									"begin": 10104,
									"end": 10136,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "tag",
									"source": 1,
									"value": "209"
								},
								{
									"begin": 10104,
									"end": 10136,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10092,
									"end": 10136,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 10092,
									"end": 10136,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "203"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "tag",
									"source": 1,
									"value": "205"
								},
								{
									"begin": 9434,
									"end": 10146,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9304,
									"end": 10152,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10212,
									"end": 10217,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10403,
									"end": 10411,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10424,
									"end": 10425,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 10415,
									"end": 10425,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10415,
									"end": 10425,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10426,
									"end": 10431,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10426,
									"end": 10431,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "tag",
									"source": 1,
									"value": "211"
								},
								{
									"begin": 10393,
									"end": 10433,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10452,
									"end": 10456,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10469,
									"end": 10470,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10460,
									"end": 10470,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10460,
									"end": 10470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10471,
									"end": 10476,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10471,
									"end": 10476,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "tag",
									"source": 1,
									"value": "212"
								},
								{
									"begin": 10442,
									"end": 10478,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10538,
									"end": 10542,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10586,
									"end": 10587,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10622,
									"end": 10623,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "tag",
									"source": 1,
									"value": "214"
								},
								{
									"begin": 10581,
									"end": 10608,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10599,
									"end": 10600,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 10590,
									"end": 10600,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10590,
									"end": 10600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10601,
									"end": 10606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10601,
									"end": 10606,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10601,
									"end": 10606,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "tag",
									"source": 1,
									"value": "215"
								},
								{
									"begin": 10617,
									"end": 10808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10662,
									"end": 10665,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 10652,
									"end": 10660,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10649,
									"end": 10666,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 10669,
									"end": 10687,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "tag",
									"source": 1,
									"value": "217"
								},
								{
									"begin": 10669,
									"end": 10687,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "tag",
									"source": 1,
									"value": "216"
								},
								{
									"begin": 10646,
									"end": 10689,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10718,
									"end": 10726,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10715,
									"end": 10716,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 10711,
									"end": 10727,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 10702,
									"end": 10727,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10702,
									"end": 10727,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10753,
									"end": 10756,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10746,
									"end": 10751,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10743,
									"end": 10757,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 10760,
									"end": 10778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "tag",
									"source": 1,
									"value": "219"
								},
								{
									"begin": 10760,
									"end": 10778,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "tag",
									"source": 1,
									"value": "218"
								},
								{
									"begin": 10740,
									"end": 10780,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10793,
									"end": 10798,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10793,
									"end": 10798,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10793,
									"end": 10798,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "tag",
									"source": 1,
									"value": "213"
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10531,
									"end": 10808,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10917,
									"end": 10919,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10907,
									"end": 10915,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10904,
									"end": 10920,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10898,
									"end": 10901,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 10892,
									"end": 10896,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10889,
									"end": 10902,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10885,
									"end": 10921,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10867,
									"end": 10869,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 10857,
									"end": 10865,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10854,
									"end": 10870,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10849,
									"end": 10851,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 10843,
									"end": 10847,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10840,
									"end": 10852,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 10836,
									"end": 10871,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 10820,
									"end": 10931,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 10973,
									"end": 10981,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10967,
									"end": 10971,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10963,
									"end": 10982,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 10954,
									"end": 10982,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10954,
									"end": 10982,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11008,
									"end": 11011,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11001,
									"end": 11006,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10998,
									"end": 11012,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 11015,
									"end": 11033,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "tag",
									"source": 1,
									"value": "222"
								},
								{
									"begin": 11015,
									"end": 11033,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "tag",
									"source": 1,
									"value": "221"
								},
								{
									"begin": 10995,
									"end": 11035,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11048,
									"end": 11053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 11048,
									"end": 11053,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "tag",
									"source": 1,
									"value": "220"
								},
								{
									"begin": 10817,
									"end": 11063,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "223"
								},
								{
									"begin": 11126,
									"end": 11129,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11116,
									"end": 11124,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11110,
									"end": 11114,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11107,
									"end": 11108,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 11088,
									"end": 11130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "tag",
									"source": 1,
									"value": "223"
								},
								{
									"begin": 11088,
									"end": 11130,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11073,
									"end": 11130,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11162,
									"end": 11166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11157,
									"end": 11160,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11153,
									"end": 11167,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 11146,
									"end": 11151,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11143,
									"end": 11168,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "224"
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 11171,
									"end": 11189,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "tag",
									"source": 1,
									"value": "225"
								},
								{
									"begin": 11171,
									"end": 11189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "tag",
									"source": 1,
									"value": "224"
								},
								{
									"begin": 11140,
									"end": 11191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11220,
									"end": 11224,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11213,
									"end": 11218,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11209,
									"end": 11225,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 11200,
									"end": 11225,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11200,
									"end": 11225,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10158,
									"end": 11231,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11297,
									"end": 11302,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 11339,
									"end": 11343,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 11321,
									"end": 11344,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "tag",
									"source": 1,
									"value": "227"
								},
								{
									"begin": 11321,
									"end": 11344,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11313,
									"end": 11344,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11313,
									"end": 11344,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "228"
								},
								{
									"begin": 11383,
									"end": 11391,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 11365,
									"end": 11392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "tag",
									"source": 1,
									"value": "228"
								},
								{
									"begin": 11365,
									"end": 11392,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11353,
									"end": 11392,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11353,
									"end": 11392,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 11448,
									"end": 11514,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 11438,
									"end": 11446,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11432,
									"end": 11436,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 11411,
									"end": 11515,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "tag",
									"source": 1,
									"value": "229"
								},
								{
									"begin": 11411,
									"end": 11515,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11402,
									"end": 11515,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11402,
									"end": 11515,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11237,
									"end": 11522,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11237,
									"end": 11522,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11568,
									"end": 11575,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 11609,
									"end": 11610,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 11591,
									"end": 11611,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "tag",
									"source": 1,
									"value": "231"
								},
								{
									"begin": 11591,
									"end": 11611,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11586,
									"end": 11611,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11586,
									"end": 11611,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 11643,
									"end": 11644,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 11625,
									"end": 11645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "tag",
									"source": 1,
									"value": "232"
								},
								{
									"begin": 11625,
									"end": 11645,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11620,
									"end": 11645,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11620,
									"end": 11645,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11680,
									"end": 11681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11677,
									"end": 11678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11673,
									"end": 11682,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 11720,
									"end": 11731,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 11702,
									"end": 11732,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "tag",
									"source": 1,
									"value": "233"
								},
								{
									"begin": 11702,
									"end": 11732,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11691,
									"end": 11732,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11691,
									"end": 11732,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11881,
									"end": 11882,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11872,
									"end": 11879,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 11868,
									"end": 11883,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 11865,
									"end": 11866,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 11862,
									"end": 11884,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 11842,
									"end": 11843,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 11835,
									"end": 11844,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 11815,
									"end": 11898,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "234"
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "235"
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 11911,
									"end": 11929,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "tag",
									"source": 1,
									"value": "235"
								},
								{
									"begin": 11911,
									"end": 11929,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "tag",
									"source": 1,
									"value": "234"
								},
								{
									"begin": 11792,
									"end": 11931,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11576,
									"end": 11938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11528,
									"end": 11938,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11528,
									"end": 11938,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "tag",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 11981,
									"end": 11988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12021,
									"end": 12063,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 12014,
									"end": 12019,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12010,
									"end": 12064,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 11999,
									"end": 12064,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11999,
									"end": 12064,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 11944,
									"end": 12070,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 11944,
									"end": 12070,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12113,
									"end": 12120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 12160,
									"end": 12165,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "88"
								},
								{
									"begin": 12142,
									"end": 12166,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "tag",
									"source": 1,
									"value": "238"
								},
								{
									"begin": 12142,
									"end": 12166,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12131,
									"end": 12166,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12131,
									"end": 12166,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12076,
									"end": 12172,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12076,
									"end": 12172,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "tag",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 12283,
									"end": 12288,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 12265,
									"end": 12289,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "tag",
									"source": 1,
									"value": "240"
								},
								{
									"begin": 12265,
									"end": 12289,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12260,
									"end": 12263,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12253,
									"end": 12290,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12178,
									"end": 12296,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12178,
									"end": 12296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12395,
									"end": 12399,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12433,
									"end": 12435,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 12422,
									"end": 12431,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12418,
									"end": 12436,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12410,
									"end": 12436,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12410,
									"end": 12436,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 12514,
									"end": 12515,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12503,
									"end": 12512,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12499,
									"end": 12516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12490,
									"end": 12496,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 12446,
									"end": 12517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "tag",
									"source": 1,
									"value": "242"
								},
								{
									"begin": 12446,
									"end": 12517,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12302,
									"end": 12524,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12302,
									"end": 12524,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12570,
									"end": 12573,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 12607,
									"end": 12608,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 12589,
									"end": 12609,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "tag",
									"source": 1,
									"value": "244"
								},
								{
									"begin": 12589,
									"end": 12609,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12584,
									"end": 12609,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12584,
									"end": 12609,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "245"
								},
								{
									"begin": 12641,
									"end": 12642,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 12623,
									"end": 12643,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "tag",
									"source": 1,
									"value": "245"
								},
								{
									"begin": 12623,
									"end": 12643,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12618,
									"end": 12643,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12618,
									"end": 12643,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12666,
									"end": 12667,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12663,
									"end": 12664,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12659,
									"end": 12668,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 12652,
									"end": 12668,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 12652,
									"end": 12668,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12687,
									"end": 12690,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 12684,
									"end": 12685,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12681,
									"end": 12691,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "246"
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "247"
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "84"
								},
								{
									"begin": 12694,
									"end": 12712,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "tag",
									"source": 1,
									"value": "247"
								},
								{
									"begin": 12694,
									"end": 12712,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "tag",
									"source": 1,
									"value": "246"
								},
								{
									"begin": 12678,
									"end": 12714,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12530,
									"end": 12721,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12530,
									"end": 12721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 12832,
									"end": 12837,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 12814,
									"end": 12838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "tag",
									"source": 1,
									"value": "249"
								},
								{
									"begin": 12814,
									"end": 12838,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12809,
									"end": 12812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 12802,
									"end": 12839,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12727,
									"end": 12845,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12727,
									"end": 12845,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13000,
									"end": 13004,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13038,
									"end": 13040,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 13027,
									"end": 13036,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13023,
									"end": 13041,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13015,
									"end": 13041,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13015,
									"end": 13041,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "251"
								},
								{
									"begin": 13119,
									"end": 13120,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13108,
									"end": 13117,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13104,
									"end": 13121,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13095,
									"end": 13101,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "90"
								},
								{
									"begin": 13051,
									"end": 13122,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "tag",
									"source": 1,
									"value": "251"
								},
								{
									"begin": 13051,
									"end": 13122,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 13200,
									"end": 13202,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13189,
									"end": 13198,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13185,
									"end": 13203,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13176,
									"end": 13182,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 13132,
									"end": 13204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "tag",
									"source": 1,
									"value": "252"
								},
								{
									"begin": 13132,
									"end": 13204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "253"
								},
								{
									"begin": 13282,
									"end": 13284,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 13271,
									"end": 13280,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13267,
									"end": 13285,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13258,
									"end": 13264,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 13214,
									"end": 13286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "tag",
									"source": 1,
									"value": "253"
								},
								{
									"begin": 13214,
									"end": 13286,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 12851,
									"end": 13293,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13392,
									"end": 13396,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13430,
									"end": 13432,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 13419,
									"end": 13428,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 13415,
									"end": 13433,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13407,
									"end": 13433,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 13407,
									"end": 13433,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "255"
								},
								{
									"begin": 13511,
									"end": 13512,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 13500,
									"end": 13509,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 13496,
									"end": 13513,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 13487,
									"end": 13493,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 13443,
									"end": 13514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "tag",
									"source": 1,
									"value": "255"
								},
								{
									"begin": 13443,
									"end": 13514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13299,
									"end": 13521,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 13299,
									"end": 13521,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 34115,
									"end": 35350,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122012ff0df29d3c37c87226dd7cddbef7ee8d08f34c6c501e884c59b27c5419428664736f6c63430008180033",
									".code": [
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "D5391393"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "9DC29FAC"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "282C51F3"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34115,
											"end": 35350,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 15091,
											"end": 15293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15091,
											"end": 15293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15091,
											"end": 15293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24960,
											"end": 25049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 24960,
											"end": 25049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 27179,
											"end": 27365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27179,
											"end": 27365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 27179,
											"end": 27365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26030,
											"end": 26127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26030,
											"end": 26127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 27925,
											"end": 28169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27925,
											"end": 28169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 27925,
											"end": 28169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 16336,
											"end": 16456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16336,
											"end": 16456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 16336,
											"end": 16456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34294,
											"end": 34356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34294,
											"end": 34356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 16752,
											"end": 16888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16752,
											"end": 16888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 35258,
											"end": 35348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 35258,
											"end": 35348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17854,
											"end": 18099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17854,
											"end": 18099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 34938,
											"end": 35089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34938,
											"end": 35089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 26185,
											"end": 26301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26185,
											"end": 26301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26185,
											"end": 26301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 15380,
											"end": 15516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15380,
											"end": 15516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 15380,
											"end": 15516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25162,
											"end": 25255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 25162,
											"end": 25255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 35095,
											"end": 35252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35095,
											"end": 35252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14713,
											"end": 14762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14713,
											"end": 14762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26496,
											"end": 26674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 26496,
											"end": 26674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 26496,
											"end": 26674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34226,
											"end": 34288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 34226,
											"end": 34288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 17168,
											"end": 17306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17168,
											"end": 17306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26732,
											"end": 26872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26732,
											"end": 26872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 26732,
											"end": 26872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15176,
											"end": 15180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15214,
											"end": 15246,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15199,
											"end": 15246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15199,
											"end": 15246,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15199,
											"end": 15246,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15246,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15199,
											"end": 15286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15274,
											"end": 15285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 15250,
											"end": 15286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15250,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15250,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15199,
											"end": 15286,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15199,
											"end": 15286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15192,
											"end": 15286,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15091,
											"end": 15293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25005,
											"end": 25018,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25037,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 25030,
											"end": 25042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 25030,
											"end": 25042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25030,
											"end": 25042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24960,
											"end": 25049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27252,
											"end": 27256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27268,
											"end": 27281,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 27284,
											"end": 27294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 27284,
											"end": 27296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27284,
											"end": 27296,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 27284,
											"end": 27296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27268,
											"end": 27296,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27268,
											"end": 27296,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27306,
											"end": 27337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27315,
											"end": 27320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27322,
											"end": 27329,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27331,
											"end": 27336,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27306,
											"end": 27314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 27306,
											"end": 27337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27306,
											"end": 27337,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 27306,
											"end": 27337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27354,
											"end": 27358,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27347,
											"end": 27358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27347,
											"end": 27358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27347,
											"end": 27358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27179,
											"end": 27365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26082,
											"end": 26089,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26108,
											"end": 26120,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26108,
											"end": 26120,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26101,
											"end": 26120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26030,
											"end": 26127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28012,
											"end": 28016,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28028,
											"end": 28043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28046,
											"end": 28056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 28046,
											"end": 28058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28046,
											"end": 28058,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 28046,
											"end": 28058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28028,
											"end": 28058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28028,
											"end": 28058,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28068,
											"end": 28105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28084,
											"end": 28088,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28097,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28099,
											"end": 28104,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28068,
											"end": 28083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 28068,
											"end": 28105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28068,
											"end": 28105,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 28068,
											"end": 28105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28125,
											"end": 28129,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28131,
											"end": 28133,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28135,
											"end": 28140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28115,
											"end": 28141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28115,
											"end": 28141,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 28115,
											"end": 28141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28158,
											"end": 28162,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 28151,
											"end": 28162,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28151,
											"end": 28162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27925,
											"end": 28169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16401,
											"end": 16408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16433,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16434,
											"end": 16438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16427,
											"end": 16439,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16449,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16427,
											"end": 16449,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16427,
											"end": 16449,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16420,
											"end": 16449,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16420,
											"end": 16449,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16336,
											"end": 16456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34332,
											"end": 34356,
											"name": "PUSH",
											"source": 0,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 34294,
											"end": 34356,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34294,
											"end": 34356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16839,
											"end": 16843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16826,
											"end": 16844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16826,
											"end": 16844,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 16826,
											"end": 16844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 15001,
											"end": 15005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14990,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16856,
											"end": 16881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16867,
											"end": 16871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16880,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16856,
											"end": 16866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 16856,
											"end": 16881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16856,
											"end": 16881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 16856,
											"end": 16881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16856,
											"end": 16881,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16752,
											"end": 16888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35316,
											"end": 35321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35340,
											"end": 35341,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 35333,
											"end": 35341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35333,
											"end": 35341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35258,
											"end": 35348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17969,
											"end": 17979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 17969,
											"end": 17981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17969,
											"end": 17981,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 17969,
											"end": 17981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17947,
											"end": 17981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17981,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17947,
											"end": 17981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17947,
											"end": 17981,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17943,
											"end": 18045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17943,
											"end": 18045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18004,
											"end": 18034,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17943,
											"end": 18045,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 17943,
											"end": 18045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18055,
											"end": 18092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 18067,
											"end": 18071,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18073,
											"end": 18091,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18055,
											"end": 18066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 18055,
											"end": 18092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18055,
											"end": 18092,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 18055,
											"end": 18092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18055,
											"end": 18092,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17854,
											"end": 18099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34264,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 15001,
											"end": 15005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14990,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35029,
											"end": 35046,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35035,
											"end": 35037,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35039,
											"end": 35045,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35029,
											"end": 35034,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 35029,
											"end": 35046,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35029,
											"end": 35046,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 35029,
											"end": 35046,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "79C65068F81072733B15AB3CBA61B23110793F90AB099D228A414B186333A81E"
										},
										{
											"begin": 35071,
											"end": 35073,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35075,
											"end": 35081,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 35061,
											"end": 35082,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35061,
											"end": 35082,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34938,
											"end": 35089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26250,
											"end": 26257,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26276,
											"end": 26285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26286,
											"end": 26293,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26276,
											"end": 26294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26269,
											"end": 26294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26269,
											"end": 26294,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26185,
											"end": 26301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15457,
											"end": 15461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15486,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15487,
											"end": 15491,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15500,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15501,
											"end": 15508,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 15480,
											"end": 15509,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15473,
											"end": 15509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15473,
											"end": 15509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15380,
											"end": 15516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25209,
											"end": 25222,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25241,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 25234,
											"end": 25248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 25234,
											"end": 25248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25234,
											"end": 25248,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25162,
											"end": 25255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34332,
											"end": 34356,
											"name": "PUSH",
											"source": 0,
											"value": "3C11D16CBAFFD01DF69CE1C404F6340EE057498F5F00246190EA54220576A848"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 15001,
											"end": 15005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14990,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35188,
											"end": 35207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35194,
											"end": 35198,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35200,
											"end": 35206,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35188,
											"end": 35193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 35188,
											"end": 35207,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35188,
											"end": 35207,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 35188,
											"end": 35207,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "D1DF306C742159C188C29D2C167874A39B84FD0F96F794AD7EA53295680EC1C5"
										},
										{
											"begin": 35232,
											"end": 35236,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35238,
											"end": 35244,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 35222,
											"end": 35245,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35222,
											"end": 35245,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35095,
											"end": 35252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14758,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14713,
											"end": 14762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26565,
											"end": 26569,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26581,
											"end": 26594,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26597,
											"end": 26609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26597,
											"end": 26607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 26597,
											"end": 26609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26597,
											"end": 26609,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 26597,
											"end": 26609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 26609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26581,
											"end": 26609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26619,
											"end": 26646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 26629,
											"end": 26634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26636,
											"end": 26638,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26640,
											"end": 26645,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 26619,
											"end": 26628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 26619,
											"end": 26646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26619,
											"end": 26646,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 26619,
											"end": 26646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26663,
											"end": 26667,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26656,
											"end": 26667,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26656,
											"end": 26667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26656,
											"end": 26667,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26496,
											"end": 26674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34264,
											"end": 34288,
											"name": "PUSH",
											"source": 0,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 34226,
											"end": 34288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34226,
											"end": 34288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17256,
											"end": 17260,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17243,
											"end": 17255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17243,
											"end": 17261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 17243,
											"end": 17261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 15001,
											"end": 15005,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 14990,
											"end": 15006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 14990,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17273,
											"end": 17299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17285,
											"end": 17289,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17291,
											"end": 17298,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17273,
											"end": 17284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 17273,
											"end": 17299,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17273,
											"end": 17299,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 17273,
											"end": 17299,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17273,
											"end": 17299,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17168,
											"end": 17306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26812,
											"end": 26819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26838,
											"end": 26849,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26850,
											"end": 26855,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26838,
											"end": 26856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26857,
											"end": 26864,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26838,
											"end": 26865,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26831,
											"end": 26865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26831,
											"end": 26865,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26732,
											"end": 26872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1777,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1773,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1762,
											"end": 1802,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1802,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1802,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1663,
											"end": 1809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12441,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12345,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12405,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12424,
											"end": 12434,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12434,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12417,
											"end": 12434,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12441,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12345,
											"end": 12441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 32003,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 31875,
											"end": 32003,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31959,
											"end": 31996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 31968,
											"end": 31973,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31975,
											"end": 31982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31984,
											"end": 31989,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31991,
											"end": 31995,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 31959,
											"end": 31967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 31959,
											"end": 31996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31959,
											"end": 31996,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 31959,
											"end": 31996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 32003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 32003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 32003,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31875,
											"end": 32003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 34026,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 33549,
											"end": 34026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33648,
											"end": 33672,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33675,
											"end": 33700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33685,
											"end": 33690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33692,
											"end": 33699,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33675,
											"end": 33684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 33675,
											"end": 33700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33675,
											"end": 33700,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 33675,
											"end": 33700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33648,
											"end": 33700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33648,
											"end": 33700,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33734,
											"end": 33751,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33714,
											"end": 33730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33714,
											"end": 33751,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 33710,
											"end": 34020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33710,
											"end": 34020,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33790,
											"end": 33795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33771,
											"end": 33795,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 33767,
											"end": 33897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33767,
											"end": 33897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33767,
											"end": 33897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33849,
											"end": 33856,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33858,
											"end": 33874,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33876,
											"end": 33881,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 33822,
											"end": 33882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33822,
											"end": 33882,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33767,
											"end": 33897,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 33767,
											"end": 33897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33938,
											"end": 33995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33947,
											"end": 33952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33954,
											"end": 33961,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33982,
											"end": 33987,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33963,
											"end": 33979,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33963,
											"end": 33987,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33989,
											"end": 33994,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33938,
											"end": 33946,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 33938,
											"end": 33995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33938,
											"end": 33995,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 33938,
											"end": 33995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33710,
											"end": 34020,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 33710,
											"end": 34020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33638,
											"end": 34026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 34026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 34026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 34026,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33549,
											"end": 34026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28842,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 28542,
											"end": 28842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28641,
											"end": 28642,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28625,
											"end": 28643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28625,
											"end": 28643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28625,
											"end": 28629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28625,
											"end": 28643,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28625,
											"end": 28643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28625,
											"end": 28643,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 28621,
											"end": 28707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28693,
											"end": 28694,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28666,
											"end": 28696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28666,
											"end": 28696,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28621,
											"end": 28707,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 28621,
											"end": 28707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28734,
											"end": 28735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28720,
											"end": 28736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28720,
											"end": 28736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28720,
											"end": 28722,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28720,
											"end": 28736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28720,
											"end": 28736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28720,
											"end": 28736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 28716,
											"end": 28802,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28788,
											"end": 28789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 28759,
											"end": 28791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28759,
											"end": 28791,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28716,
											"end": 28802,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 28716,
											"end": 28802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28811,
											"end": 28835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28819,
											"end": 28823,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28825,
											"end": 28827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28829,
											"end": 28834,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 28811,
											"end": 28818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 28811,
											"end": 28835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28811,
											"end": 28835,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 28811,
											"end": 28835,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28842,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28542,
											"end": 28842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15828,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 15725,
											"end": 15828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15791,
											"end": 15821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15802,
											"end": 15806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15808,
											"end": 15818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 15808,
											"end": 15820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15808,
											"end": 15820,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 15808,
											"end": 15820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15791,
											"end": 15801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 15791,
											"end": 15821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15791,
											"end": 15821,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 15791,
											"end": 15821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15725,
											"end": 15828,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18782,
											"end": 18786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18803,
											"end": 18825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 18811,
											"end": 18815,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18817,
											"end": 18824,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18803,
											"end": 18810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 18803,
											"end": 18825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18803,
											"end": 18825,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 18803,
											"end": 18825,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18798,
											"end": 19015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18798,
											"end": 19015,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18873,
											"end": 18877,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18841,
											"end": 18847,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18848,
											"end": 18852,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18853,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18862,
											"end": 18869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18841,
											"end": 18877,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18923,
											"end": 18935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18923,
											"end": 18933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 18923,
											"end": 18935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18923,
											"end": 18935,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 18923,
											"end": 18935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18914,
											"end": 18921,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18908,
											"end": 18912,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18896,
											"end": 18936,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 18957,
											"end": 18961,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18950,
											"end": 18961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18950,
											"end": 18961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18950,
											"end": 18961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18950,
											"end": 18961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18798,
											"end": 19015,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 18798,
											"end": 19015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18999,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18992,
											"end": 19004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18992,
											"end": 19004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18705,
											"end": 19021,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18705,
											"end": 19021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19334,
											"end": 19338,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19354,
											"end": 19376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19362,
											"end": 19366,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19368,
											"end": 19375,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19354,
											"end": 19376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19354,
											"end": 19376,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 19354,
											"end": 19376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19350,
											"end": 19567,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19350,
											"end": 19567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19350,
											"end": 19567,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19424,
											"end": 19429,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19398,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19399,
											"end": 19403,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19404,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19413,
											"end": 19420,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19392,
											"end": 19429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19475,
											"end": 19487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 19475,
											"end": 19485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 19475,
											"end": 19487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19475,
											"end": 19487,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 19475,
											"end": 19487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19466,
											"end": 19473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19460,
											"end": 19464,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19448,
											"end": 19488,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 19509,
											"end": 19513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19502,
											"end": 19513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19502,
											"end": 19513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19502,
											"end": 19513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 19502,
											"end": 19513,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19350,
											"end": 19567,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 19350,
											"end": 19567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19551,
											"end": 19556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19544,
											"end": 19556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19544,
											"end": 19556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19256,
											"end": 19573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30815,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 30607,
											"end": 30815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30696,
											"end": 30697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30677,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30677,
											"end": 30698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30677,
											"end": 30684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30677,
											"end": 30698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30677,
											"end": 30698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30677,
											"end": 30698,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30673,
											"end": 30764,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 30673,
											"end": 30764,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30750,
											"end": 30751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 30721,
											"end": 30753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30721,
											"end": 30753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 30673,
											"end": 30764,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 30673,
											"end": 30764,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30773,
											"end": 30808,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 30789,
											"end": 30790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30793,
											"end": 30800,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30802,
											"end": 30807,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30773,
											"end": 30780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 30773,
											"end": 30808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30773,
											"end": 30808,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 30773,
											"end": 30808,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30607,
											"end": 30815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31133,
											"end": 31339,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 31133,
											"end": 31339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31222,
											"end": 31223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31203,
											"end": 31224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31203,
											"end": 31224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31203,
											"end": 31210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31203,
											"end": 31224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 31203,
											"end": 31224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31203,
											"end": 31224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31199,
											"end": 31288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 31199,
											"end": 31288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31274,
											"end": 31275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 31247,
											"end": 31277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31247,
											"end": 31277,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 31199,
											"end": 31288,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 31199,
											"end": 31288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 31305,
											"end": 31312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31322,
											"end": 31323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31326,
											"end": 31331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 31297,
											"end": 31332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31297,
											"end": 31332,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 31297,
											"end": 31332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31133,
											"end": 31339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31133,
											"end": 31339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31133,
											"end": 31339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 33267,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 32835,
											"end": 33267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32964,
											"end": 32965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32947,
											"end": 32966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32947,
											"end": 32966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32947,
											"end": 32952,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 32947,
											"end": 32966,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 32947,
											"end": 32966,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 32947,
											"end": 32966,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32943,
											"end": 33032,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 32943,
											"end": 33032,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33018,
											"end": 33019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 32989,
											"end": 33021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 32989,
											"end": 33021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 32943,
											"end": 33032,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 32943,
											"end": 33032,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33064,
											"end": 33065,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33045,
											"end": 33066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33045,
											"end": 33066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33045,
											"end": 33052,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33045,
											"end": 33066,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33045,
											"end": 33066,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33045,
											"end": 33066,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33041,
											"end": 33131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 33041,
											"end": 33131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33117,
											"end": 33118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 33089,
											"end": 33120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33089,
											"end": 33120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 33041,
											"end": 33131,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 33041,
											"end": 33131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33170,
											"end": 33175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33151,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33152,
											"end": 33157,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33140,
											"end": 33158,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33159,
											"end": 33166,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33140,
											"end": 33167,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 33140,
											"end": 33175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33189,
											"end": 33198,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33185,
											"end": 33261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 33185,
											"end": 33261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33185,
											"end": 33261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33235,
											"end": 33242,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33228,
											"end": 33233,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 33244,
											"end": 33249,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 33219,
											"end": 33250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33219,
											"end": 33250,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 33185,
											"end": 33261,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 33185,
											"end": 33261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 33267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 33267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 33267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 33267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32835,
											"end": 33267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 30264,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 29157,
											"end": 30264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29262,
											"end": 29263,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29246,
											"end": 29264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29246,
											"end": 29264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29246,
											"end": 29250,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29246,
											"end": 29264,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29246,
											"end": 29264,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29246,
											"end": 29264,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29398,
											"end": 29403,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29394,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29382,
											"end": 29394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 29382,
											"end": 29403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29382,
											"end": 29403,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29434,
											"end": 29453,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29456,
											"end": 29465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29466,
											"end": 29470,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29456,
											"end": 29471,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29434,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29434,
											"end": 29471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29503,
											"end": 29508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29489,
											"end": 29500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29489,
											"end": 29508,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29485,
											"end": 29600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29485,
											"end": 29600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29485,
											"end": 29600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29560,
											"end": 29564,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29566,
											"end": 29577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29579,
											"end": 29584,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 29535,
											"end": 29585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29535,
											"end": 29585,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 29485,
											"end": 29600,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 29485,
											"end": 29600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29752,
											"end": 29757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29738,
											"end": 29749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29738,
											"end": 29757,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29730,
											"end": 29734,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29720,
											"end": 29735,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29757,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29757,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29757,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29720,
											"end": 29757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29420,
											"end": 29782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 29242,
											"end": 29782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29810,
											"end": 29811,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29796,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29796,
											"end": 29812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29796,
											"end": 29798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29796,
											"end": 29812,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 29796,
											"end": 29812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29796,
											"end": 29812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29975,
											"end": 29980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29971,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 29959,
											"end": 29971,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29959,
											"end": 29980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30187,
											"end": 30192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30180,
											"end": 30182,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30183,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 30170,
											"end": 30192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 29792,
											"end": 30217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30247,
											"end": 30249,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30241,
											"end": 30245,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 30251,
											"end": 30256,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 30232,
											"end": 30257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30232,
											"end": 30257,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 30264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 30264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 30264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29157,
											"end": 30264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15958,
											"end": 16155,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 15958,
											"end": 16155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16046,
											"end": 16068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16054,
											"end": 16058,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16060,
											"end": 16067,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16046,
											"end": 16053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16046,
											"end": 16068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16046,
											"end": 16068,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 16046,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16041,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 16041,
											"end": 16149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16131,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16133,
											"end": 16137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 16091,
											"end": 16138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16091,
											"end": 16138,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16041,
											"end": 16149,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 16041,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15958,
											"end": 16155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15958,
											"end": 16155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15958,
											"end": 16155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5217,
											"end": 5224,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5251,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5257,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5354,
											"end": 5359,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5336,
											"end": 5360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5336,
											"end": 5360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5329,
											"end": 5334,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5361,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5375,
											"end": 5376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5372,
											"end": 5373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5316,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5263,
											"end": 5385,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5482,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5518,
											"end": 5523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 5491,
											"end": 5524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5491,
											"end": 5524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5530,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5391,
											"end": 5530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5650,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5650,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5612,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5840,
											"end": 5847,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5820,
											"end": 5829,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5816,
											"end": 5838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 5795,
											"end": 5848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5795,
											"end": 5848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5741,
											"end": 5858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5976,
											"end": 5981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 5958,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5958,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5956,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5946,
											"end": 5983,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5871,
											"end": 5989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6115,
											"end": 6124,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6103,
											"end": 6129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6209,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 6139,
											"end": 6210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 6139,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5995,
											"end": 6217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6350,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6336,
											"end": 6345,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6334,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6346,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6319,
											"end": 6351,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 6354,
											"end": 6433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6354,
											"end": 6433,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6316,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6544,
											"end": 6551,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6533,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6520,
											"end": 6542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 6499,
											"end": 6552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6499,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6489,
											"end": 6552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6562,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6601,
											"end": 6603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 6672,
											"end": 6679,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 6627,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 6627,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6572,
											"end": 6690,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6223,
											"end": 6697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 6745,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6778,
											"end": 6782,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6771,
											"end": 6776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6783,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6756,
											"end": 6783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6703,
											"end": 6789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6894,
											"end": 6899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 6878,
											"end": 6900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6878,
											"end": 6900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6866,
											"end": 6901,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6795,
											"end": 6907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7006,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7040,
											"end": 7042,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7029,
											"end": 7038,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7025,
											"end": 7043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7017,
											"end": 7043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7117,
											"end": 7118,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7106,
											"end": 7115,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7102,
											"end": 7119,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7093,
											"end": 7099,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 7053,
											"end": 7120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7053,
											"end": 7120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6913,
											"end": 7127,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7192,
											"end": 7198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7229,
											"end": 7238,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7220,
											"end": 7227,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7216,
											"end": 7239,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7212,
											"end": 7244,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7247,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 7247,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7209,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7367,
											"end": 7368,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7428,
											"end": 7434,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7417,
											"end": 7426,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7413,
											"end": 7435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7392,
											"end": 7445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7392,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7382,
											"end": 7445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7338,
											"end": 7455,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7462,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7133,
											"end": 7462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7536,
											"end": 7542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7544,
											"end": 7550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7581,
											"end": 7590,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7579,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7568,
											"end": 7591,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7596,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 7599,
											"end": 7678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7599,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 7561,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7719,
											"end": 7720,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7789,
											"end": 7796,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7780,
											"end": 7786,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7778,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7765,
											"end": 7787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7744,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7744,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7734,
											"end": 7797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7807,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7846,
											"end": 7848,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7917,
											"end": 7924,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7908,
											"end": 7914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7897,
											"end": 7906,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7893,
											"end": 7915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 7872,
											"end": 7925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 7872,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7862,
											"end": 7925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7817,
											"end": 7935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7468,
											"end": 7942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 7948,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7996,
											"end": 8073,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7986,
											"end": 8074,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8093,
											"end": 8097,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8090,
											"end": 8091,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8083,
											"end": 8098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8117,
											"end": 8121,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8114,
											"end": 8115,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8107,
											"end": 8122,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8184,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8215,
											"end": 8216,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 8209,
											"end": 8213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8217,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8262,
											"end": 8263,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8256,
											"end": 8260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8264,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8283,
											"end": 8301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8339,
											"end": 8343,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8331,
											"end": 8337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8327,
											"end": 8344,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8344,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 8273,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8401,
											"end": 8403,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8393,
											"end": 8399,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8390,
											"end": 8404,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 8388,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8367,
											"end": 8405,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 8420,
											"end": 8438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 8420,
											"end": 8438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 8364,
											"end": 8448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8185,
											"end": 8454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 8565,
											"end": 8570,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8547,
											"end": 8571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 8547,
											"end": 8571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8542,
											"end": 8545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8572,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8460,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8709,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8743,
											"end": 8745,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8732,
											"end": 8741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8728,
											"end": 8746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 8824,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8813,
											"end": 8822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8800,
											"end": 8806,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8756,
											"end": 8827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 8756,
											"end": 8827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 8905,
											"end": 8907,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8894,
											"end": 8903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8890,
											"end": 8908,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8881,
											"end": 8887,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 8837,
											"end": 8909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 8837,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8584,
											"end": 8916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9109,
											"end": 9111,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9098,
											"end": 9107,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9094,
											"end": 9112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9086,
											"end": 9112,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9086,
											"end": 9112,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9190,
											"end": 9191,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9188,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9175,
											"end": 9192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9166,
											"end": 9172,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 9122,
											"end": 9193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 9122,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 9271,
											"end": 9273,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9260,
											"end": 9269,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9247,
											"end": 9253,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 9203,
											"end": 9275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 9203,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9353,
											"end": 9355,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9342,
											"end": 9351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9335,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 9285,
											"end": 9357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 9285,
											"end": 9357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 9364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9463,
											"end": 9467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9501,
											"end": 9503,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 9582,
											"end": 9583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9571,
											"end": 9580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9567,
											"end": 9584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9558,
											"end": 9564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 9514,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 9514,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9778,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 9598,
											"end": 9778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9646,
											"end": 9723,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9643,
											"end": 9644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9636,
											"end": 9724,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9740,
											"end": 9741,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9733,
											"end": 9748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9767,
											"end": 9771,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9764,
											"end": 9765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9757,
											"end": 9772,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9824,
											"end": 9827,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 9861,
											"end": 9862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9843,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 9843,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 9863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9838,
											"end": 9863,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 9895,
											"end": 9896,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9877,
											"end": 9897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 9877,
											"end": 9897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9897,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9920,
											"end": 9921,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9917,
											"end": 9918,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9913,
											"end": 9922,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9906,
											"end": 9922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9941,
											"end": 9944,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9938,
											"end": 9939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9935,
											"end": 9945,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 9948,
											"end": 9966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 9932,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9975,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9784,
											"end": 9975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10102,
											"end": 10106,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10140,
											"end": 10142,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10129,
											"end": 10138,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10117,
											"end": 10143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10117,
											"end": 10143,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 10221,
											"end": 10222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10210,
											"end": 10219,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10197,
											"end": 10203,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 10153,
											"end": 10224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 10153,
											"end": 10224,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 10302,
											"end": 10304,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10291,
											"end": 10300,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10278,
											"end": 10284,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 10234,
											"end": 10306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 10234,
											"end": 10306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9981,
											"end": 10313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"sBNB_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BURNER_ROLE()": "282c51f3",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURNER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Constructor that gives msg.sender all of existing tokens.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"sBNB_flattened.sol\":\"sAsset\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"sBNB_flattened.sol\":{\"keccak256\":\"0x2af6d220ed378d80ce34bd4ce3d773ea9836b51dfa92ffc1cb21b5bf53eaadab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://071bec49eb68d11e966c152b2e10783052cb644ec9dcdca11a5dc47f5abaac9f\",\"dweb:/ipfs/QmX4WAUKg5TffbNvyXTB8uTLkTjJ4J9TesbsCaXQWV35TP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 682,
								"contract": "sBNB_flattened.sol:sAsset",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 688,
								"contract": "sBNB_flattened.sol:sAsset",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 690,
								"contract": "sBNB_flattened.sol:sAsset",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 692,
								"contract": "sBNB_flattened.sol:sAsset",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 694,
								"contract": "sBNB_flattened.sol:sAsset",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 299,
								"contract": "sBNB_flattened.sol:sAsset",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)294_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)294_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)294_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)294_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 291,
										"contract": "sBNB_flattened.sol:sAsset",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 293,
										"contract": "sBNB_flattened.sol:sAsset",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"sBNB_flattened.sol": {
				"ast": {
					"absolutePath": "sBNB_flattened.sol",
					"exportedSymbols": {
						"AccessControl": [
							568
						],
						"Context": [
							279
						],
						"ERC165": [
							32
						],
						"ERC20": [
							1174
						],
						"IAccessControl": [
							114
						],
						"IERC1155Errors": [
							250
						],
						"IERC165": [
							11
						],
						"IERC20": [
							645
						],
						"IERC20Errors": [
							155
						],
						"IERC20Metadata": [
							668
						],
						"IERC721Errors": [
							203
						],
						"sAsset": [
							1289
						]
					},
					"id": 1290,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "151:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "177:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 11,
							"linearizedBaseContracts": [
								11
							],
							"name": "IERC165",
							"nameLocation": "467:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "481:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "835:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "860:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "853:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 4,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "853:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:20:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "896:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 7,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "895:6:0"
									},
									"scope": 11,
									"src": "826:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1290,
							"src": "457:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 12,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1054:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 14,
										"name": "IERC165",
										"nameLocations": [
											"1588:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 11,
										"src": "1588:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "1588:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 13,
								"nodeType": "StructuredDocumentation",
								"src": "1081:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 32,
							"linearizedBaseContracts": [
								32,
								11
							],
							"name": "ERC165",
							"nameLocation": "1578:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										10
									],
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1745:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 23,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1762:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 25,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "1782:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$11_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 24,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1777:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1777:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$11",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1791:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1777:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1762:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 22,
												"id": 29,
												"nodeType": "Return",
												"src": "1755:47:0"
											}
										]
									},
									"documentation": {
										"id": 16,
										"nodeType": "StructuredDocumentation",
										"src": "1602:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 31,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1672:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1697:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1690:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 17,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1690:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1689:20:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "1739:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1739:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1738:6:0"
									},
									"scope": 32,
									"src": "1663:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1290,
							"src": "1560:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "1951:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "1977:89:0",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 114,
							"linearizedBaseContracts": [
								114
							],
							"name": "IAccessControl",
							"nameLocation": "2077:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "2098:56:0",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 41,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "2165:32:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2206:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2198:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2198:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "2223:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2215:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 38,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:37:0"
									},
									"src": "2159:76:0"
								},
								{
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2241:148:0",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 44,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "2400:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2428:2:0"
									},
									"src": "2394:37:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "2437:254:0",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 53,
									"name": "RoleAdminChanged",
									"nameLocation": "2702:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2735:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2719:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 46,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "2757:17:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2741:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "2792:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "2776:28:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 50,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2776:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:87:0"
									},
									"src": "2696:110:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "2812:212:0",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 62,
									"name": "RoleGranted",
									"nameLocation": "3035:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3063:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3047:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 55,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3085:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3069:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3110:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "3094:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3094:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3046:71:0"
									},
									"src": "3029:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "3124:275:0",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 71,
									"name": "RoleRevoked",
									"nameLocation": "3410:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3438:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3422:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3444:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3444:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3485:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3469:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3421:71:0"
									},
									"src": "3404:89:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3499:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3589:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3597:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 73,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3619:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3596:31:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "3651:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 78,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3651:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3650:6:0"
									},
									"scope": 114,
									"src": "3580:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3663:184:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3861:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3882:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3874:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3873:14:0"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3911:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 86,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3910:9:0"
									},
									"scope": 114,
									"src": "3852:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3926:239:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "4179:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4197:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4189:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 91,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4189:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4211:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "4203:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:31:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4228:0:0"
									},
									"scope": 114,
									"src": "4170:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "4235:223:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "4472:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4491:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4483:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 99,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4505:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "4497:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4497:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4482:31:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4522:0:0"
									},
									"scope": 114,
									"src": "4463:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "4529:491:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5034:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5055:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "5047:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 107,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5069:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "5061:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 109,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5046:42:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5097:0:0"
									},
									"scope": 114,
									"src": "5025:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1290,
							"src": "2067:3033:0",
							"usedErrors": [
								41,
								44
							],
							"usedEvents": [
								53,
								62,
								71
							]
						},
						{
							"id": 115,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "5247:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 116,
								"nodeType": "StructuredDocumentation",
								"src": "5273:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "IERC20Errors",
							"nameLocation": "5423:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "5442:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 125,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5762:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "5787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "5803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 120,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5828:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "5820:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5786:49:0"
									},
									"src": "5756:80:0"
								},
								{
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "5842:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 130,
									"name": "ERC20InvalidSender",
									"nameLocation": "6005:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "6032:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "6024:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6023:16:0"
									},
									"src": "5999:41:0"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "6046:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 135,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "6216:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "6245:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6237:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6236:18:0"
									},
									"src": "6210:45:0"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "6261:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 144,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6617:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6652:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "6644:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6669:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "6661:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6688:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 144,
												"src": "6680:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6643:52:0"
									},
									"src": "6611:85:0"
								},
								{
									"documentation": {
										"id": 145,
										"nodeType": "StructuredDocumentation",
										"src": "6702:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 149,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6887:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6916:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "6908:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6907:18:0"
									},
									"src": "6881:45:0"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "6932:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 154,
									"name": "ERC20InvalidSpender",
									"nameLocation": "7138:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7166:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "7158:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7157:17:0"
									},
									"src": "7132:43:0"
								}
							],
							"scope": 1290,
							"src": "5413:1764:0",
							"usedErrors": [
								125,
								130,
								135,
								144,
								149,
								154
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 156,
								"nodeType": "StructuredDocumentation",
								"src": "7179:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 203,
							"linearizedBaseContracts": [
								203
							],
							"name": "IERC721Errors",
							"nameLocation": "7331:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "7351:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 161,
									"name": "ERC721InvalidOwner",
									"nameLocation": "7581:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7608:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "7600:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7599:15:0"
									},
									"src": "7575:40:0"
								},
								{
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "7621:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 166,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7764:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7795:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "7787:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7787:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7786:17:0"
									},
									"src": "7758:46:0"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "7810:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 175,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "8110:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8139:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "8131:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8155:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "8147:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8172:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "8164:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8164:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8130:48:0"
									},
									"src": "8104:75:0"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "8185:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 180,
									"name": "ERC721InvalidSender",
									"nameLocation": "8348:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8376:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "8368:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8368:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8367:16:0"
									},
									"src": "8342:42:0"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "8390:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 185,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "8560:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8590:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 185,
												"src": "8582:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8581:18:0"
									},
									"src": "8554:46:0"
								},
								{
									"documentation": {
										"id": 186,
										"nodeType": "StructuredDocumentation",
										"src": "8606:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 192,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8864:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8899:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "8891:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "8909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8890:35:0"
									},
									"src": "8858:68:0"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "8932:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 197,
									"name": "ERC721InvalidApprover",
									"nameLocation": "9117:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "9147:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "9139:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:18:0"
									},
									"src": "9111:46:0"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "9163:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 202,
									"name": "ERC721InvalidOperator",
									"nameLocation": "9371:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "9401:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "9393:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9393:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9392:18:0"
									},
									"src": "9365:46:0"
								}
							],
							"scope": 1290,
							"src": "7321:2092:0",
							"usedErrors": [
								161,
								166,
								175,
								180,
								185,
								192,
								197,
								202
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 204,
								"nodeType": "StructuredDocumentation",
								"src": "9415:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 250,
							"linearizedBaseContracts": [
								250
							],
							"name": "IERC1155Errors",
							"nameLocation": "9569:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "9590:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 215,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9962:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9997:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "9989:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "10013:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "10005:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "10030:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "10022:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10046:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "10038:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9988:66:0"
									},
									"src": "9956:99:0"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "10061:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 220,
									"name": "ERC1155InvalidSender",
									"nameLocation": "10224:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "10253:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "10245:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10245:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10244:16:0"
									},
									"src": "10218:43:0"
								},
								{
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "10267:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 225,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "10437:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "10468:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "10460:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10459:18:0"
									},
									"src": "10431:47:0"
								},
								{
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "10484:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 232,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10751:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10788:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "10780:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10780:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10806:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "10798:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10779:33:0"
									},
									"src": "10745:68:0"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "10819:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 237,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "11004:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "11035:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "11027:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11027:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11026:18:0"
									},
									"src": "10998:47:0"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "11051:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 242,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "11259:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "11290:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 242,
												"src": "11282:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11281:18:0"
									},
									"src": "11253:47:0"
								},
								{
									"documentation": {
										"id": 243,
										"nodeType": "StructuredDocumentation",
										"src": "11306:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 249,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11597:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11631:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "11623:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11623:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11650:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "11642:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11622:41:0"
									},
									"src": "11591:73:0"
								}
							],
							"scope": 1290,
							"src": "9559:2107:0",
							"usedErrors": [
								215,
								220,
								225,
								232,
								237,
								242,
								249
							],
							"usedEvents": []
						},
						{
							"id": 251,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11790:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 252,
								"nodeType": "StructuredDocumentation",
								"src": "11816:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 279,
							"linearizedBaseContracts": [
								279
							],
							"name": "Context",
							"nameLocation": "12331:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "12407:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 257,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "12424:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12428:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "12424:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 256,
												"id": 259,
												"nodeType": "Return",
												"src": "12417:17:0"
											}
										]
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "12354:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12364:2:0"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "12398:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12397:9:0"
									},
									"scope": 279,
									"src": "12345:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "12514:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 266,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "12531:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "12535:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "12531:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 265,
												"id": 268,
												"nodeType": "Return",
												"src": "12524:15:0"
											}
										]
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "12456:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12464:2:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "12498:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 263,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12498:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12497:16:0"
									},
									"scope": 279,
									"src": "12447:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "12624:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12641:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 274,
												"id": 276,
												"nodeType": "Return",
												"src": "12634:8:0"
											}
										]
									},
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "12561:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12581:2:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "12615:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12614:9:0"
									},
									"scope": 279,
									"src": "12552:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1290,
							"src": "12313:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 280,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "12789:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 282,
										"name": "Context",
										"nameLocations": [
											"14514:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "14514:7:0"
									},
									"id": 283,
									"nodeType": "InheritanceSpecifier",
									"src": "14514:7:0"
								},
								{
									"baseName": {
										"id": 284,
										"name": "IAccessControl",
										"nameLocations": [
											"14523:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 114,
										"src": "14523:14:0"
									},
									"id": 285,
									"nodeType": "InheritanceSpecifier",
									"src": "14523:14:0"
								},
								{
									"baseName": {
										"id": 286,
										"name": "ERC165",
										"nameLocations": [
											"14539:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 32,
										"src": "14539:6:0"
									},
									"id": 287,
									"nodeType": "InheritanceSpecifier",
									"src": "14539:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 281,
								"nodeType": "StructuredDocumentation",
								"src": "12818:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 568,
							"linearizedBaseContracts": [
								568,
								32,
								11,
								114,
								279
							],
							"name": "AccessControl",
							"nameLocation": "14497:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 294,
									"members": [
										{
											"constant": false,
											"id": 291,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "14611:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "14578:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 290,
												"keyName": "account",
												"keyNameLocation": "14594:7:0",
												"keyType": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "14578:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14605:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 293,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "14636:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 294,
											"src": "14628:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 292,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "14628:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "14559:8:0",
									"nodeType": "StructDefinition",
									"scope": 568,
									"src": "14552:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 299,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "14700:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "14658:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$294_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 298,
										"keyName": "role",
										"keyNameLocation": "14674:4:0",
										"keyType": {
											"id": 295,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "14666:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "14658:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$294_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 297,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 296,
												"name": "RoleData",
												"nameLocations": [
													"14682:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 294,
												"src": "14682:8:0"
											},
											"referencedDeclaration": 294,
											"src": "14682:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$294_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 302,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "14737:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 568,
									"src": "14713:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 300,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "14713:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 301,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "14758:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "14980:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 308,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "15001:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 307,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															366,
															387
														],
														"referencedDeclaration": 366,
														"src": "14990:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14990:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "14990:16:0"
											},
											{
												"id": 311,
												"nodeType": "PlaceholderStatement",
												"src": "15016:1:0"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "14769:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 313,
									"name": "onlyRole",
									"nameLocation": "14957:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "14974:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "14966:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 304,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14966:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14965:14:0"
									},
									"src": "14948:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										31
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "15182:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 327,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 322,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "15199:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 324,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 114,
																		"src": "15219:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$114_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$114_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 323,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "15214:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15214:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$114",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "15235:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "15214:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "15199:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 330,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 316,
																"src": "15274:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 328,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "15250:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$568_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15256:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 31,
															"src": "15250:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15250:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15199:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 321,
												"id": 333,
												"nodeType": "Return",
												"src": "15192:94:0"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "15030:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "15100:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 318,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "15158:8:0"
									},
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "15125:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "15118:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 315,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "15118:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15117:20:0"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "15176:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 319,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15176:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15175:6:0"
									},
									"scope": 568,
									"src": "15091:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										81
									],
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "15463:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 345,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "15480:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$294_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 347,
															"indexExpression": {
																"id": 346,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 338,
																"src": "15487:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15480:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$294_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15493:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 291,
														"src": "15480:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 350,
													"indexExpression": {
														"id": 349,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 340,
														"src": "15501:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15480:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 344,
												"id": 351,
												"nodeType": "Return",
												"src": "15473:36:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "15299:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "15389:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "15405:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "15397:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15397:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "15419:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "15411:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15411:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15396:31:0"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "15457:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15456:6:0"
									},
									"scope": 568,
									"src": "15380:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "15781:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 360,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "15802:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 361,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 261,
																"src": "15808:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15808:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 359,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															366,
															387
														],
														"referencedDeclaration": 387,
														"src": "15791:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15791:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "15791:30:0"
											}
										]
									},
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "15522:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "15734:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "15753:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "15745:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15744:14:0"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15781:0:0"
									},
									"scope": 568,
									"src": "15725:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "16031:124:0",
										"statements": [
											{
												"condition": {
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "16045:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 375,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "16054:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 376,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 371,
																"src": "16060:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 374,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "16046:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16046:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 385,
												"nodeType": "IfStatement",
												"src": "16041:108:0",
												"trueBody": {
													"id": 384,
													"nodeType": "Block",
													"src": "16070:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 380,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 371,
																		"src": "16124:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 381,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "16133:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 379,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "16091:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16091:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 383,
															"nodeType": "RevertStatement",
															"src": "16084:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "15834:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "15967:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "15986:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "15978:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 368,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16000:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "15992:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15992:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15977:31:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16031:0:0"
									},
									"scope": 568,
									"src": "15958:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "16410:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 395,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 299,
															"src": "16427:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$294_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 397,
														"indexExpression": {
															"id": 396,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "16434:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16427:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$294_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "16440:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 293,
													"src": "16427:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 394,
												"id": 399,
												"nodeType": "Return",
												"src": "16420:29:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "16161:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "16345:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "16366:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "16358:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 389,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16357:14:0"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "16401:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16400:9:0"
									},
									"scope": 568,
									"src": "16336:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										97
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "16846:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "16867:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "16873:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 414,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "16856:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16856:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "16856:25:0"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "16462:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 410,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "16839:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 409,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "16826:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16826:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 408,
												"name": "onlyRole",
												"nameLocations": [
													"16817:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "16817:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "16817:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "16761:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "16779:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "16771:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "16793:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "16785:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16770:31:0"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16846:0:0"
									},
									"scope": 568,
									"src": "16752:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										105
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "17263:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "17285:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 435,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "17291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 433,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "17273:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17273:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "17273:26:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "16894:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 429,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "17256:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 428,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "17243:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17243:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 427,
												"name": "onlyRole",
												"nameLocations": [
													"17234:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "17234:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "17234:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "17177:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "17196:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "17188:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17188:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "17210:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "17202:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17187:31:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17263:0:0"
									},
									"scope": 568,
									"src": "17168:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										113
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "17933:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "17947:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 448,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "17969:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17969:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17947:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 455,
												"nodeType": "IfStatement",
												"src": "17943:102:0",
												"trueBody": {
													"id": 454,
													"nodeType": "Block",
													"src": "17983:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 451,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "18004:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18004:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 453,
															"nodeType": "RevertStatement",
															"src": "17997:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "18067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 458,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "18073:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 456,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 567,
														"src": "18055:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18055:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "18055:37:0"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "17312:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "17863:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "17884:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "17876:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "17898:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "17890:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17890:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17875:42:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17933:0:0"
									},
									"scope": 568,
									"src": "17854:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 489,
										"nodeType": "Block",
										"src": "18297:174:0",
										"statements": [
											{
												"assignments": [
													471
												],
												"declarations": [
													{
														"constant": false,
														"id": 471,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "18315:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 489,
														"src": "18307:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 470,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "18307:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [
														{
															"id": 473,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "18348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 472,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "18335:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18335:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18307:46:0"
											},
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 476,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 299,
																"src": "18363:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$294_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 478,
															"indexExpression": {
																"id": 477,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "18370:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18363:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$294_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 479,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "18376:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 293,
														"src": "18363:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 480,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "18388:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "18363:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "18363:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 484,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "18429:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 485,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "18435:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 486,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "18454:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 483,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "18412:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18412:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "EmitStatement",
												"src": "18407:57:0"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "18105:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 490,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "18233:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "18255:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "18247:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18247:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "18269:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "18261:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18246:33:0"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18297:0:0"
									},
									"scope": 568,
									"src": "18224:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "18788:233:0",
										"statements": [
											{
												"condition": {
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18802:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 501,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "18811:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 502,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "18817:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 500,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "18803:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18803:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "18978:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18999:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 499,
															"id": 525,
															"nodeType": "Return",
															"src": "18992:12:0"
														}
													]
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "18798:217:0",
												"trueBody": {
													"id": 523,
													"nodeType": "Block",
													"src": "18827:145:0",
													"statements": [
														{
															"expression": {
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 505,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 299,
																				"src": "18841:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$294_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 507,
																			"indexExpression": {
																				"id": 506,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 493,
																				"src": "18848:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "18841:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$294_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 508,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "18854:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 291,
																		"src": "18841:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 510,
																	"indexExpression": {
																		"id": 509,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "18862:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "18841:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18873:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "18841:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 513,
															"nodeType": "ExpressionStatement",
															"src": "18841:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 515,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "18908:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 516,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "18914:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 517,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "18923:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18923:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 514,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "18896:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18896:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 520,
															"nodeType": "EmitStatement",
															"src": "18891:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18957:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 499,
															"id": 522,
															"nodeType": "Return",
															"src": "18950:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "18477:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "18714:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "18733:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "18725:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 492,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18725:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18747:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "18739:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18739:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18724:31:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "18782:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18782:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18781:6:0"
									},
									"scope": 568,
									"src": "18705:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "19340:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 540,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "19362:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 541,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "19368:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 539,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 353,
														"src": "19354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19354:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 564,
													"nodeType": "Block",
													"src": "19530:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19551:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 538,
															"id": 563,
															"nodeType": "Return",
															"src": "19544:12:0"
														}
													]
												},
												"id": 565,
												"nodeType": "IfStatement",
												"src": "19350:217:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "19378:146:0",
													"statements": [
														{
															"expression": {
																"id": 550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 543,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 299,
																				"src": "19392:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$294_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 545,
																			"indexExpression": {
																				"id": 544,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "19399:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "19392:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$294_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "19405:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 291,
																		"src": "19392:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 548,
																	"indexExpression": {
																		"id": 547,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "19413:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "19392:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19424:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "19392:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 551,
															"nodeType": "ExpressionStatement",
															"src": "19392:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 553,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "19460:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 554,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 534,
																		"src": "19466:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 555,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 261,
																			"src": "19475:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19475:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 552,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 71,
																	"src": "19448:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19448:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 558,
															"nodeType": "EmitStatement",
															"src": "19443:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 559,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19509:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 538,
															"id": 560,
															"nodeType": "Return",
															"src": "19502:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "19027:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "19265:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "19285:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "19277:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 531,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "19277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "19291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19276:31:0"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 537,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "19334:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 536,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19334:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19333:6:0"
									},
									"scope": 568,
									"src": "19256:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1290,
							"src": "14479:5096:0",
							"usedErrors": [
								41,
								44
							],
							"usedEvents": [
								53,
								62,
								71
							]
						},
						{
							"id": 569,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "19709:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 570,
								"nodeType": "StructuredDocumentation",
								"src": "19735:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 645,
							"linearizedBaseContracts": [
								645
							],
							"name": "IERC20",
							"nameLocation": "19816:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 571,
										"nodeType": "StructuredDocumentation",
										"src": "19829:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 579,
									"name": "Transfer",
									"nameLocation": "19998:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20023:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "20007:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20045:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "20029:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20057:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "20049:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20006:57:0"
									},
									"src": "19992:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "20070:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 588,
									"name": "Approval",
									"nameLocation": "20229:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20254:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "20238:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20277:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "20261:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20294:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 588,
												"src": "20286:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20237:63:0"
									},
									"src": "20223:78:0"
								},
								{
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "20307:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "20386:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20397:2:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "20423:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20422:9:0"
									},
									"scope": 645,
									"src": "20377:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "20438:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "20523:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20541:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "20533:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20532:17:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "20573:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20572:9:0"
									},
									"scope": 645,
									"src": "20514:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "20588:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "20815:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20832:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "20824:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20824:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20844:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "20836:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20823:27:0"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "20869:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 609,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20869:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20868:6:0"
									},
									"scope": 645,
									"src": "20806:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "20881:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "21159:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21177:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "21169:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21192:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "21184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21184:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21168:32:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "21224:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21223:9:0"
									},
									"scope": 645,
									"src": "21150:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "21239:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 632,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "21920:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21936:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "21928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21953:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "21945:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21927:32:0"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "21978:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 629,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21977:6:0"
									},
									"scope": 645,
									"src": "21911:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "21990:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 644,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "22301:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "22322:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "22314:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22314:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "22336:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "22328:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22328:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "22340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22313:41:0"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "22373:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 641,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22373:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22372:6:0"
									},
									"scope": 645,
									"src": "22292:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1290,
							"src": "19806:2575:0",
							"usedErrors": [],
							"usedEvents": [
								579,
								588
							]
						},
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "22553:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 648,
										"name": "IERC20",
										"nameLocations": [
											"22695:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 645,
										"src": "22695:6:0"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "22695:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 647,
								"nodeType": "StructuredDocumentation",
								"src": "22580:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 668,
							"linearizedBaseContracts": [
								668,
								645
							],
							"name": "IERC20Metadata",
							"nameLocation": "22677:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "22708:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 655,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "22776:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22780:2:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "22806:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 652,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22806:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22805:15:0"
									},
									"scope": 668,
									"src": "22767:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "22827:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 661,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "22897:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22903:2:0"
									},
									"returnParameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "22929:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 658,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "22929:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22928:15:0"
									},
									"scope": 668,
									"src": "22888:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "22950:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "23029:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23037:2:0"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "23063:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 664,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "23063:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23062:7:0"
									},
									"scope": 668,
									"src": "23020:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1290,
							"src": "22667:405:0",
							"usedErrors": [],
							"usedEvents": [
								579,
								588
							]
						},
						{
							"id": 669,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "23204:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 671,
										"name": "Context",
										"nameLocations": [
											"24314:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 279,
										"src": "24314:7:0"
									},
									"id": 672,
									"nodeType": "InheritanceSpecifier",
									"src": "24314:7:0"
								},
								{
									"baseName": {
										"id": 673,
										"name": "IERC20",
										"nameLocations": [
											"24323:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 645,
										"src": "24323:6:0"
									},
									"id": 674,
									"nodeType": "InheritanceSpecifier",
									"src": "24323:6:0"
								},
								{
									"baseName": {
										"id": 675,
										"name": "IERC20Metadata",
										"nameLocations": [
											"24331:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 668,
										"src": "24331:14:0"
									},
									"id": 676,
									"nodeType": "InheritanceSpecifier",
									"src": "24331:14:0"
								},
								{
									"baseName": {
										"id": 677,
										"name": "IERC20Errors",
										"nameLocations": [
											"24347:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 155,
										"src": "24347:12:0"
									},
									"id": 678,
									"nodeType": "InheritanceSpecifier",
									"src": "24347:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 670,
								"nodeType": "StructuredDocumentation",
								"src": "23234:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1174,
							"linearizedBaseContracts": [
								1174,
								155,
								668,
								645,
								279
							],
							"name": "ERC20",
							"nameLocation": "24305:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 682,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "24410:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "24366:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 681,
										"keyName": "account",
										"keyNameLocation": "24382:7:0",
										"keyType": {
											"id": 679,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24374:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24366:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 680,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "24393:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 688,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "24498:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "24426:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 687,
										"keyName": "account",
										"keyNameLocation": "24442:7:0",
										"keyType": {
											"id": 683,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "24434:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "24426:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 686,
											"keyName": "spender",
											"keyNameLocation": "24469:7:0",
											"keyType": {
												"id": 684,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "24461:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "24453:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 685,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "24480:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 690,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "24532:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "24516:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 689,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24516:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 692,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "24566:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "24551:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 691,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24551:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 694,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "24592:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1174,
									"src": "24577:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 693,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "24577:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "24838:57:0",
										"statements": [
											{
												"expression": {
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 702,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "24848:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 703,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "24856:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24848:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 705,
												"nodeType": "ExpressionStatement",
												"src": "24848:13:0"
											},
											{
												"expression": {
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 706,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "24871:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 707,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "24881:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "24871:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "24871:17:0"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "24606:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 711,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "24808:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "24794:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 696,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24794:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "24829:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "24815:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24815:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24793:44:0"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24838:0:0"
									},
									"scope": 1174,
									"src": "24782:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										655
									],
									"body": {
										"id": 719,
										"nodeType": "Block",
										"src": "25020:29:0",
										"statements": [
											{
												"expression": {
													"id": 717,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 692,
													"src": "25037:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 716,
												"id": 718,
												"nodeType": "Return",
												"src": "25030:12:0"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "24901:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "24969:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24973:2:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "25005:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 714,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25005:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25004:15:0"
									},
									"scope": 1174,
									"src": "24960:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										661
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "25224:31:0",
										"statements": [
											{
												"expression": {
													"id": 726,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 694,
													"src": "25241:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 725,
												"id": 727,
												"nodeType": "Return",
												"src": "25234:14:0"
											}
										]
									},
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "25055:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "25171:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25177:2:0"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "25209:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25209:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25208:15:0"
									},
									"scope": 1174,
									"src": "25162:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										667
									],
									"body": {
										"id": 737,
										"nodeType": "Block",
										"src": "25944:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25961:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 734,
												"id": 736,
												"nodeType": "Return",
												"src": "25954:9:0"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "25261:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 738,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "25897:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25905:2:0"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 738,
												"src": "25937:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 732,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "25937:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25936:7:0"
									},
									"scope": 1174,
									"src": "25888:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										594
									],
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "26091:36:0",
										"statements": [
											{
												"expression": {
													"id": 744,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 690,
													"src": "26108:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 743,
												"id": 745,
												"nodeType": "Return",
												"src": "26101:19:0"
											}
										]
									},
									"documentation": {
										"id": 739,
										"nodeType": "StructuredDocumentation",
										"src": "25976:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 747,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "26039:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26050:2:0"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "26082:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26082:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26081:9:0"
									},
									"scope": 1174,
									"src": "26030:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										602
									],
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "26259:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 755,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 682,
														"src": "26276:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 757,
													"indexExpression": {
														"id": 756,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "26286:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26276:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 754,
												"id": 758,
												"nodeType": "Return",
												"src": "26269:25:0"
											}
										]
									},
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "26133:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "26194:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26212:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "26204:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 749,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26204:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26203:17:0"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "26250:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26249:9:0"
									},
									"scope": 1174,
									"src": "26185:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "26571:103:0",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "26589:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "26581:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 770,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "26581:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 774,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 772,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "26597:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26597:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "26581:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "26629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 777,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "26636:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 778,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "26640:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "26619:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26619:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "26619:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "26663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 769,
												"id": 782,
												"nodeType": "Return",
												"src": "26656:11:0"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "26307:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "26505:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26522:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "26514:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26514:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26534:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "26526:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26513:27:0"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "26565:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26564:6:0"
									},
									"scope": 1174,
									"src": "26496:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										622
									],
									"body": {
										"id": 800,
										"nodeType": "Block",
										"src": "26821:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 794,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "26838:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 796,
														"indexExpression": {
															"id": 795,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "26850:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26838:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 798,
													"indexExpression": {
														"id": 797,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "26857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26838:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 793,
												"id": 799,
												"nodeType": "Return",
												"src": "26831:34:0"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "26680:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 801,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "26741:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "26759:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "26751:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "26774:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "26766:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26750:32:0"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "26812:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26811:9:0"
									},
									"scope": 1174,
									"src": "26732:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										632
									],
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "27258:107:0",
										"statements": [
											{
												"assignments": [
													812
												],
												"declarations": [
													{
														"constant": false,
														"id": 812,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "27276:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 824,
														"src": "27268:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 811,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "27268:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 813,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "27284:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27284:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27268:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 817,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "27315:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 818,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "27322:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "27331:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 816,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1065,
															1125
														],
														"referencedDeclaration": 1065,
														"src": "27306:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27306:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "27306:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "27354:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 810,
												"id": 823,
												"nodeType": "Return",
												"src": "27347:11:0"
											}
										]
									},
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "26878:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "27188:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "27204:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "27196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27221:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "27213:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27213:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27195:32:0"
									},
									"returnParameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "27252:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 808,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27252:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27251:6:0"
									},
									"scope": 1174,
									"src": "27179:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										644
									],
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "28018:151:0",
										"statements": [
											{
												"assignments": [
													838
												],
												"declarations": [
													{
														"constant": false,
														"id": 838,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "28036:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 856,
														"src": "28028:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 837,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "28028:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 841,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 839,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "28046:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28046:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "28028:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 843,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "28084:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 844,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 838,
															"src": "28090:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 845,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "28099:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 842,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "28068:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 846,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28068:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 847,
												"nodeType": "ExpressionStatement",
												"src": "28068:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 849,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "28125:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 850,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "28131:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "28135:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 848,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "28115:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28115:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "28115:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "28158:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 836,
												"id": 855,
												"nodeType": "Return",
												"src": "28151:11:0"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "27371:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "27934:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27955:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "27947:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27969:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "27961:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27981:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "27973:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27946:41:0"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "28012:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 834,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28012:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28011:6:0"
									},
									"scope": 1174,
									"src": "27925:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "28611:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 867,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 860,
														"src": "28625:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28641:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28633:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 868,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28633:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28633:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28625:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "28621:86:0",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "28645:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 876,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28693:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28685:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 874,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28685:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28685:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 873,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "28666:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28666:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 879,
															"nodeType": "RevertStatement",
															"src": "28659:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 862,
														"src": "28720:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "28734:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 883,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "28726:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28726:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "28720:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 896,
												"nodeType": "IfStatement",
												"src": "28716:86:0",
												"trueBody": {
													"id": 895,
													"nodeType": "Block",
													"src": "28738:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "28788:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "28780:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 889,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "28780:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28780:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 888,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "28759:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28759:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 894,
															"nodeType": "RevertStatement",
															"src": "28752:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 898,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "28819:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "28825:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 900,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 864,
															"src": "28829:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 897,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "28811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28811:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "ExpressionStatement",
												"src": "28811:24:0"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "28175:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "28551:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28569:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "28561:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28583:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "28575:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28595:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "28587:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28560:41:0"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28611:0:0"
									},
									"scope": 1174,
									"src": "28542:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "29232:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 919,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 914,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "29246:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 917,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29262:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29254:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 915,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29254:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29254:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29246:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 951,
													"nodeType": "Block",
													"src": "29420:362:0",
													"statements": [
														{
															"assignments": [
																926
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 926,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "29442:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 951,
																	"src": "29434:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 925,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "29434:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 930,
															"initialValue": {
																"baseExpression": {
																	"id": 927,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 682,
																	"src": "29456:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 929,
																"indexExpression": {
																	"id": 928,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "29466:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "29456:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "29434:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 931,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "29489:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 932,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "29503:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29489:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 941,
															"nodeType": "IfStatement",
															"src": "29485:115:0",
															"trueBody": {
																"id": 940,
																"nodeType": "Block",
																"src": "29510:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 935,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 907,
																					"src": "29560:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 936,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 926,
																					"src": "29566:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 937,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 911,
																					"src": "29579:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 934,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 125,
																				"src": "29535:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 938,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "29535:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 939,
																		"nodeType": "RevertStatement",
																		"src": "29528:57:0"
																	}
																]
															}
														},
														{
															"id": 950,
															"nodeType": "UncheckedBlock",
															"src": "29613:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 942,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "29720:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 944,
																			"indexExpression": {
																				"id": 943,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 907,
																				"src": "29730:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "29720:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 945,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "29738:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 946,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 911,
																				"src": "29752:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "29738:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29720:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 949,
																	"nodeType": "ExpressionStatement",
																	"src": "29720:37:0"
																}
															]
														}
													]
												},
												"id": 952,
												"nodeType": "IfStatement",
												"src": "29242:540:0",
												"trueBody": {
													"id": 924,
													"nodeType": "Block",
													"src": "29266:148:0",
													"statements": [
														{
															"expression": {
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 920,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 690,
																	"src": "29382:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 921,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "29398:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29382:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 923,
															"nodeType": "ExpressionStatement",
															"src": "29382:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 958,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 953,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "29796:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 956,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "29810:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29802:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 954,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "29802:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 957,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29802:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "29796:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "30011:206:0",
													"statements": [
														{
															"id": 971,
															"nodeType": "UncheckedBlock",
															"src": "30025:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 969,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 965,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 682,
																				"src": "30170:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 967,
																			"indexExpression": {
																				"id": 966,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 909,
																				"src": "30180:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "30170:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 968,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "30187:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "30170:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 970,
																	"nodeType": "ExpressionStatement",
																	"src": "30170:22:0"
																}
															]
														}
													]
												},
												"id": 973,
												"nodeType": "IfStatement",
												"src": "29792:425:0",
												"trueBody": {
													"id": 964,
													"nodeType": "Block",
													"src": "29814:191:0",
													"statements": [
														{
															"id": 963,
															"nodeType": "UncheckedBlock",
															"src": "29828:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 690,
																			"src": "29959:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 960,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "29975:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "29959:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "29959:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 975,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "30241:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "30247:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 977,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "30251:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 974,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 579,
														"src": "30232:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30232:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "EmitStatement",
												"src": "30227:30:0"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "28848:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "29166:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29182:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "29174:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29174:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29196:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "29188:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29208:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "29200:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29200:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29173:41:0"
									},
									"returnParameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29232:0:0"
									},
									"scope": 1174,
									"src": "29157:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1013,
										"nodeType": "Block",
										"src": "30663:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 989,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "30677:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "30696:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30688:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 990,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "30688:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30688:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "30677:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1003,
												"nodeType": "IfStatement",
												"src": "30673:91:0",
												"trueBody": {
													"id": 1002,
													"nodeType": "Block",
													"src": "30700:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30750:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 997,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "30742:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 996,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "30742:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30742:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 995,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "30721:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1000,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30721:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1001,
															"nodeType": "RevertStatement",
															"src": "30714:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "30789:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "30781:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1005,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "30781:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "30781:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "30793:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1010,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "30802:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1004,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "30773:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30773:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "30773:35:0"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "30270:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1014,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "30616:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30630:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "30622:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30622:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30647:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "30639:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 985,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30621:32:0"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30663:0:0"
									},
									"scope": 1174,
									"src": "30607:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1046,
										"nodeType": "Block",
										"src": "31189:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1022,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "31203:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31222:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1024,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31214:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1023,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "31214:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31214:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "31203:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1036,
												"nodeType": "IfStatement",
												"src": "31199:89:0",
												"trueBody": {
													"id": 1035,
													"nodeType": "Block",
													"src": "31226:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1031,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "31274:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1030,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "31266:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1029,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "31266:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "31266:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1028,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "31247:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31247:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1034,
															"nodeType": "RevertStatement",
															"src": "31240:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1038,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1017,
															"src": "31305:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31322:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31314:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1039,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31314:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31314:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1043,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "31326:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1037,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 981,
														"src": "31297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31297:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "31297:35:0"
											}
										]
									},
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "30821:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "31142:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "31156:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "31148:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31173:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "31165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31147:32:0"
									},
									"returnParameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31189:0:0"
									},
									"scope": 1174,
									"src": "31133:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1064,
										"nodeType": "Block",
										"src": "31949:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1058,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "31968:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1059,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "31975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1060,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "31984:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "31991:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1057,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1065,
															1125
														],
														"referencedDeclaration": 1125,
														"src": "31959:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31959:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "31959:37:0"
											}
										]
									},
									"documentation": {
										"id": 1048,
										"nodeType": "StructuredDocumentation",
										"src": "31345:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "31884:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "31901:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "31893:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31893:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "31916:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "31908:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31933:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "31925:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31925:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31892:47:0"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31949:0:0"
									},
									"scope": 1174,
									"src": "31875:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "32933:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1077,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1068,
														"src": "32947:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32964:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32956:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1078,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32956:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32956:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32947:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "32943:89:0",
												"trueBody": {
													"id": 1090,
													"nodeType": "Block",
													"src": "32968:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1086,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33018:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1085,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33010:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1084,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33010:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33010:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1083,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 149,
																	"src": "32989:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1088,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32989:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1089,
															"nodeType": "RevertStatement",
															"src": "32982:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1092,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1070,
														"src": "33045:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33064:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1093,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "33056:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33056:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "33045:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "33041:90:0",
												"trueBody": {
													"id": 1105,
													"nodeType": "Block",
													"src": "33068:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1101,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33117:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "33109:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1099,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "33109:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33109:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1098,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 154,
																	"src": "33089:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33089:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1104,
															"nodeType": "RevertStatement",
															"src": "33082:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1107,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 688,
																"src": "33140:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1110,
															"indexExpression": {
																"id": 1108,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1068,
																"src": "33152:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33140:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1111,
														"indexExpression": {
															"id": 1109,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1070,
															"src": "33159:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33140:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1112,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1072,
														"src": "33170:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33140:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1114,
												"nodeType": "ExpressionStatement",
												"src": "33140:35:0"
											},
											{
												"condition": {
													"id": 1115,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1074,
													"src": "33189:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1123,
												"nodeType": "IfStatement",
												"src": "33185:76:0",
												"trueBody": {
													"id": 1122,
													"nodeType": "Block",
													"src": "33200:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1117,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1068,
																		"src": "33228:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1118,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1070,
																		"src": "33235:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1119,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1072,
																		"src": "33244:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1116,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "33219:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33219:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1121,
															"nodeType": "EmitStatement",
															"src": "33214:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "32009:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "32844:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "32861:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "32853:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32853:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "32876:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "32868:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32893:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "32885:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "32905:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "32900:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1073,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32900:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32852:63:0"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32933:0:0"
									},
									"scope": 1174,
									"src": "32835:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1172,
										"nodeType": "Block",
										"src": "33638:388:0",
										"statements": [
											{
												"assignments": [
													1136
												],
												"declarations": [
													{
														"constant": false,
														"id": 1136,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "33656:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 1172,
														"src": "33648:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1135,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "33648:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1141,
												"initialValue": {
													"arguments": [
														{
															"id": 1138,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1128,
															"src": "33685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1139,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "33692:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1137,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "33675:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33675:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33648:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1142,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "33714:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33739:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1144,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "33739:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1143,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "33734:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33734:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1147,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "33748:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "33734:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33714:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "33710:310:0",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "33753:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1149,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "33771:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1150,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1132,
																	"src": "33790:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33771:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1159,
															"nodeType": "IfStatement",
															"src": "33767:130:0",
															"trueBody": {
																"id": 1158,
																"nodeType": "Block",
																"src": "33797:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1153,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1130,
																					"src": "33849:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1154,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "33858:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1155,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1132,
																					"src": "33876:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1152,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 144,
																				"src": "33822:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1156,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33822:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1157,
																		"nodeType": "RevertStatement",
																		"src": "33815:67:0"
																	}
																]
															}
														},
														{
															"id": 1169,
															"nodeType": "UncheckedBlock",
															"src": "33910:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1161,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1128,
																				"src": "33947:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1162,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1130,
																				"src": "33954:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1165,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1163,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "33963:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1164,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1132,
																					"src": "33982:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "33963:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1166,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33989:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1160,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1065,
																				1125
																			],
																			"referencedDeclaration": 1125,
																			"src": "33938:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "33938:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1168,
																	"nodeType": "ExpressionStatement",
																	"src": "33938:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "33273:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "33558:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "33582:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "33574:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "33597:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "33589:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33589:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33614:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "33606:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33573:47:0"
									},
									"returnParameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33638:0:0"
									},
									"scope": 1174,
									"src": "33549:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1290,
							"src": "24287:9741:0",
							"usedErrors": [
								125,
								130,
								135,
								144,
								149,
								154
							],
							"usedEvents": [
								579,
								588
							]
						},
						{
							"id": 1175,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34049:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1176,
										"name": "ERC20",
										"nameLocations": [
											"34134:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1174,
										"src": "34134:5:0"
									},
									"id": 1177,
									"nodeType": "InheritanceSpecifier",
									"src": "34134:5:0"
								},
								{
									"baseName": {
										"id": 1178,
										"name": "AccessControl",
										"nameLocations": [
											"34141:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 568,
										"src": "34141:13:0"
									},
									"id": 1179,
									"nodeType": "InheritanceSpecifier",
									"src": "34141:13:0"
								}
							],
							"canonicalName": "sAsset",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1289,
							"linearizedBaseContracts": [
								1289,
								568,
								32,
								11,
								114,
								1174,
								155,
								668,
								645,
								279
							],
							"name": "sAsset",
							"nameLocation": "34124:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1184,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "34250:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "34226:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1180,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "34226:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1182,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "34274:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1181,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "34264:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1183,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "34264:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "282c51f3",
									"id": 1189,
									"mutability": "constant",
									"name": "BURNER_ROLE",
									"nameLocation": "34318:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1289,
									"src": "34294:62:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1185,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "34294:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4255524e45525f524f4c45",
												"id": 1187,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "34342:13:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												},
												"value": "BURNER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_3c11d16cbaffd01df69ce1c404f6340ee057498f5f00246190ea54220576a848",
													"typeString": "literal_string \"BURNER_ROLE\""
												}
											],
											"id": 1186,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "34332:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1188,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "34332:24:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "34579:251:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1204,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34595:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34599:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34595:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "34607:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "3130",
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34624:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "**",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"id": 1210,
																						"name": "decimals",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							1288
																						],
																						"referencedDeclaration": 1288,
																						"src": "34638:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																							"typeString": "function () view returns (uint8)"
																						}
																					},
																					"id": 1211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "34638:10:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				],
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "34630:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1208,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "34630:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "34630:19:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34624:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "34623:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34607:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1203,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "34589:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34589:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1217,
												"nodeType": "ExpressionStatement",
												"src": "34589:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1219,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "34792:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "34812:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "34816:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "34812:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1218,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "34781:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34781:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "34781:42:0"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "34366:81:0",
										"text": " @dev Constructor that gives msg.sender all of existing tokens."
									},
									"id": 1225,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1199,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1192,
													"src": "34565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 1200,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1194,
													"src": "34571:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 1201,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1198,
												"name": "ERC20",
												"nameLocations": [
													"34559:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1174,
												"src": "34559:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34559:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "34487:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "34473:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34473:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "34515:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "34501:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1193,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34501:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "34539:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 1225,
												"src": "34531:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34463:95:0"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34579:0:0"
									},
									"scope": 1289,
									"src": "34452:378:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "79c65068f81072733b15ab3cba61b23110793f90ab099d228a414b186333a81e",
									"id": 1231,
									"name": "mintToken",
									"nameLocation": "34842:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"indexed": false,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34860:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "34852:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34872:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "34864:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34851:28:0"
									},
									"src": "34836:44:0"
								},
								{
									"anonymous": false,
									"eventSelector": "d1df306c742159c188c29d2c167874a39b84fd0f96f794ad7ea53295680ec1c5",
									"id": 1237,
									"name": "burnToken",
									"nameLocation": "34891:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"indexed": false,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34909:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "34901:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34923:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "34915:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34915:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34900:30:0"
									},
									"src": "34885:46:0"
								},
								{
									"body": {
										"id": 1257,
										"nodeType": "Block",
										"src": "35011:78:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1248,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "35035:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1249,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "35039:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1247,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1014,
														"src": "35029:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35029:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1251,
												"nodeType": "ExpressionStatement",
												"src": "35029:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1253,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "35071:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1254,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1241,
															"src": "35075:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1252,
														"name": "mintToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1231,
														"src": "35061:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35061:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "EmitStatement",
												"src": "35056:26:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 1258,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1244,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1184,
													"src": "34998:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1245,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1243,
												"name": "onlyRole",
												"nameLocations": [
													"34989:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "34989:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "34989:21:0"
										}
									],
									"name": "mint",
									"nameLocation": "34947:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34960:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "34952:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34952:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "34972:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1258,
												"src": "34964:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34964:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34951:28:0"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35011:0:0"
									},
									"scope": 1289,
									"src": "34938:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "35170:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1269,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "35194:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1270,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "35200:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "35188:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35188:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "35188:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1274,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1260,
															"src": "35232:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "35238:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1273,
														"name": "burnToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1237,
														"src": "35222:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35222:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "EmitStatement",
												"src": "35217:28:0"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1265,
													"name": "BURNER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1189,
													"src": "35157:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1266,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1264,
												"name": "onlyRole",
												"nameLocations": [
													"35148:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 313,
												"src": "35148:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "35148:21:0"
										}
									],
									"name": "burn",
									"nameLocation": "35104:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35117:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "35109:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35109:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35131:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "35123:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35108:30:0"
									},
									"returnParameters": {
										"id": 1267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35170:0:0"
									},
									"scope": 1289,
									"src": "35095:157:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										738
									],
									"body": {
										"id": 1287,
										"nodeType": "Block",
										"src": "35323:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "38",
													"id": 1285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "35340:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_8_by_1",
														"typeString": "int_const 8"
													},
													"value": "8"
												},
												"functionReturnParameters": 1284,
												"id": 1286,
												"nodeType": "Return",
												"src": "35333:8:0"
											}
										]
									},
									"functionSelector": "313ce567",
									"id": 1288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "35267:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1281,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "35298:8:0"
									},
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35275:2:0"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "35316:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1282,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "35316:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35315:7:0"
									},
									"scope": 1289,
									"src": "35258:90:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1290,
							"src": "34115:1235:0",
							"usedErrors": [
								41,
								44,
								125,
								130,
								135,
								144,
								149,
								154
							],
							"usedEvents": [
								53,
								62,
								71,
								579,
								588,
								1231,
								1237
							]
						}
					],
					"src": "151:35199:0"
				},
				"id": 0
			}
		}
	}
}