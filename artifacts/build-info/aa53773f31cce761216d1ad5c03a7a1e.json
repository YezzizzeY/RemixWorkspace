{
	"id": "aa53773f31cce761216d1ad5c03a7a1e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"Arbitrage_Noflashloan.sol": {
				"content": "import \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\nimport \"@uniswap/lib/contracts/libraries/TransferHelper.sol\";\nimport \"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\";\n\ncontract Arbitrage {\n    uint256 constant MAX_UINT = 2**256 - 1;\n\n    address private constant SWAP_ROUTER =\n        0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E;\n\n    address private constant UHKD = 0x64B6f44862E8800EBd63Cd7f1319C8BF0BC1bb99;\n    address public constant UETH = 0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a;\n\n    IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER);\n\n    event ArbitrageResult(uint256 amountOut);\n\n    function doArbitrage(uint256 amountIn)\n        external\n        returns (uint256 amountOut)\n    {\n        TransferHelper.safeTransferFrom(\n            UHKD,\n            msg.sender,\n            address(this),\n            amountIn\n        );\n\n        TransferHelper.safeApprove(UHKD, address(swapRouter), amountIn);\n\n        IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter\n            .ExactInputSingleParams({\n                tokenIn: UHKD,\n                tokenOut: UETH,\n                fee: 500, // which pool to use? 10000 or 500?\n                recipient: address(this),\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        uint256 amountOut1 = swapRouter.exactInputSingle(params);\n\n        TransferHelper.safeApprove(UETH, address(swapRouter), MAX_UINT);\n\n        IV3SwapRouter.ExactInputSingleParams memory params2 = IV3SwapRouter\n            .ExactInputSingleParams({\n                tokenIn: UETH,\n                tokenOut: UHKD,\n                fee: 10000, // which pool to use? 10000 or 500?\n                recipient: msg.sender,\n                amountIn: amountOut1,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        amountOut = swapRouter.exactInputSingle(params2);\n\n        emit ArbitrageResult(amountOut);\n        return amountOut;\n    }\n}\n"
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface IV3SwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n    /// and swap the entire amount, enabling contracts to send tokens before calling this function.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// that may remain in the router after the swap.\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.6.0;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeApprove: approve failed'\n        );\n    }\n\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::safeTransfer: transfer failed'\n        );\n    }\n\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(\n            success && (data.length == 0 || abi.decode(data, (bool))),\n            'TransferHelper::transferFrom: transferFrom failed'\n        );\n    }\n\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'TransferHelper::safeTransferETH: ETH transfer failed');\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":183:1804  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":183:1804  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209b7251d9be51424548b0d70f40ec03b9948bd72196c2395c86772748524d032f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209b7251d9be51424548b0d70f40ec03b9948bd72196c2395c86772748524d032f64736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH19 0x51D9BE51424548B0D70F40EC03B9948BD72196 0xC2 CODECOPY TLOAD DUP7 PUSH24 0x2748524D032F64736F6C6343000818003300000000000000 ",
							"sourceMap": "183:1621:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212209b7251d9be51424548b0d70f40ec03b9948bd72196c2395c86772748524d032f64736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 PUSH19 0x51D9BE51424548B0D70F40EC03B9948BD72196 0xC2 CODECOPY TLOAD DUP7 PUSH24 0x2748524D032F64736F6C6343000818003300000000000000 ",
							"sourceMap": "183:1621:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 183,
									"end": 1804,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b7251d9be51424548b0d70f40ec03b9948bd72196c2395c86772748524d032f64736f6c63430008180033",
									".code": [
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 183,
											"end": 1804,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/lib/contracts/libraries/TransferHelper.sol",
								"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"Arbitrage_Noflashloan.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":\"TransferHelper\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"IV3SwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IV3SwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"details": "Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.",
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256))": "b858183f",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": "04e45aaf",
							"exactOutput((bytes,address,uint256,uint256))": "09b81346",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": "5023b4df",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IV3SwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"details\":\"Setting `amountIn` to 0 will cause the contract to look up its own balance, and swap the entire amount, enabling contracts to send tokens before calling this function.\",\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap.\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap.\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":\"IV3SwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed) that may remain in the router after the swap."
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token that may remain in the router after the swap."
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ISwapRouter": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOutMinimum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "bytes",
											"name": "path",
											"type": "bytes"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountOut",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amountInMaximum",
											"type": "uint256"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct ISwapRouter.ExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "exactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"
								},
								"returns": {
									"amountOut": "The amount of the received token"
								}
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"params": {
									"params": "The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"params": {
									"params": "The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"
								},
								"returns": {
									"amountIn": "The amount of the input token"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Router token swapping functionality",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"exactInput((bytes,address,uint256,uint256,uint256))": "c04b8d59",
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389",
							"exactOutput((bytes,address,uint256,uint256,uint256))": "f28c0498",
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "db3e2198",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"exactInput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another along the specified path"
							},
							"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps `amountIn` of one token for as much as possible of another token"
							},
							"exactOutput((bytes,address,uint256,uint256,uint256))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"
							},
							"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": {
								"notice": "Swaps as little as possible of one token for `amountOut` of another token"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Functions for swapping tokens via Uniswap V3",
						"version": 1
					}
				}
			},
			"Arbitrage_Noflashloan.sol": {
				"Arbitrage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "ArbitrageResult",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "doArbitrage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapRouter",
							"outputs": [
								{
									"internalType": "contract IV3SwapRouter",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Arbitrage_Noflashloan.sol\":212:2067  contract Arbitrage {... */\n  mstore(0x40, 0xa0)\n    /* \"Arbitrage_Noflashloan.sol\":329:371  0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E */\n  0x3bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e\n    /* \"Arbitrage_Noflashloan.sol\":538:608  IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \"Arbitrage_Noflashloan.sol\":212:2067  contract Arbitrage {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8542fd6224680a1c8acc4a73d199f6633ee1089ceb34d1007e9de66262a36fbd\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Arbitrage_Noflashloan.sol\":212:2067  contract Arbitrage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x82d2dcfb\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xa048600d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xc31c9c07\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Arbitrage_Noflashloan.sol\":458:531  address public constant UETH = 0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage_Noflashloan.sol\":662:2065  function doArbitrage(uint256 amountIn)... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage_Noflashloan.sol\":538:608  IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER) */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Arbitrage_Noflashloan.sol\":458:531  address public constant UETH = 0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a */\n    tag_7:\n        /* \"Arbitrage_Noflashloan.sol\":489:531  0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a */\n      0xd10a9ec6e827b13cf399fcc7e6424f233e99562a\n        /* \"Arbitrage_Noflashloan.sol\":458:531  address public constant UETH = 0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a */\n      dup2\n      jump\t// out\n        /* \"Arbitrage_Noflashloan.sol\":662:2065  function doArbitrage(uint256 amountIn)... */\n    tag_13:\n        /* \"Arbitrage_Noflashloan.sol\":735:752  uint256 amountOut */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":768:900  TransferHelper.safeTransferFrom(... */\n      tag_21\n        /* \"Arbitrage_Noflashloan.sol\":410:452  0x64B6f44862E8800EBd63Cd7f1319C8BF0BC1bb99 */\n      0x64b6f44862e8800ebd63cd7f1319c8bf0bc1bb99\n        /* \"Arbitrage_Noflashloan.sol\":831:841  msg.sender */\n      caller\n        /* \"Arbitrage_Noflashloan.sol\":863:867  this */\n      address\n        /* \"Arbitrage_Noflashloan.sol\":882:890  amountIn */\n      dup6\n        /* \"Arbitrage_Noflashloan.sol\":768:799  TransferHelper.safeTransferFrom */\n      tag_22\n        /* \"Arbitrage_Noflashloan.sol\":768:900  TransferHelper.safeTransferFrom(... */\n      jump\t// in\n    tag_21:\n        /* \"Arbitrage_Noflashloan.sol\":911:974  TransferHelper.safeApprove(UHKD, address(swapRouter), amountIn) */\n      tag_23\n        /* \"Arbitrage_Noflashloan.sol\":410:452  0x64B6f44862E8800EBd63Cd7f1319C8BF0BC1bb99 */\n      0x64b6f44862e8800ebd63cd7f1319c8bf0bc1bb99\n        /* \"Arbitrage_Noflashloan.sol\":952:962  swapRouter */\n      immutable(\"0x8542fd6224680a1c8acc4a73d199f6633ee1089ceb34d1007e9de66262a36fbd\")\n        /* \"Arbitrage_Noflashloan.sol\":965:973  amountIn */\n      dup5\n        /* \"Arbitrage_Noflashloan.sol\":911:937  TransferHelper.safeApprove */\n      tag_24\n        /* \"Arbitrage_Noflashloan.sol\":911:974  TransferHelper.safeApprove(UHKD, address(swapRouter), amountIn) */\n      jump\t// in\n    tag_23:\n        /* \"Arbitrage_Noflashloan.sol\":985:1035  IV3SwapRouter.ExactInputSingleParams memory params */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Arbitrage_Noflashloan.sol\":410:452  0x64B6f44862E8800EBd63Cd7f1319C8BF0BC1bb99 */\n      0x64b6f44862e8800ebd63cd7f1319c8bf0bc1bb99\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":489:531  0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a */\n      0xd10a9ec6e827b13cf399fcc7e6424f233e99562a\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1174:1177  500 */\n      0x01f4\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1250:1254  this */\n      address\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1283:1291  amountIn */\n      dup5\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1327:1328  0 */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1365:1366  0 */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":1038:1381  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Arbitrage_Noflashloan.sol\":985:1381  IV3SwapRouter.ExactInputSingleParams memory params = IV3SwapRouter... */\n      swap1\n      pop\n        /* \"Arbitrage_Noflashloan.sol\":1392:1410  uint256 amountOut1 */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":1413:1423  swapRouter */\n      immutable(\"0x8542fd6224680a1c8acc4a73d199f6633ee1089ceb34d1007e9de66262a36fbd\")\n        /* \"Arbitrage_Noflashloan.sol\":1413:1440  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04e45aaf\n        /* \"Arbitrage_Noflashloan.sol\":1441:1447  params */\n      dup4\n        /* \"Arbitrage_Noflashloan.sol\":1413:1448  swapRouter.exactInputSingle(params) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"Arbitrage_Noflashloan.sol\":1392:1448  uint256 amountOut1 = swapRouter.exactInputSingle(params) */\n      swap1\n      pop\n        /* \"Arbitrage_Noflashloan.sol\":1459:1522  TransferHelper.safeApprove(UETH, address(swapRouter), MAX_UINT) */\n      tag_31\n        /* \"Arbitrage_Noflashloan.sol\":489:531  0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a */\n      0xd10a9ec6e827b13cf399fcc7e6424f233e99562a\n        /* \"Arbitrage_Noflashloan.sol\":1500:1510  swapRouter */\n      immutable(\"0x8542fd6224680a1c8acc4a73d199f6633ee1089ceb34d1007e9de66262a36fbd\")\n        /* \"Arbitrage_Noflashloan.sol\":265:275  2**256 - 1 */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"Arbitrage_Noflashloan.sol\":1459:1485  TransferHelper.safeApprove */\n      tag_24\n        /* \"Arbitrage_Noflashloan.sol\":1459:1522  TransferHelper.safeApprove(UETH, address(swapRouter), MAX_UINT) */\n      jump\t// in\n    tag_31:\n        /* \"Arbitrage_Noflashloan.sol\":1533:1584  IV3SwapRouter.ExactInputSingleParams memory params2 */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Arbitrage_Noflashloan.sol\":489:531  0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a */\n      0xd10a9ec6e827b13cf399fcc7e6424f233e99562a\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":410:452  0x64B6f44862E8800EBd63Cd7f1319C8BF0BC1bb99 */\n      0x64b6f44862e8800ebd63cd7f1319c8bf0bc1bb99\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1723:1728  10000 */\n      0x2710\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1793:1803  msg.sender */\n      caller\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1831:1841  amountOut1 */\n      dup4\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1877:1878  0 */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Arbitrage_Noflashloan.sol\":1915:1916  0 */\n      0x00\n        /* \"Arbitrage_Noflashloan.sol\":1587:1931  IV3SwapRouter... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"Arbitrage_Noflashloan.sol\":1533:1931  IV3SwapRouter.ExactInputSingleParams memory params2 = IV3SwapRouter... */\n      swap1\n      pop\n        /* \"Arbitrage_Noflashloan.sol\":1954:1964  swapRouter */\n      immutable(\"0x8542fd6224680a1c8acc4a73d199f6633ee1089ceb34d1007e9de66262a36fbd\")\n        /* \"Arbitrage_Noflashloan.sol\":1954:1981  swapRouter.exactInputSingle */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x04e45aaf\n        /* \"Arbitrage_Noflashloan.sol\":1982:1989  params2 */\n      dup3\n        /* \"Arbitrage_Noflashloan.sol\":1954:1990  swapRouter.exactInputSingle(params2) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_32\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_32:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n        /* \"Arbitrage_Noflashloan.sol\":1942:1990  amountOut = swapRouter.exactInputSingle(params2) */\n      swap4\n      pop\n        /* \"Arbitrage_Noflashloan.sol\":2006:2032  ArbitrageResult(amountOut) */\n      0x3bb2ef743367d6bf518e353ce6f97647577a7ba1b971feecabd1bf42be1b55a3\n        /* \"Arbitrage_Noflashloan.sol\":2022:2031  amountOut */\n      dup5\n        /* \"Arbitrage_Noflashloan.sol\":2006:2032  ArbitrageResult(amountOut) */\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Arbitrage_Noflashloan.sol\":2042:2058  return amountOut */\n      pop\n      pop\n      pop\n        /* \"Arbitrage_Noflashloan.sol\":662:2065  function doArbitrage(uint256 amountIn)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Arbitrage_Noflashloan.sol\":538:608  IV3SwapRouter public immutable swapRouter = IV3SwapRouter(SWAP_ROUTER) */\n    tag_17:\n      immutable(\"0x8542fd6224680a1c8acc4a73d199f6633ee1089ceb34d1007e9de66262a36fbd\")\n      dup2\n      jump\t// out\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1096:1582  function safeTransferFrom(... */\n    tag_22:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1314:1326  bool success */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1328:1345  bytes memory data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1354  token */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1359  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1383:1393  0x23b872dd */\n      0x23b872dd\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1395:1399  from */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1401:1403  to */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1405:1410  value */\n      dup7\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1360:1411  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      add(0x24, mload(0x40))\n      tag_38\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1349:1412  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_44\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_43)\n    tag_44:\n      0x60\n      swap2\n      pop\n    tag_43:\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1313:1412  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1450  success */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1500  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_45\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1470:1471  0 */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1459  data */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1466  data.length */\n      mload\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1471  data.length == 0 */\n      eq\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1499  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_46\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1486:1490  data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1475:1499  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1455:1499  data.length == 0 || abi.decode(data, (bool)) */\n    tag_46:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1443:1500  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_45:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1422:1575  require(... */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1225:1582  {... */\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":1096:1582  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":212:646  function safeApprove(... */\n    tag_24:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":390:402  bool success */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":404:421  bytes memory data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:430  token */\n      dup5\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:435  token.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":459:469  0x095ea7b3 */\n      0x095ea7b3\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":471:473  to */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":475:480  value */\n      dup6\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":436:481  abi.encodeWithSelector(0x095ea7b3, to, value) */\n      add(0x24, mload(0x40))\n      tag_53\n      swap3\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":425:482  token.call(abi.encodeWithSelector(0x095ea7b3, to, value)) */\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_55:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_58\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_57)\n    tag_58:\n      0x60\n      swap2\n      pop\n    tag_57:\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":389:482  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:520  success */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:570  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_59\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":540:541  0 */\n      0x00\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:529  data */\n      dup2\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:536  data.length */\n      mload\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:541  data.length == 0 */\n      eq\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:569  data.length == 0 || abi.decode(data, (bool)) */\n      dup1\n      tag_60\n      jumpi\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":556:560  data */\n      dup1\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":545:569  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_61:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":525:569  data.length == 0 || abi.decode(data, (bool)) */\n    tag_60:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":513:570  success && (data.length == 0 || abi.decode(data, (bool))) */\n    tag_59:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":492:639  require(... */\n      tag_62\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_62:\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":314:646  {... */\n      pop\n      pop\n        /* \"@uniswap/lib/contracts/libraries/TransferHelper.sol\":212:646  function safeApprove(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_65:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_66:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_102\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_65\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_67:\n        /* \"#utility.yul\":328:352   */\n      tag_104\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_66\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_9:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_106\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_67\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_69:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:997   */\n    tag_71:\n        /* \"#utility.yul\":957:964   */\n      0x00\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":975:991   */\n      swap1\n      pop\n        /* \"#utility.yul\":920:997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1003:1125   */\n    tag_72:\n        /* \"#utility.yul\":1076:1100   */\n      tag_112\n        /* \"#utility.yul\":1094:1099   */\n      dup2\n        /* \"#utility.yul\":1076:1100   */\n      tag_71\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1066:1101   */\n      eq\n        /* \"#utility.yul\":1056:1119   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":1115:1116   */\n      0x00\n        /* \"#utility.yul\":1112:1113   */\n      dup1\n        /* \"#utility.yul\":1105:1117   */\n      revert\n        /* \"#utility.yul\":1056:1119   */\n    tag_113:\n        /* \"#utility.yul\":1003:1125   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1131:1270   */\n    tag_73:\n        /* \"#utility.yul\":1177:1182   */\n      0x00\n        /* \"#utility.yul\":1215:1221   */\n      dup2\n        /* \"#utility.yul\":1202:1222   */\n      calldataload\n        /* \"#utility.yul\":1193:1222   */\n      swap1\n      pop\n        /* \"#utility.yul\":1231:1264   */\n      tag_115\n        /* \"#utility.yul\":1258:1263   */\n      dup2\n        /* \"#utility.yul\":1231:1264   */\n      tag_72\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":1131:1270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1605   */\n    tag_12:\n        /* \"#utility.yul\":1335:1341   */\n      0x00\n        /* \"#utility.yul\":1384:1386   */\n      0x20\n        /* \"#utility.yul\":1372:1381   */\n      dup3\n        /* \"#utility.yul\":1363:1370   */\n      dup5\n        /* \"#utility.yul\":1359:1382   */\n      sub\n        /* \"#utility.yul\":1355:1387   */\n      slt\n        /* \"#utility.yul\":1352:1471   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":1390:1469   */\n      tag_118\n      tag_69\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":1352:1471   */\n    tag_117:\n        /* \"#utility.yul\":1510:1511   */\n      0x00\n        /* \"#utility.yul\":1535:1588   */\n      tag_119\n        /* \"#utility.yul\":1580:1587   */\n      dup5\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup6\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_73\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":1525:1588   */\n      swap2\n      pop\n        /* \"#utility.yul\":1481:1598   */\n      pop\n        /* \"#utility.yul\":1276:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1729   */\n    tag_74:\n        /* \"#utility.yul\":1698:1722   */\n      tag_121\n        /* \"#utility.yul\":1716:1721   */\n      dup2\n        /* \"#utility.yul\":1698:1722   */\n      tag_71\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":1693:1696   */\n      dup3\n        /* \"#utility.yul\":1686:1723   */\n      mstore\n        /* \"#utility.yul\":1611:1729   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1735:1957   */\n    tag_15:\n        /* \"#utility.yul\":1828:1832   */\n      0x00\n        /* \"#utility.yul\":1866:1868   */\n      0x20\n        /* \"#utility.yul\":1855:1864   */\n      dup3\n        /* \"#utility.yul\":1851:1869   */\n      add\n        /* \"#utility.yul\":1843:1869   */\n      swap1\n      pop\n        /* \"#utility.yul\":1879:1950   */\n      tag_123\n        /* \"#utility.yul\":1947:1948   */\n      0x00\n        /* \"#utility.yul\":1936:1945   */\n      dup4\n        /* \"#utility.yul\":1932:1949   */\n      add\n        /* \"#utility.yul\":1923:1929   */\n      dup5\n        /* \"#utility.yul\":1879:1950   */\n      tag_74\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":1735:1957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1963:2023   */\n    tag_75:\n        /* \"#utility.yul\":1991:1994   */\n      0x00\n        /* \"#utility.yul\":2012:2017   */\n      dup2\n        /* \"#utility.yul\":2005:2017   */\n      swap1\n      pop\n        /* \"#utility.yul\":1963:2023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2171   */\n    tag_76:\n        /* \"#utility.yul\":2079:2088   */\n      0x00\n        /* \"#utility.yul\":2112:2165   */\n      tag_126\n        /* \"#utility.yul\":2130:2164   */\n      tag_127\n        /* \"#utility.yul\":2139:2163   */\n      tag_128\n        /* \"#utility.yul\":2157:2162   */\n      dup5\n        /* \"#utility.yul\":2139:2163   */\n      tag_65\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":2130:2164   */\n      tag_75\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2112:2165   */\n      tag_65\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":2099:2165   */\n      swap1\n      pop\n        /* \"#utility.yul\":2029:2171   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2177:2303   */\n    tag_77:\n        /* \"#utility.yul\":2227:2236   */\n      0x00\n        /* \"#utility.yul\":2260:2297   */\n      tag_130\n        /* \"#utility.yul\":2291:2296   */\n      dup3\n        /* \"#utility.yul\":2260:2297   */\n      tag_76\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2247:2297   */\n      swap1\n      pop\n        /* \"#utility.yul\":2177:2303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2309:2456   */\n    tag_78:\n        /* \"#utility.yul\":2380:2389   */\n      0x00\n        /* \"#utility.yul\":2413:2450   */\n      tag_132\n        /* \"#utility.yul\":2444:2449   */\n      dup3\n        /* \"#utility.yul\":2413:2450   */\n      tag_77\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":2400:2450   */\n      swap1\n      pop\n        /* \"#utility.yul\":2309:2456   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2462:2635   */\n    tag_79:\n        /* \"#utility.yul\":2570:2628   */\n      tag_134\n        /* \"#utility.yul\":2622:2627   */\n      dup2\n        /* \"#utility.yul\":2570:2628   */\n      tag_78\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":2565:2568   */\n      dup3\n        /* \"#utility.yul\":2558:2629   */\n      mstore\n        /* \"#utility.yul\":2462:2635   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2641:2905   */\n    tag_19:\n        /* \"#utility.yul\":2755:2759   */\n      0x00\n        /* \"#utility.yul\":2793:2795   */\n      0x20\n        /* \"#utility.yul\":2782:2791   */\n      dup3\n        /* \"#utility.yul\":2778:2796   */\n      add\n        /* \"#utility.yul\":2770:2796   */\n      swap1\n      pop\n        /* \"#utility.yul\":2806:2898   */\n      tag_136\n        /* \"#utility.yul\":2895:2896   */\n      0x00\n        /* \"#utility.yul\":2884:2893   */\n      dup4\n        /* \"#utility.yul\":2880:2897   */\n      add\n        /* \"#utility.yul\":2871:2877   */\n      dup5\n        /* \"#utility.yul\":2806:2898   */\n      tag_79\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2641:2905   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2911:3019   */\n    tag_80:\n        /* \"#utility.yul\":2988:3012   */\n      tag_138\n        /* \"#utility.yul\":3006:3011   */\n      dup2\n        /* \"#utility.yul\":2988:3012   */\n      tag_66\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":2983:2986   */\n      dup3\n        /* \"#utility.yul\":2976:3013   */\n      mstore\n        /* \"#utility.yul\":2911:3019   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3025:3116   */\n    tag_81:\n        /* \"#utility.yul\":3061:3068   */\n      0x00\n        /* \"#utility.yul\":3101:3109   */\n      0xffffff\n        /* \"#utility.yul\":3094:3099   */\n      dup3\n        /* \"#utility.yul\":3090:3110   */\n      and\n        /* \"#utility.yul\":3079:3110   */\n      swap1\n      pop\n        /* \"#utility.yul\":3025:3116   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3122:3227   */\n    tag_82:\n        /* \"#utility.yul\":3197:3220   */\n      tag_141\n        /* \"#utility.yul\":3214:3219   */\n      dup2\n        /* \"#utility.yul\":3197:3220   */\n      tag_81\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3192:3195   */\n      dup3\n        /* \"#utility.yul\":3185:3221   */\n      mstore\n        /* \"#utility.yul\":3122:3227   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3233:3341   */\n    tag_83:\n        /* \"#utility.yul\":3310:3334   */\n      tag_143\n        /* \"#utility.yul\":3328:3333   */\n      dup2\n        /* \"#utility.yul\":3310:3334   */\n      tag_71\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3305:3308   */\n      dup3\n        /* \"#utility.yul\":3298:3335   */\n      mstore\n        /* \"#utility.yul\":3233:3341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3347:3455   */\n    tag_84:\n        /* \"#utility.yul\":3424:3448   */\n      tag_145\n        /* \"#utility.yul\":3442:3447   */\n      dup2\n        /* \"#utility.yul\":3424:3448   */\n      tag_65\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":3419:3422   */\n      dup3\n        /* \"#utility.yul\":3412:3449   */\n      mstore\n        /* \"#utility.yul\":3347:3455   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3559:5002   */\n    tag_85:\n        /* \"#utility.yul\":3734:3738   */\n      0xe0\n        /* \"#utility.yul\":3729:3732   */\n      dup3\n        /* \"#utility.yul\":3725:3739   */\n      add\n        /* \"#utility.yul\":3824:3828   */\n      0x00\n        /* \"#utility.yul\":3817:3822   */\n      dup3\n        /* \"#utility.yul\":3813:3829   */\n      add\n        /* \"#utility.yul\":3807:3830   */\n      mload\n        /* \"#utility.yul\":3843:3906   */\n      tag_147\n        /* \"#utility.yul\":3900:3904   */\n      0x00\n        /* \"#utility.yul\":3895:3898   */\n      dup6\n        /* \"#utility.yul\":3891:3905   */\n      add\n        /* \"#utility.yul\":3877:3889   */\n      dup3\n        /* \"#utility.yul\":3843:3906   */\n      tag_80\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":3749:3916   */\n      pop\n        /* \"#utility.yul\":4002:4006   */\n      0x20\n        /* \"#utility.yul\":3995:4000   */\n      dup3\n        /* \"#utility.yul\":3991:4007   */\n      add\n        /* \"#utility.yul\":3985:4008   */\n      mload\n        /* \"#utility.yul\":4021:4084   */\n      tag_148\n        /* \"#utility.yul\":4078:4082   */\n      0x20\n        /* \"#utility.yul\":4073:4076   */\n      dup6\n        /* \"#utility.yul\":4069:4083   */\n      add\n        /* \"#utility.yul\":4055:4067   */\n      dup3\n        /* \"#utility.yul\":4021:4084   */\n      tag_80\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":3926:4094   */\n      pop\n        /* \"#utility.yul\":4175:4179   */\n      0x40\n        /* \"#utility.yul\":4168:4173   */\n      dup3\n        /* \"#utility.yul\":4164:4180   */\n      add\n        /* \"#utility.yul\":4158:4181   */\n      mload\n        /* \"#utility.yul\":4194:4255   */\n      tag_149\n        /* \"#utility.yul\":4249:4253   */\n      0x40\n        /* \"#utility.yul\":4244:4247   */\n      dup6\n        /* \"#utility.yul\":4240:4254   */\n      add\n        /* \"#utility.yul\":4226:4238   */\n      dup3\n        /* \"#utility.yul\":4194:4255   */\n      tag_82\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":4104:4265   */\n      pop\n        /* \"#utility.yul\":4352:4356   */\n      0x60\n        /* \"#utility.yul\":4345:4350   */\n      dup3\n        /* \"#utility.yul\":4341:4357   */\n      add\n        /* \"#utility.yul\":4335:4358   */\n      mload\n        /* \"#utility.yul\":4371:4434   */\n      tag_150\n        /* \"#utility.yul\":4428:4432   */\n      0x60\n        /* \"#utility.yul\":4423:4426   */\n      dup6\n        /* \"#utility.yul\":4419:4433   */\n      add\n        /* \"#utility.yul\":4405:4417   */\n      dup3\n        /* \"#utility.yul\":4371:4434   */\n      tag_80\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4275:4444   */\n      pop\n        /* \"#utility.yul\":4530:4534   */\n      0x80\n        /* \"#utility.yul\":4523:4528   */\n      dup3\n        /* \"#utility.yul\":4519:4535   */\n      add\n        /* \"#utility.yul\":4513:4536   */\n      mload\n        /* \"#utility.yul\":4549:4612   */\n      tag_151\n        /* \"#utility.yul\":4606:4610   */\n      0x80\n        /* \"#utility.yul\":4601:4604   */\n      dup6\n        /* \"#utility.yul\":4597:4611   */\n      add\n        /* \"#utility.yul\":4583:4595   */\n      dup3\n        /* \"#utility.yul\":4549:4612   */\n      tag_83\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":4454:4622   */\n      pop\n        /* \"#utility.yul\":4716:4720   */\n      0xa0\n        /* \"#utility.yul\":4709:4714   */\n      dup3\n        /* \"#utility.yul\":4705:4721   */\n      add\n        /* \"#utility.yul\":4699:4722   */\n      mload\n        /* \"#utility.yul\":4735:4798   */\n      tag_152\n        /* \"#utility.yul\":4792:4796   */\n      0xa0\n        /* \"#utility.yul\":4787:4790   */\n      dup6\n        /* \"#utility.yul\":4783:4797   */\n      add\n        /* \"#utility.yul\":4769:4781   */\n      dup3\n        /* \"#utility.yul\":4735:4798   */\n      tag_83\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":4632:4808   */\n      pop\n        /* \"#utility.yul\":4903:4907   */\n      0xc0\n        /* \"#utility.yul\":4896:4901   */\n      dup3\n        /* \"#utility.yul\":4892:4908   */\n      add\n        /* \"#utility.yul\":4886:4909   */\n      mload\n        /* \"#utility.yul\":4922:4985   */\n      tag_153\n        /* \"#utility.yul\":4979:4983   */\n      0xc0\n        /* \"#utility.yul\":4974:4977   */\n      dup6\n        /* \"#utility.yul\":4970:4984   */\n      add\n        /* \"#utility.yul\":4956:4968   */\n      dup3\n        /* \"#utility.yul\":4922:4985   */\n      tag_84\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4818:4995   */\n      pop\n        /* \"#utility.yul\":3703:5002   */\n      pop\n        /* \"#utility.yul\":3559:5002   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5008:5387   */\n    tag_26:\n        /* \"#utility.yul\":5179:5183   */\n      0x00\n        /* \"#utility.yul\":5217:5220   */\n      0xe0\n        /* \"#utility.yul\":5206:5215   */\n      dup3\n        /* \"#utility.yul\":5202:5221   */\n      add\n        /* \"#utility.yul\":5194:5221   */\n      swap1\n      pop\n        /* \"#utility.yul\":5231:5380   */\n      tag_155\n        /* \"#utility.yul\":5377:5378   */\n      0x00\n        /* \"#utility.yul\":5366:5375   */\n      dup4\n        /* \"#utility.yul\":5362:5379   */\n      add\n        /* \"#utility.yul\":5353:5359   */\n      dup5\n        /* \"#utility.yul\":5231:5380   */\n      tag_85\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5008:5387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:5536   */\n    tag_86:\n        /* \"#utility.yul\":5450:5455   */\n      0x00\n        /* \"#utility.yul\":5481:5487   */\n      dup2\n        /* \"#utility.yul\":5475:5488   */\n      mload\n        /* \"#utility.yul\":5466:5488   */\n      swap1\n      pop\n        /* \"#utility.yul\":5497:5530   */\n      tag_157\n        /* \"#utility.yul\":5524:5529   */\n      dup2\n        /* \"#utility.yul\":5497:5530   */\n      tag_72\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5393:5536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:5893   */\n    tag_30:\n        /* \"#utility.yul\":5612:5618   */\n      0x00\n        /* \"#utility.yul\":5661:5663   */\n      0x20\n        /* \"#utility.yul\":5649:5658   */\n      dup3\n        /* \"#utility.yul\":5640:5647   */\n      dup5\n        /* \"#utility.yul\":5636:5659   */\n      sub\n        /* \"#utility.yul\":5632:5664   */\n      slt\n        /* \"#utility.yul\":5629:5748   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":5667:5746   */\n      tag_160\n      tag_69\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5629:5748   */\n    tag_159:\n        /* \"#utility.yul\":5787:5788   */\n      0x00\n        /* \"#utility.yul\":5812:5876   */\n      tag_161\n        /* \"#utility.yul\":5868:5875   */\n      dup5\n        /* \"#utility.yul\":5859:5865   */\n      dup3\n        /* \"#utility.yul\":5848:5857   */\n      dup6\n        /* \"#utility.yul\":5844:5866   */\n      add\n        /* \"#utility.yul\":5812:5876   */\n      tag_86\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":5802:5876   */\n      swap2\n      pop\n        /* \"#utility.yul\":5758:5886   */\n      pop\n        /* \"#utility.yul\":5542:5893   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5899:6341   */\n    tag_39:\n        /* \"#utility.yul\":6048:6052   */\n      0x00\n        /* \"#utility.yul\":6086:6088   */\n      0x60\n        /* \"#utility.yul\":6075:6084   */\n      dup3\n        /* \"#utility.yul\":6071:6089   */\n      add\n        /* \"#utility.yul\":6063:6089   */\n      swap1\n      pop\n        /* \"#utility.yul\":6099:6170   */\n      tag_163\n        /* \"#utility.yul\":6167:6168   */\n      0x00\n        /* \"#utility.yul\":6156:6165   */\n      dup4\n        /* \"#utility.yul\":6152:6169   */\n      add\n        /* \"#utility.yul\":6143:6149   */\n      dup7\n        /* \"#utility.yul\":6099:6170   */\n      tag_67\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":6180:6252   */\n      tag_164\n        /* \"#utility.yul\":6248:6250   */\n      0x20\n        /* \"#utility.yul\":6237:6246   */\n      dup4\n        /* \"#utility.yul\":6233:6251   */\n      add\n        /* \"#utility.yul\":6224:6230   */\n      dup6\n        /* \"#utility.yul\":6180:6252   */\n      tag_67\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":6262:6334   */\n      tag_165\n        /* \"#utility.yul\":6330:6332   */\n      0x40\n        /* \"#utility.yul\":6319:6328   */\n      dup4\n        /* \"#utility.yul\":6315:6333   */\n      add\n        /* \"#utility.yul\":6306:6312   */\n      dup5\n        /* \"#utility.yul\":6262:6334   */\n      tag_74\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":5899:6341   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6347:6445   */\n    tag_87:\n        /* \"#utility.yul\":6398:6404   */\n      0x00\n        /* \"#utility.yul\":6432:6437   */\n      dup2\n        /* \"#utility.yul\":6426:6438   */\n      mload\n        /* \"#utility.yul\":6416:6438   */\n      swap1\n      pop\n        /* \"#utility.yul\":6347:6445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6598   */\n    tag_88:\n        /* \"#utility.yul\":6552:6563   */\n      0x00\n        /* \"#utility.yul\":6589:6592   */\n      dup2\n        /* \"#utility.yul\":6574:6592   */\n      swap1\n      pop\n        /* \"#utility.yul\":6451:6598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6604:6850   */\n    tag_89:\n        /* \"#utility.yul\":6685:6686   */\n      0x00\n        /* \"#utility.yul\":6695:6808   */\n    tag_169:\n        /* \"#utility.yul\":6709:6715   */\n      dup4\n        /* \"#utility.yul\":6706:6707   */\n      dup2\n        /* \"#utility.yul\":6703:6716   */\n      lt\n        /* \"#utility.yul\":6695:6808   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":6794:6795   */\n      dup1\n        /* \"#utility.yul\":6789:6792   */\n      dup3\n        /* \"#utility.yul\":6785:6796   */\n      add\n        /* \"#utility.yul\":6779:6797   */\n      mload\n        /* \"#utility.yul\":6775:6776   */\n      dup2\n        /* \"#utility.yul\":6770:6773   */\n      dup5\n        /* \"#utility.yul\":6766:6777   */\n      add\n        /* \"#utility.yul\":6759:6798   */\n      mstore\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6728:6729   */\n      dup2\n        /* \"#utility.yul\":6724:6734   */\n      add\n        /* \"#utility.yul\":6719:6734   */\n      swap1\n      pop\n        /* \"#utility.yul\":6695:6808   */\n      jump(tag_169)\n    tag_171:\n        /* \"#utility.yul\":6842:6843   */\n      0x00\n        /* \"#utility.yul\":6833:6839   */\n      dup5\n        /* \"#utility.yul\":6828:6831   */\n      dup5\n        /* \"#utility.yul\":6824:6840   */\n      add\n        /* \"#utility.yul\":6817:6844   */\n      mstore\n        /* \"#utility.yul\":6666:6850   */\n      pop\n        /* \"#utility.yul\":6604:6850   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6856:7242   */\n    tag_90:\n        /* \"#utility.yul\":6960:6963   */\n      0x00\n        /* \"#utility.yul\":6988:7026   */\n      tag_173\n        /* \"#utility.yul\":7020:7025   */\n      dup3\n        /* \"#utility.yul\":6988:7026   */\n      tag_87\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":7042:7130   */\n      tag_174\n        /* \"#utility.yul\":7123:7129   */\n      dup2\n        /* \"#utility.yul\":7118:7121   */\n      dup6\n        /* \"#utility.yul\":7042:7130   */\n      tag_88\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":7035:7130   */\n      swap4\n      pop\n        /* \"#utility.yul\":7139:7204   */\n      tag_175\n        /* \"#utility.yul\":7197:7203   */\n      dup2\n        /* \"#utility.yul\":7192:7195   */\n      dup6\n        /* \"#utility.yul\":7185:7189   */\n      0x20\n        /* \"#utility.yul\":7178:7183   */\n      dup7\n        /* \"#utility.yul\":7174:7190   */\n      add\n        /* \"#utility.yul\":7139:7204   */\n      tag_89\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":7229:7235   */\n      dup1\n        /* \"#utility.yul\":7224:7227   */\n      dup5\n        /* \"#utility.yul\":7220:7236   */\n      add\n        /* \"#utility.yul\":7213:7236   */\n      swap2\n      pop\n        /* \"#utility.yul\":6964:7242   */\n      pop\n        /* \"#utility.yul\":6856:7242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7248:7519   */\n    tag_41:\n        /* \"#utility.yul\":7378:7381   */\n      0x00\n        /* \"#utility.yul\":7400:7493   */\n      tag_177\n        /* \"#utility.yul\":7489:7492   */\n      dup3\n        /* \"#utility.yul\":7480:7486   */\n      dup5\n        /* \"#utility.yul\":7400:7493   */\n      tag_90\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7393:7493   */\n      swap2\n      pop\n        /* \"#utility.yul\":7510:7513   */\n      dup2\n        /* \"#utility.yul\":7503:7513   */\n      swap1\n      pop\n        /* \"#utility.yul\":7248:7519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7525:7615   */\n    tag_91:\n        /* \"#utility.yul\":7559:7566   */\n      0x00\n        /* \"#utility.yul\":7602:7607   */\n      dup2\n        /* \"#utility.yul\":7595:7608   */\n      iszero\n        /* \"#utility.yul\":7588:7609   */\n      iszero\n        /* \"#utility.yul\":7577:7609   */\n      swap1\n      pop\n        /* \"#utility.yul\":7525:7615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7621:7737   */\n    tag_92:\n        /* \"#utility.yul\":7691:7712   */\n      tag_180\n        /* \"#utility.yul\":7706:7711   */\n      dup2\n        /* \"#utility.yul\":7691:7712   */\n      tag_91\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":7684:7689   */\n      dup2\n        /* \"#utility.yul\":7681:7713   */\n      eq\n        /* \"#utility.yul\":7671:7731   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":7727:7728   */\n      0x00\n        /* \"#utility.yul\":7724:7725   */\n      dup1\n        /* \"#utility.yul\":7717:7729   */\n      revert\n        /* \"#utility.yul\":7671:7731   */\n    tag_181:\n        /* \"#utility.yul\":7621:7737   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7743:7880   */\n    tag_93:\n        /* \"#utility.yul\":7797:7802   */\n      0x00\n        /* \"#utility.yul\":7828:7834   */\n      dup2\n        /* \"#utility.yul\":7822:7835   */\n      mload\n        /* \"#utility.yul\":7813:7835   */\n      swap1\n      pop\n        /* \"#utility.yul\":7844:7874   */\n      tag_183\n        /* \"#utility.yul\":7868:7873   */\n      dup2\n        /* \"#utility.yul\":7844:7874   */\n      tag_92\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":7743:7880   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7886:8231   */\n    tag_48:\n        /* \"#utility.yul\":7953:7959   */\n      0x00\n        /* \"#utility.yul\":8002:8004   */\n      0x20\n        /* \"#utility.yul\":7990:7999   */\n      dup3\n        /* \"#utility.yul\":7981:7988   */\n      dup5\n        /* \"#utility.yul\":7977:8000   */\n      sub\n        /* \"#utility.yul\":7973:8005   */\n      slt\n        /* \"#utility.yul\":7970:8089   */\n      iszero\n      tag_185\n      jumpi\n        /* \"#utility.yul\":8008:8087   */\n      tag_186\n      tag_69\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":7970:8089   */\n    tag_185:\n        /* \"#utility.yul\":8128:8129   */\n      0x00\n        /* \"#utility.yul\":8153:8214   */\n      tag_187\n        /* \"#utility.yul\":8206:8213   */\n      dup5\n        /* \"#utility.yul\":8197:8203   */\n      dup3\n        /* \"#utility.yul\":8186:8195   */\n      dup6\n        /* \"#utility.yul\":8182:8204   */\n      add\n        /* \"#utility.yul\":8153:8214   */\n      tag_93\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8143:8214   */\n      swap2\n      pop\n        /* \"#utility.yul\":8099:8224   */\n      pop\n        /* \"#utility.yul\":7886:8231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8237:8406   */\n    tag_94:\n        /* \"#utility.yul\":8321:8332   */\n      0x00\n        /* \"#utility.yul\":8355:8361   */\n      dup3\n        /* \"#utility.yul\":8350:8353   */\n      dup3\n        /* \"#utility.yul\":8343:8362   */\n      mstore\n        /* \"#utility.yul\":8395:8399   */\n      0x20\n        /* \"#utility.yul\":8390:8393   */\n      dup3\n        /* \"#utility.yul\":8386:8400   */\n      add\n        /* \"#utility.yul\":8371:8400   */\n      swap1\n      pop\n        /* \"#utility.yul\":8237:8406   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8412:8648   */\n    tag_95:\n        /* \"#utility.yul\":8552:8586   */\n      0x5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472\n        /* \"#utility.yul\":8548:8549   */\n      0x00\n        /* \"#utility.yul\":8540:8546   */\n      dup3\n        /* \"#utility.yul\":8536:8550   */\n      add\n        /* \"#utility.yul\":8529:8587   */\n      mstore\n        /* \"#utility.yul\":8621:8640   */\n      0x616e7366657246726f6d206661696c6564000000000000000000000000000000\n        /* \"#utility.yul\":8616:8618   */\n      0x20\n        /* \"#utility.yul\":8608:8614   */\n      dup3\n        /* \"#utility.yul\":8604:8619   */\n      add\n        /* \"#utility.yul\":8597:8641   */\n      mstore\n        /* \"#utility.yul\":8412:8648   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8654:9020   */\n    tag_96:\n        /* \"#utility.yul\":8796:8799   */\n      0x00\n        /* \"#utility.yul\":8817:8884   */\n      tag_191\n        /* \"#utility.yul\":8881:8883   */\n      0x31\n        /* \"#utility.yul\":8876:8879   */\n      dup4\n        /* \"#utility.yul\":8817:8884   */\n      tag_94\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":8810:8884   */\n      swap2\n      pop\n        /* \"#utility.yul\":8893:8986   */\n      tag_192\n        /* \"#utility.yul\":8982:8985   */\n      dup3\n        /* \"#utility.yul\":8893:8986   */\n      tag_95\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":9011:9013   */\n      0x40\n        /* \"#utility.yul\":9006:9009   */\n      dup3\n        /* \"#utility.yul\":9002:9014   */\n      add\n        /* \"#utility.yul\":8995:9014   */\n      swap1\n      pop\n        /* \"#utility.yul\":8654:9020   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9026:9445   */\n    tag_51:\n        /* \"#utility.yul\":9192:9196   */\n      0x00\n        /* \"#utility.yul\":9230:9232   */\n      0x20\n        /* \"#utility.yul\":9219:9228   */\n      dup3\n        /* \"#utility.yul\":9215:9233   */\n      add\n        /* \"#utility.yul\":9207:9233   */\n      swap1\n      pop\n        /* \"#utility.yul\":9279:9288   */\n      dup2\n        /* \"#utility.yul\":9273:9277   */\n      dup2\n        /* \"#utility.yul\":9269:9289   */\n      sub\n        /* \"#utility.yul\":9265:9266   */\n      0x00\n        /* \"#utility.yul\":9254:9263   */\n      dup4\n        /* \"#utility.yul\":9250:9267   */\n      add\n        /* \"#utility.yul\":9243:9290   */\n      mstore\n        /* \"#utility.yul\":9307:9438   */\n      tag_194\n        /* \"#utility.yul\":9433:9437   */\n      dup2\n        /* \"#utility.yul\":9307:9438   */\n      tag_96\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":9299:9438   */\n      swap1\n      pop\n        /* \"#utility.yul\":9026:9445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9451:9783   */\n    tag_54:\n        /* \"#utility.yul\":9572:9576   */\n      0x00\n        /* \"#utility.yul\":9610:9612   */\n      0x40\n        /* \"#utility.yul\":9599:9608   */\n      dup3\n        /* \"#utility.yul\":9595:9613   */\n      add\n        /* \"#utility.yul\":9587:9613   */\n      swap1\n      pop\n        /* \"#utility.yul\":9623:9694   */\n      tag_196\n        /* \"#utility.yul\":9691:9692   */\n      0x00\n        /* \"#utility.yul\":9680:9689   */\n      dup4\n        /* \"#utility.yul\":9676:9693   */\n      add\n        /* \"#utility.yul\":9667:9673   */\n      dup6\n        /* \"#utility.yul\":9623:9694   */\n      tag_67\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":9704:9776   */\n      tag_197\n        /* \"#utility.yul\":9772:9774   */\n      0x20\n        /* \"#utility.yul\":9761:9770   */\n      dup4\n        /* \"#utility.yul\":9757:9775   */\n      add\n        /* \"#utility.yul\":9748:9754   */\n      dup5\n        /* \"#utility.yul\":9704:9776   */\n      tag_74\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9451:9783   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9789:10019   */\n    tag_97:\n        /* \"#utility.yul\":9929:9963   */\n      0x5472616e7366657248656c7065723a3a73616665417070726f76653a20617070\n        /* \"#utility.yul\":9925:9926   */\n      0x00\n        /* \"#utility.yul\":9917:9923   */\n      dup3\n        /* \"#utility.yul\":9913:9927   */\n      add\n        /* \"#utility.yul\":9906:9964   */\n      mstore\n        /* \"#utility.yul\":9998:10011   */\n      0x726f7665206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9993:9995   */\n      0x20\n        /* \"#utility.yul\":9985:9991   */\n      dup3\n        /* \"#utility.yul\":9981:9996   */\n      add\n        /* \"#utility.yul\":9974:10012   */\n      mstore\n        /* \"#utility.yul\":9789:10019   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10025:10391   */\n    tag_98:\n        /* \"#utility.yul\":10167:10170   */\n      0x00\n        /* \"#utility.yul\":10188:10255   */\n      tag_200\n        /* \"#utility.yul\":10252:10254   */\n      0x2b\n        /* \"#utility.yul\":10247:10250   */\n      dup4\n        /* \"#utility.yul\":10188:10255   */\n      tag_94\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":10181:10255   */\n      swap2\n      pop\n        /* \"#utility.yul\":10264:10357   */\n      tag_201\n        /* \"#utility.yul\":10353:10356   */\n      dup3\n        /* \"#utility.yul\":10264:10357   */\n      tag_97\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":10382:10384   */\n      0x40\n        /* \"#utility.yul\":10377:10380   */\n      dup3\n        /* \"#utility.yul\":10373:10385   */\n      add\n        /* \"#utility.yul\":10366:10385   */\n      swap1\n      pop\n        /* \"#utility.yul\":10025:10391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10397:10816   */\n    tag_64:\n        /* \"#utility.yul\":10563:10567   */\n      0x00\n        /* \"#utility.yul\":10601:10603   */\n      0x20\n        /* \"#utility.yul\":10590:10599   */\n      dup3\n        /* \"#utility.yul\":10586:10604   */\n      add\n        /* \"#utility.yul\":10578:10604   */\n      swap1\n      pop\n        /* \"#utility.yul\":10650:10659   */\n      dup2\n        /* \"#utility.yul\":10644:10648   */\n      dup2\n        /* \"#utility.yul\":10640:10660   */\n      sub\n        /* \"#utility.yul\":10636:10637   */\n      0x00\n        /* \"#utility.yul\":10625:10634   */\n      dup4\n        /* \"#utility.yul\":10621:10638   */\n      add\n        /* \"#utility.yul\":10614:10661   */\n      mstore\n        /* \"#utility.yul\":10678:10809   */\n      tag_203\n        /* \"#utility.yul\":10804:10808   */\n      dup2\n        /* \"#utility.yul\":10678:10809   */\n      tag_98\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":10670:10809   */\n      swap1\n      pop\n        /* \"#utility.yul\":10397:10816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122022163e382698e6d222817fa66eb713d5be46eb7d18045fd6580df0ffc59fd26264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a0604052733bfa4769fb09eefc5a80d6e87c3b9c650f7ae48e73ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff16815250348015610056575f80fd5b50608051610c2161008b5f395f8181610102015281816101e70152818161029a0152818161039e01526104780152610c215ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806382d2dcfb14610043578063a048600d14610061578063c31c9c0714610091575b5f80fd5b61004b6100af565b604051610058919061073c565b60405180910390f35b61007b6004803603810190610076919061078c565b6100c7565b60405161008891906107c6565b60405180910390f35b610099610476565b6040516100a6919061083a565b60405180910390f35b73d10a9ec6e827b13cf399fcc7e6424f233e99562a81565b5f6100e87364b6f44862e8800ebd63cd7f1319c8bf0bc1bb9933308561049a565b6101277364b6f44862e8800ebd63cd7f1319c8bf0bc1bb997f0000000000000000000000000000000000000000000000000000000000000000846105cd565b5f6040518060e001604052807364b6f44862e8800ebd63cd7f1319c8bf0bc1bb9973ffffffffffffffffffffffffffffffffffffffff16815260200173d10a9ec6e827b13cf399fcc7e6424f233e99562a73ffffffffffffffffffffffffffffffffffffffff1681526020016101f462ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf836040518263ffffffff1660e01b815260040161023e9190610929565b6020604051808303815f875af115801561025a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027e9190610956565b90506102df73d10a9ec6e827b13cf399fcc7e6424f233e99562a7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105cd565b5f6040518060e0016040528073d10a9ec6e827b13cf399fcc7e6424f233e99562a73ffffffffffffffffffffffffffffffffffffffff1681526020017364b6f44862e8800ebd63cd7f1319c8bf0bc1bb9973ffffffffffffffffffffffffffffffffffffffff16815260200161271062ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf826040518263ffffffff1660e01b81526004016103f59190610929565b6020604051808303815f875af1158015610411573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104359190610956565b93507f3bb2ef743367d6bf518e353ce6f97647577a7ba1b971feecabd1bf42be1b55a38460405161046691906107c6565b60405180910390a1505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016104cd93929190610981565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161051b9190610a22565b5f604051808303815f865af19150503d805f8114610554576040519150601f19603f3d011682016040523d82523d5f602084013e610559565b606091505b509150915081801561058657505f815114806105855750808060200190518101906105849190610a6d565b5b5b6105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610b18565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016105fe929190610b36565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161064c9190610a22565b5f604051808303815f865af19150503d805f8114610685576040519150601f19603f3d011682016040523d82523d5f602084013e61068a565b606091505b50915091508180156106b757505f815114806106b65750808060200190518101906106b59190610a6d565b5b5b6106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed90610bcd565b60405180910390fd5b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610726826106fd565b9050919050565b6107368161071c565b82525050565b5f60208201905061074f5f83018461072d565b92915050565b5f80fd5b5f819050919050565b61076b81610759565b8114610775575f80fd5b50565b5f8135905061078681610762565b92915050565b5f602082840312156107a1576107a0610755565b5b5f6107ae84828501610778565b91505092915050565b6107c081610759565b82525050565b5f6020820190506107d95f8301846107b7565b92915050565b5f819050919050565b5f6108026107fd6107f8846106fd565b6107df565b6106fd565b9050919050565b5f610813826107e8565b9050919050565b5f61082482610809565b9050919050565b6108348161081a565b82525050565b5f60208201905061084d5f83018461082b565b92915050565b61085c8161071c565b82525050565b5f62ffffff82169050919050565b61087981610862565b82525050565b61088881610759565b82525050565b610897816106fd565b82525050565b60e082015f8201516108b15f850182610853565b5060208201516108c46020850182610853565b5060408201516108d76040850182610870565b5060608201516108ea6060850182610853565b5060808201516108fd608085018261087f565b5060a082015161091060a085018261087f565b5060c082015161092360c085018261088e565b50505050565b5f60e08201905061093c5f83018461089d565b92915050565b5f8151905061095081610762565b92915050565b5f6020828403121561096b5761096a610755565b5b5f61097884828501610942565b91505092915050565b5f6060820190506109945f83018661072d565b6109a1602083018561072d565b6109ae60408301846107b7565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b838110156109e75780820151818401526020810190506109cc565b5f8484015250505050565b5f6109fc826109b6565b610a0681856109c0565b9350610a168185602086016109ca565b80840191505092915050565b5f610a2d82846109f2565b915081905092915050565b5f8115159050919050565b610a4c81610a38565b8114610a56575f80fd5b50565b5f81519050610a6781610a43565b92915050565b5f60208284031215610a8257610a81610755565b5b5f610a8f84828501610a59565b91505092915050565b5f82825260208201905092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a2074725f8201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b5f610b02603183610a98565b9150610b0d82610aa8565b604082019050919050565b5f6020820190508181035f830152610b2f81610af6565b9050919050565b5f604082019050610b495f83018561072d565b610b5660208301846107b7565b9392505050565b7f5472616e7366657248656c7065723a3a73616665417070726f76653a206170705f8201527f726f7665206661696c6564000000000000000000000000000000000000000000602082015250565b5f610bb7602b83610a98565b9150610bc282610b5d565b604082019050919050565b5f6020820190508181035f830152610be481610bab565b905091905056fea264697066735822122022163e382698e6d222817fa66eb713d5be46eb7d18045fd6580df0ffc59fd26264736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH20 0x3BFA4769FB09EEFC5A80D6E87C3B9C650F7AE48E PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0xC21 PUSH2 0x8B PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x102 ADD MSTORE DUP2 DUP2 PUSH2 0x1E7 ADD MSTORE DUP2 DUP2 PUSH2 0x29A ADD MSTORE DUP2 DUP2 PUSH2 0x39E ADD MSTORE PUSH2 0x478 ADD MSTORE PUSH2 0xC21 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82D2DCFB EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA048600D EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE8 PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 CALLER ADDRESS DUP6 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x127 PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 PUSH32 0x0 DUP5 PUSH2 0x5CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DF PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A PUSH32 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST SWAP4 POP PUSH32 0x3BB2EF743367D6BF518E353CE6F97647577A7BA1B971FEECABD1BF42BE1B55A3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x559 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x586 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x585 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5FE SWAP3 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x68A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x6B7 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x6B6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x6F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6ED SWAP1 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x726 DUP3 PUSH2 0x6FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH2 0x71C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74F PUSH0 DUP4 ADD DUP5 PUSH2 0x72D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0x759 JUMP JUMPDEST DUP2 EQ PUSH2 0x775 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x786 DUP2 PUSH2 0x762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x7A0 PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7AE DUP5 DUP3 DUP6 ADD PUSH2 0x778 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C0 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x7B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x802 PUSH2 0x7FD PUSH2 0x7F8 DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x813 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x824 DUP3 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x834 DUP2 PUSH2 0x81A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x84D PUSH0 DUP4 ADD DUP5 PUSH2 0x82B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x85C DUP2 PUSH2 0x71C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x879 DUP2 PUSH2 0x862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x888 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x897 DUP2 PUSH2 0x6FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x8B1 PUSH0 DUP6 ADD DUP3 PUSH2 0x853 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x8C4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x853 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x8D7 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x870 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x8EA PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x853 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x8FD PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x87F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x910 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x87F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x923 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x88E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x93C PUSH0 DUP4 ADD DUP5 PUSH2 0x89D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x950 DUP2 PUSH2 0x762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x978 DUP5 DUP3 DUP6 ADD PUSH2 0x942 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x994 PUSH0 DUP4 ADD DUP7 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x9A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x9AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7B7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9CC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9FC DUP3 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0xA06 DUP2 DUP6 PUSH2 0x9C0 JUMP JUMPDEST SWAP4 POP PUSH2 0xA16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA2D DUP3 DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4C DUP2 PUSH2 0xA38 JUMP JUMPDEST DUP2 EQ PUSH2 0xA56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA67 DUP2 PUSH2 0xA43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA81 PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8F DUP5 DUP3 DUP6 ADD PUSH2 0xA59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB02 PUSH1 0x31 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xB0D DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB49 PUSH0 DUP4 ADD DUP6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0xB56 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F7665206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBB7 PUSH1 0x2B DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC2 DUP3 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE4 DUP2 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 AND RETURNDATACOPY CODESIZE 0x26 SWAP9 0xE6 0xD2 0x22 DUP2 PUSH32 0xA66EB713D5BE46EB7D18045FD6580DF0FFC59FD26264736F6C63430008180033 ",
							"sourceMap": "212:1855:4:-:0;;;329:42;538:70;;;;;;;;;212:1855;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@UETH_385": {
									"entryPoint": 175,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@doArbitrage_494": {
									"entryPoint": 199,
									"id": 494,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeApprove_44": {
									"entryPoint": 1485,
									"id": 44,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_133": {
									"entryPoint": 1178,
									"id": 133,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@swapRouter_391": {
									"entryPoint": 1142,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 2649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2370,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 2669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 2131,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack": {
									"entryPoint": 2205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint160_to_t_uint160": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint24_to_t_uint24": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 2175,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 2594,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2433,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2870,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IV3SwapRouter_$251__to_t_address__fromStack_reversed": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2840,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed": {
									"entryPoint": 2345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 2486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 2496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1820,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1881,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IV3SwapRouter_$251_to_t_address": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2057,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 2506,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c": {
									"entryPoint": 2728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123": {
									"entryPoint": 2909,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 2627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10819:5",
										"nodeType": "YulBlock",
										"src": "0:10819:5",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:5",
													"nodeType": "YulBlock",
													"src": "52:81:5",
													"statements": [
														{
															"nativeSrc": "62:65:5",
															"nodeType": "YulAssignment",
															"src": "62:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:5",
																		"nodeType": "YulLiteral",
																		"src": "84:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:5"
																},
																"nativeSrc": "73:54:5",
																"nodeType": "YulFunctionCall",
																"src": "73:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:5",
														"nodeType": "YulTypedName",
														"src": "34:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:5",
														"nodeType": "YulTypedName",
														"src": "44:7:5",
														"type": ""
													}
												],
												"src": "7:126:5"
											},
											{
												"body": {
													"nativeSrc": "184:51:5",
													"nodeType": "YulBlock",
													"src": "184:51:5",
													"statements": [
														{
															"nativeSrc": "194:35:5",
															"nodeType": "YulAssignment",
															"src": "194:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:5"
																},
																"nativeSrc": "205:24:5",
																"nodeType": "YulFunctionCall",
																"src": "205:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:5",
														"nodeType": "YulTypedName",
														"src": "166:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:5",
														"nodeType": "YulTypedName",
														"src": "176:7:5",
														"type": ""
													}
												],
												"src": "139:96:5"
											},
											{
												"body": {
													"nativeSrc": "306:53:5",
													"nodeType": "YulBlock",
													"src": "306:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:5"
																		},
																		"nativeSrc": "328:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:5"
																},
																"nativeSrc": "316:37:5",
																"nodeType": "YulFunctionCall",
																"src": "316:37:5"
															},
															"nativeSrc": "316:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:5",
														"nodeType": "YulTypedName",
														"src": "294:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:5",
														"nodeType": "YulTypedName",
														"src": "301:3:5",
														"type": ""
													}
												],
												"src": "241:118:5"
											},
											{
												"body": {
													"nativeSrc": "463:124:5",
													"nodeType": "YulBlock",
													"src": "463:124:5",
													"statements": [
														{
															"nativeSrc": "473:26:5",
															"nodeType": "YulAssignment",
															"src": "473:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:5",
																		"nodeType": "YulLiteral",
																		"src": "496:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:5"
																},
																"nativeSrc": "481:18:5",
																"nodeType": "YulFunctionCall",
																"src": "481:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:5",
																				"nodeType": "YulLiteral",
																				"src": "577:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:5"
																		},
																		"nativeSrc": "562:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:5"
																},
																"nativeSrc": "509:71:5",
																"nodeType": "YulFunctionCall",
																"src": "509:71:5"
															},
															"nativeSrc": "509:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:5",
														"nodeType": "YulTypedName",
														"src": "435:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:5",
														"nodeType": "YulTypedName",
														"src": "447:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:5",
														"nodeType": "YulTypedName",
														"src": "458:4:5",
														"type": ""
													}
												],
												"src": "365:222:5"
											},
											{
												"body": {
													"nativeSrc": "633:35:5",
													"nodeType": "YulBlock",
													"src": "633:35:5",
													"statements": [
														{
															"nativeSrc": "643:19:5",
															"nodeType": "YulAssignment",
															"src": "643:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:5",
																		"nodeType": "YulLiteral",
																		"src": "659:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:5"
																},
																"nativeSrc": "653:9:5",
																"nodeType": "YulFunctionCall",
																"src": "653:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:5",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:5",
														"nodeType": "YulTypedName",
														"src": "626:6:5",
														"type": ""
													}
												],
												"src": "593:75:5"
											},
											{
												"body": {
													"nativeSrc": "763:28:5",
													"nodeType": "YulBlock",
													"src": "763:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:5",
																		"nodeType": "YulLiteral",
																		"src": "780:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:5",
																		"nodeType": "YulLiteral",
																		"src": "783:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:5"
																},
																"nativeSrc": "773:12:5",
																"nodeType": "YulFunctionCall",
																"src": "773:12:5"
															},
															"nativeSrc": "773:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:5"
											},
											{
												"body": {
													"nativeSrc": "886:28:5",
													"nodeType": "YulBlock",
													"src": "886:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:5",
																		"nodeType": "YulLiteral",
																		"src": "903:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:5",
																		"nodeType": "YulLiteral",
																		"src": "906:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:5"
																},
																"nativeSrc": "896:12:5",
																"nodeType": "YulFunctionCall",
																"src": "896:12:5"
															},
															"nativeSrc": "896:12:5",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:5",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:5"
											},
											{
												"body": {
													"nativeSrc": "965:32:5",
													"nodeType": "YulBlock",
													"src": "965:32:5",
													"statements": [
														{
															"nativeSrc": "975:16:5",
															"nodeType": "YulAssignment",
															"src": "975:16:5",
															"value": {
																"name": "value",
																"nativeSrc": "986:5:5",
																"nodeType": "YulIdentifier",
																"src": "986:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "975:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "975:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "920:77:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "947:5:5",
														"nodeType": "YulTypedName",
														"src": "947:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "957:7:5",
														"nodeType": "YulTypedName",
														"src": "957:7:5",
														"type": ""
													}
												],
												"src": "920:77:5"
											},
											{
												"body": {
													"nativeSrc": "1046:79:5",
													"nodeType": "YulBlock",
													"src": "1046:79:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1103:16:5",
																"nodeType": "YulBlock",
																"src": "1103:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1112:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1112:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1115:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1115:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1105:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1105:6:5"
																			},
																			"nativeSrc": "1105:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1105:12:5"
																		},
																		"nativeSrc": "1105:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1105:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1094:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "1094:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1076:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "1076:17:5"
																				},
																				"nativeSrc": "1076:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1076:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1066:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1066:2:5"
																		},
																		"nativeSrc": "1066:35:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1066:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1059:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1059:6:5"
																},
																"nativeSrc": "1059:43:5",
																"nodeType": "YulFunctionCall",
																"src": "1059:43:5"
															},
															"nativeSrc": "1056:63:5",
															"nodeType": "YulIf",
															"src": "1056:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1003:122:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1039:5:5",
														"nodeType": "YulTypedName",
														"src": "1039:5:5",
														"type": ""
													}
												],
												"src": "1003:122:5"
											},
											{
												"body": {
													"nativeSrc": "1183:87:5",
													"nodeType": "YulBlock",
													"src": "1183:87:5",
													"statements": [
														{
															"nativeSrc": "1193:29:5",
															"nodeType": "YulAssignment",
															"src": "1193:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1215:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1202:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1202:12:5"
																},
																"nativeSrc": "1202:20:5",
																"nodeType": "YulFunctionCall",
																"src": "1202:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1193:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1193:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1258:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "1258:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1231:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:26:5"
																},
																"nativeSrc": "1231:33:5",
																"nodeType": "YulFunctionCall",
																"src": "1231:33:5"
															},
															"nativeSrc": "1231:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "1231:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1131:139:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1161:6:5",
														"nodeType": "YulTypedName",
														"src": "1161:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1169:3:5",
														"nodeType": "YulTypedName",
														"src": "1169:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1177:5:5",
														"nodeType": "YulTypedName",
														"src": "1177:5:5",
														"type": ""
													}
												],
												"src": "1131:139:5"
											},
											{
												"body": {
													"nativeSrc": "1342:263:5",
													"nodeType": "YulBlock",
													"src": "1342:263:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1388:83:5",
																"nodeType": "YulBlock",
																"src": "1388:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1390:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "1390:77:5"
																			},
																			"nativeSrc": "1390:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1390:79:5"
																		},
																		"nativeSrc": "1390:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1363:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1363:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1372:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1372:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1359:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1359:3:5"
																		},
																		"nativeSrc": "1359:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1359:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1384:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1384:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1355:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:5"
																},
																"nativeSrc": "1355:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1355:32:5"
															},
															"nativeSrc": "1352:119:5",
															"nodeType": "YulIf",
															"src": "1352:119:5"
														},
														{
															"nativeSrc": "1481:117:5",
															"nodeType": "YulBlock",
															"src": "1481:117:5",
															"statements": [
																{
																	"nativeSrc": "1496:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1496:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1510:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1510:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1500:6:5",
																			"nodeType": "YulTypedName",
																			"src": "1500:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1525:63:5",
																	"nodeType": "YulAssignment",
																	"src": "1525:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1560:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1571:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1556:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:5"
																				},
																				"nativeSrc": "1556:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1580:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1535:20:5",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:5"
																		},
																		"nativeSrc": "1535:53:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1525:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1276:329:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1312:9:5",
														"nodeType": "YulTypedName",
														"src": "1312:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1323:7:5",
														"nodeType": "YulTypedName",
														"src": "1323:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1335:6:5",
														"nodeType": "YulTypedName",
														"src": "1335:6:5",
														"type": ""
													}
												],
												"src": "1276:329:5"
											},
											{
												"body": {
													"nativeSrc": "1676:53:5",
													"nodeType": "YulBlock",
													"src": "1676:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1693:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1693:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1716:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "1716:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1698:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "1698:17:5"
																		},
																		"nativeSrc": "1698:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1698:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1686:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1686:6:5"
																},
																"nativeSrc": "1686:37:5",
																"nodeType": "YulFunctionCall",
																"src": "1686:37:5"
															},
															"nativeSrc": "1686:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "1686:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1611:118:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1664:5:5",
														"nodeType": "YulTypedName",
														"src": "1664:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1671:3:5",
														"nodeType": "YulTypedName",
														"src": "1671:3:5",
														"type": ""
													}
												],
												"src": "1611:118:5"
											},
											{
												"body": {
													"nativeSrc": "1833:124:5",
													"nodeType": "YulBlock",
													"src": "1833:124:5",
													"statements": [
														{
															"nativeSrc": "1843:26:5",
															"nodeType": "YulAssignment",
															"src": "1843:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1855:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1855:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1866:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1851:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1851:3:5"
																},
																"nativeSrc": "1851:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1851:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1843:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1843:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1923:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1923:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1936:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1936:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1947:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1947:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1932:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1932:3:5"
																		},
																		"nativeSrc": "1932:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1932:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1879:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "1879:43:5"
																},
																"nativeSrc": "1879:71:5",
																"nodeType": "YulFunctionCall",
																"src": "1879:71:5"
															},
															"nativeSrc": "1879:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "1879:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1735:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1805:9:5",
														"nodeType": "YulTypedName",
														"src": "1805:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1817:6:5",
														"nodeType": "YulTypedName",
														"src": "1817:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1828:4:5",
														"nodeType": "YulTypedName",
														"src": "1828:4:5",
														"type": ""
													}
												],
												"src": "1735:222:5"
											},
											{
												"body": {
													"nativeSrc": "1995:28:5",
													"nodeType": "YulBlock",
													"src": "1995:28:5",
													"statements": [
														{
															"nativeSrc": "2005:12:5",
															"nodeType": "YulAssignment",
															"src": "2005:12:5",
															"value": {
																"name": "value",
																"nativeSrc": "2012:5:5",
																"nodeType": "YulIdentifier",
																"src": "2012:5:5"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2005:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2005:3:5"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1963:60:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1981:5:5",
														"nodeType": "YulTypedName",
														"src": "1981:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1991:3:5",
														"nodeType": "YulTypedName",
														"src": "1991:3:5",
														"type": ""
													}
												],
												"src": "1963:60:5"
											},
											{
												"body": {
													"nativeSrc": "2089:82:5",
													"nodeType": "YulBlock",
													"src": "2089:82:5",
													"statements": [
														{
															"nativeSrc": "2099:66:5",
															"nodeType": "YulAssignment",
															"src": "2099:66:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2157:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "2157:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "2139:17:5",
																					"nodeType": "YulIdentifier",
																					"src": "2139:17:5"
																				},
																				"nativeSrc": "2139:24:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2139:24:5"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2130:8:5",
																			"nodeType": "YulIdentifier",
																			"src": "2130:8:5"
																		},
																		"nativeSrc": "2130:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2130:34:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2112:17:5",
																	"nodeType": "YulIdentifier",
																	"src": "2112:17:5"
																},
																"nativeSrc": "2112:53:5",
																"nodeType": "YulFunctionCall",
																"src": "2112:53:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2099:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2099:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "2029:142:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2069:5:5",
														"nodeType": "YulTypedName",
														"src": "2069:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2079:9:5",
														"nodeType": "YulTypedName",
														"src": "2079:9:5",
														"type": ""
													}
												],
												"src": "2029:142:5"
											},
											{
												"body": {
													"nativeSrc": "2237:66:5",
													"nodeType": "YulBlock",
													"src": "2237:66:5",
													"statements": [
														{
															"nativeSrc": "2247:50:5",
															"nodeType": "YulAssignment",
															"src": "2247:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2291:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2291:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "2260:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2260:30:5"
																},
																"nativeSrc": "2260:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2260:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2247:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2247:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "2177:126:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2217:5:5",
														"nodeType": "YulTypedName",
														"src": "2217:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2227:9:5",
														"nodeType": "YulTypedName",
														"src": "2227:9:5",
														"type": ""
													}
												],
												"src": "2177:126:5"
											},
											{
												"body": {
													"nativeSrc": "2390:66:5",
													"nodeType": "YulBlock",
													"src": "2390:66:5",
													"statements": [
														{
															"nativeSrc": "2400:50:5",
															"nodeType": "YulAssignment",
															"src": "2400:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2444:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "2444:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "2413:30:5",
																	"nodeType": "YulIdentifier",
																	"src": "2413:30:5"
																},
																"nativeSrc": "2413:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2413:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2400:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2400:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IV3SwapRouter_$251_to_t_address",
												"nativeSrc": "2309:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2370:5:5",
														"nodeType": "YulTypedName",
														"src": "2370:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2380:9:5",
														"nodeType": "YulTypedName",
														"src": "2380:9:5",
														"type": ""
													}
												],
												"src": "2309:147:5"
											},
											{
												"body": {
													"nativeSrc": "2548:87:5",
													"nodeType": "YulBlock",
													"src": "2548:87:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2565:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2565:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2622:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "2622:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IV3SwapRouter_$251_to_t_address",
																			"nativeSrc": "2570:51:5",
																			"nodeType": "YulIdentifier",
																			"src": "2570:51:5"
																		},
																		"nativeSrc": "2570:58:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2570:58:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2558:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2558:6:5"
																},
																"nativeSrc": "2558:71:5",
																"nodeType": "YulFunctionCall",
																"src": "2558:71:5"
															},
															"nativeSrc": "2558:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "2558:71:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack",
												"nativeSrc": "2462:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2536:5:5",
														"nodeType": "YulTypedName",
														"src": "2536:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2543:3:5",
														"nodeType": "YulTypedName",
														"src": "2543:3:5",
														"type": ""
													}
												],
												"src": "2462:173:5"
											},
											{
												"body": {
													"nativeSrc": "2760:145:5",
													"nodeType": "YulBlock",
													"src": "2760:145:5",
													"statements": [
														{
															"nativeSrc": "2770:26:5",
															"nodeType": "YulAssignment",
															"src": "2770:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2782:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2782:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2793:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2793:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2778:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:5"
																},
																"nativeSrc": "2778:18:5",
																"nodeType": "YulFunctionCall",
																"src": "2778:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2770:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2770:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2871:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2871:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2884:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2895:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2895:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2880:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2880:3:5"
																		},
																		"nativeSrc": "2880:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2880:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack",
																	"nativeSrc": "2806:64:5",
																	"nodeType": "YulIdentifier",
																	"src": "2806:64:5"
																},
																"nativeSrc": "2806:92:5",
																"nodeType": "YulFunctionCall",
																"src": "2806:92:5"
															},
															"nativeSrc": "2806:92:5",
															"nodeType": "YulExpressionStatement",
															"src": "2806:92:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IV3SwapRouter_$251__to_t_address__fromStack_reversed",
												"nativeSrc": "2641:264:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2732:9:5",
														"nodeType": "YulTypedName",
														"src": "2732:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2744:6:5",
														"nodeType": "YulTypedName",
														"src": "2744:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2755:4:5",
														"nodeType": "YulTypedName",
														"src": "2755:4:5",
														"type": ""
													}
												],
												"src": "2641:264:5"
											},
											{
												"body": {
													"nativeSrc": "2966:53:5",
													"nodeType": "YulBlock",
													"src": "2966:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2983:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2983:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3006:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3006:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2988:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "2988:17:5"
																		},
																		"nativeSrc": "2988:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2988:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2976:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2976:6:5"
																},
																"nativeSrc": "2976:37:5",
																"nodeType": "YulFunctionCall",
																"src": "2976:37:5"
															},
															"nativeSrc": "2976:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "2976:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "2911:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2954:5:5",
														"nodeType": "YulTypedName",
														"src": "2954:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2961:3:5",
														"nodeType": "YulTypedName",
														"src": "2961:3:5",
														"type": ""
													}
												],
												"src": "2911:108:5"
											},
											{
												"body": {
													"nativeSrc": "3069:47:5",
													"nodeType": "YulBlock",
													"src": "3069:47:5",
													"statements": [
														{
															"nativeSrc": "3079:31:5",
															"nodeType": "YulAssignment",
															"src": "3079:31:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3094:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "3094:5:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3101:8:5",
																		"nodeType": "YulLiteral",
																		"src": "3101:8:5",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3090:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3090:3:5"
																},
																"nativeSrc": "3090:20:5",
																"nodeType": "YulFunctionCall",
																"src": "3090:20:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3079:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "3079:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nativeSrc": "3025:91:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3051:5:5",
														"nodeType": "YulTypedName",
														"src": "3051:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3061:7:5",
														"nodeType": "YulTypedName",
														"src": "3061:7:5",
														"type": ""
													}
												],
												"src": "3025:91:5"
											},
											{
												"body": {
													"nativeSrc": "3175:52:5",
													"nodeType": "YulBlock",
													"src": "3175:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3192:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3192:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3214:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3214:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nativeSrc": "3197:16:5",
																			"nodeType": "YulIdentifier",
																			"src": "3197:16:5"
																		},
																		"nativeSrc": "3197:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3197:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3185:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3185:6:5"
																},
																"nativeSrc": "3185:36:5",
																"nodeType": "YulFunctionCall",
																"src": "3185:36:5"
															},
															"nativeSrc": "3185:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "3185:36:5"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nativeSrc": "3122:105:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3163:5:5",
														"nodeType": "YulTypedName",
														"src": "3163:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3170:3:5",
														"nodeType": "YulTypedName",
														"src": "3170:3:5",
														"type": ""
													}
												],
												"src": "3122:105:5"
											},
											{
												"body": {
													"nativeSrc": "3288:53:5",
													"nodeType": "YulBlock",
													"src": "3288:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3305:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3305:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3328:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3328:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3310:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3310:17:5"
																		},
																		"nativeSrc": "3310:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3310:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3298:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3298:6:5"
																},
																"nativeSrc": "3298:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3298:37:5"
															},
															"nativeSrc": "3298:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3298:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3233:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3276:5:5",
														"nodeType": "YulTypedName",
														"src": "3276:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3283:3:5",
														"nodeType": "YulTypedName",
														"src": "3283:3:5",
														"type": ""
													}
												],
												"src": "3233:108:5"
											},
											{
												"body": {
													"nativeSrc": "3402:53:5",
													"nodeType": "YulBlock",
													"src": "3402:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3419:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3419:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3442:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "3442:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint160",
																			"nativeSrc": "3424:17:5",
																			"nodeType": "YulIdentifier",
																			"src": "3424:17:5"
																		},
																		"nativeSrc": "3424:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3424:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3412:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3412:6:5"
																},
																"nativeSrc": "3412:37:5",
																"nodeType": "YulFunctionCall",
																"src": "3412:37:5"
															},
															"nativeSrc": "3412:37:5",
															"nodeType": "YulExpressionStatement",
															"src": "3412:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint160_to_t_uint160",
												"nativeSrc": "3347:108:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3390:5:5",
														"nodeType": "YulTypedName",
														"src": "3390:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3397:3:5",
														"nodeType": "YulTypedName",
														"src": "3397:3:5",
														"type": ""
													}
												],
												"src": "3347:108:5"
											},
											{
												"body": {
													"nativeSrc": "3703:1299:5",
													"nodeType": "YulBlock",
													"src": "3703:1299:5",
													"statements": [
														{
															"nativeSrc": "3713:26:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3713:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3729:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "3729:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3734:4:5",
																		"nodeType": "YulLiteral",
																		"src": "3734:4:5",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3725:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3725:3:5"
																},
																"nativeSrc": "3725:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3725:14:5"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3717:4:5",
																	"nodeType": "YulTypedName",
																	"src": "3717:4:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3749:167:5",
															"nodeType": "YulBlock",
															"src": "3749:167:5",
															"statements": [
																{
																	"nativeSrc": "3787:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3787:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3817:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3817:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3824:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3824:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3813:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3813:3:5"
																				},
																				"nativeSrc": "3813:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3813:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3807:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3807:5:5"
																		},
																		"nativeSrc": "3807:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3791:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3791:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3877:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "3877:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3895:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3895:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3900:4:5",
																						"nodeType": "YulLiteral",
																						"src": "3900:4:5",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3891:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3891:3:5"
																				},
																				"nativeSrc": "3891:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3891:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3843:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "3843:33:5"
																		},
																		"nativeSrc": "3843:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3843:63:5"
																	},
																	"nativeSrc": "3843:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "3843:63:5"
																}
															]
														},
														{
															"nativeSrc": "3926:168:5",
															"nodeType": "YulBlock",
															"src": "3926:168:5",
															"statements": [
																{
																	"nativeSrc": "3965:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3965:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3995:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "3995:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4002:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4002:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3991:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "3991:3:5"
																				},
																				"nativeSrc": "3991:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "3991:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3985:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "3985:5:5"
																		},
																		"nativeSrc": "3985:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3985:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3969:12:5",
																			"nodeType": "YulTypedName",
																			"src": "3969:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4055:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4055:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4073:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4073:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4078:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4078:4:5",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4069:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4069:3:5"
																				},
																				"nativeSrc": "4069:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4069:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4021:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4021:33:5"
																		},
																		"nativeSrc": "4021:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4021:63:5"
																	},
																	"nativeSrc": "4021:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4021:63:5"
																}
															]
														},
														{
															"nativeSrc": "4104:161:5",
															"nodeType": "YulBlock",
															"src": "4104:161:5",
															"statements": [
																{
																	"nativeSrc": "4138:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4138:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4168:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4168:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4175:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4175:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4164:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4164:3:5"
																				},
																				"nativeSrc": "4164:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4164:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4158:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4158:5:5"
																		},
																		"nativeSrc": "4158:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4158:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4142:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4142:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4226:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4226:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4244:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4244:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4249:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4249:4:5",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4240:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4240:3:5"
																				},
																				"nativeSrc": "4240:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4240:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nativeSrc": "4194:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "4194:31:5"
																		},
																		"nativeSrc": "4194:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4194:61:5"
																	},
																	"nativeSrc": "4194:61:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4194:61:5"
																}
															]
														},
														{
															"nativeSrc": "4275:169:5",
															"nodeType": "YulBlock",
															"src": "4275:169:5",
															"statements": [
																{
																	"nativeSrc": "4315:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4315:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4345:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4345:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4352:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4352:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4341:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4341:3:5"
																				},
																				"nativeSrc": "4341:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4341:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4335:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4335:5:5"
																		},
																		"nativeSrc": "4335:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4335:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4319:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4319:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4405:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4405:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4423:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4423:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4428:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4428:4:5",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4419:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:5"
																				},
																				"nativeSrc": "4419:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4419:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4371:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4371:33:5"
																		},
																		"nativeSrc": "4371:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4371:63:5"
																	},
																	"nativeSrc": "4371:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4371:63:5"
																}
															]
														},
														{
															"nativeSrc": "4454:168:5",
															"nodeType": "YulBlock",
															"src": "4454:168:5",
															"statements": [
																{
																	"nativeSrc": "4493:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4493:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4523:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4523:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4530:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4530:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4519:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4519:3:5"
																				},
																				"nativeSrc": "4519:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4519:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4513:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4513:5:5"
																		},
																		"nativeSrc": "4513:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4513:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4497:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4497:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4583:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4583:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4601:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4601:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4606:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4606:4:5",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4597:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4597:3:5"
																				},
																				"nativeSrc": "4597:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4597:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4549:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4549:33:5"
																		},
																		"nativeSrc": "4549:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4549:63:5"
																	},
																	"nativeSrc": "4549:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4549:63:5"
																}
															]
														},
														{
															"nativeSrc": "4632:176:5",
															"nodeType": "YulBlock",
															"src": "4632:176:5",
															"statements": [
																{
																	"nativeSrc": "4679:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4679:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4709:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4709:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4716:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4716:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4705:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4705:3:5"
																				},
																				"nativeSrc": "4705:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4705:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4699:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4699:5:5"
																		},
																		"nativeSrc": "4699:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4699:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4683:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4683:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4769:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4769:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4787:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4787:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4792:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4792:4:5",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4783:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4783:3:5"
																				},
																				"nativeSrc": "4783:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4783:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4735:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4735:33:5"
																		},
																		"nativeSrc": "4735:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4735:63:5"
																	},
																	"nativeSrc": "4735:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4735:63:5"
																}
															]
														},
														{
															"nativeSrc": "4818:177:5",
															"nodeType": "YulBlock",
															"src": "4818:177:5",
															"statements": [
																{
																	"nativeSrc": "4866:43:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4866:43:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4896:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "4896:5:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4903:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4903:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4892:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4892:3:5"
																				},
																				"nativeSrc": "4892:16:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4892:16:5"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4886:5:5",
																			"nodeType": "YulIdentifier",
																			"src": "4886:5:5"
																		},
																		"nativeSrc": "4886:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4886:23:5"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4870:12:5",
																			"nodeType": "YulTypedName",
																			"src": "4870:12:5",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4956:12:5",
																				"nodeType": "YulIdentifier",
																				"src": "4956:12:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4974:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4974:3:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4979:4:5",
																						"nodeType": "YulLiteral",
																						"src": "4979:4:5",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4970:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "4970:3:5"
																				},
																				"nativeSrc": "4970:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "4970:14:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint160_to_t_uint160",
																			"nativeSrc": "4922:33:5",
																			"nodeType": "YulIdentifier",
																			"src": "4922:33:5"
																		},
																		"nativeSrc": "4922:63:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4922:63:5"
																	},
																	"nativeSrc": "4922:63:5",
																	"nodeType": "YulExpressionStatement",
																	"src": "4922:63:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack",
												"nativeSrc": "3559:1443:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3690:5:5",
														"nodeType": "YulTypedName",
														"src": "3690:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3697:3:5",
														"nodeType": "YulTypedName",
														"src": "3697:3:5",
														"type": ""
													}
												],
												"src": "3559:1443:5"
											},
											{
												"body": {
													"nativeSrc": "5184:203:5",
													"nodeType": "YulBlock",
													"src": "5184:203:5",
													"statements": [
														{
															"nativeSrc": "5194:27:5",
															"nodeType": "YulAssignment",
															"src": "5194:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5206:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5206:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5217:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5217:3:5",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5202:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5202:3:5"
																},
																"nativeSrc": "5202:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5202:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5194:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5194:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5353:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5353:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5366:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5366:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5377:1:5",
																				"nodeType": "YulLiteral",
																				"src": "5377:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5362:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5362:3:5"
																		},
																		"nativeSrc": "5362:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5362:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack",
																	"nativeSrc": "5231:121:5",
																	"nodeType": "YulIdentifier",
																	"src": "5231:121:5"
																},
																"nativeSrc": "5231:149:5",
																"nodeType": "YulFunctionCall",
																"src": "5231:149:5"
															},
															"nativeSrc": "5231:149:5",
															"nodeType": "YulExpressionStatement",
															"src": "5231:149:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed",
												"nativeSrc": "5008:379:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5156:9:5",
														"nodeType": "YulTypedName",
														"src": "5156:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5168:6:5",
														"nodeType": "YulTypedName",
														"src": "5168:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5179:4:5",
														"nodeType": "YulTypedName",
														"src": "5179:4:5",
														"type": ""
													}
												],
												"src": "5008:379:5"
											},
											{
												"body": {
													"nativeSrc": "5456:80:5",
													"nodeType": "YulBlock",
													"src": "5456:80:5",
													"statements": [
														{
															"nativeSrc": "5466:22:5",
															"nodeType": "YulAssignment",
															"src": "5466:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5481:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "5481:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5475:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5475:5:5"
																},
																"nativeSrc": "5475:13:5",
																"nodeType": "YulFunctionCall",
																"src": "5475:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5466:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "5466:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5524:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "5524:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5497:26:5",
																	"nodeType": "YulIdentifier",
																	"src": "5497:26:5"
																},
																"nativeSrc": "5497:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5497:33:5"
															},
															"nativeSrc": "5497:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5497:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "5393:143:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5434:6:5",
														"nodeType": "YulTypedName",
														"src": "5434:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5442:3:5",
														"nodeType": "YulTypedName",
														"src": "5442:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5450:5:5",
														"nodeType": "YulTypedName",
														"src": "5450:5:5",
														"type": ""
													}
												],
												"src": "5393:143:5"
											},
											{
												"body": {
													"nativeSrc": "5619:274:5",
													"nodeType": "YulBlock",
													"src": "5619:274:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "5665:83:5",
																"nodeType": "YulBlock",
																"src": "5665:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5667:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "5667:77:5"
																			},
																			"nativeSrc": "5667:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "5667:79:5"
																		},
																		"nativeSrc": "5667:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "5667:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5640:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5640:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5649:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5649:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5636:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5636:3:5"
																		},
																		"nativeSrc": "5636:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5636:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5661:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5661:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5632:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5632:3:5"
																},
																"nativeSrc": "5632:32:5",
																"nodeType": "YulFunctionCall",
																"src": "5632:32:5"
															},
															"nativeSrc": "5629:119:5",
															"nodeType": "YulIf",
															"src": "5629:119:5"
														},
														{
															"nativeSrc": "5758:128:5",
															"nodeType": "YulBlock",
															"src": "5758:128:5",
															"statements": [
																{
																	"nativeSrc": "5773:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5773:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5787:1:5",
																		"nodeType": "YulLiteral",
																		"src": "5787:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5777:6:5",
																			"nodeType": "YulTypedName",
																			"src": "5777:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5802:74:5",
																	"nodeType": "YulAssignment",
																	"src": "5802:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5848:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "5848:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5859:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "5859:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5844:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "5844:3:5"
																				},
																				"nativeSrc": "5844:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "5844:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5868:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "5868:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "5812:31:5",
																			"nodeType": "YulIdentifier",
																			"src": "5812:31:5"
																		},
																		"nativeSrc": "5812:64:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5812:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5802:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "5802:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5542:351:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5589:9:5",
														"nodeType": "YulTypedName",
														"src": "5589:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5600:7:5",
														"nodeType": "YulTypedName",
														"src": "5600:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5612:6:5",
														"nodeType": "YulTypedName",
														"src": "5612:6:5",
														"type": ""
													}
												],
												"src": "5542:351:5"
											},
											{
												"body": {
													"nativeSrc": "6053:288:5",
													"nodeType": "YulBlock",
													"src": "6053:288:5",
													"statements": [
														{
															"nativeSrc": "6063:26:5",
															"nodeType": "YulAssignment",
															"src": "6063:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6075:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "6075:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6086:2:5",
																		"nodeType": "YulLiteral",
																		"src": "6086:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6071:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "6071:3:5"
																},
																"nativeSrc": "6071:18:5",
																"nodeType": "YulFunctionCall",
																"src": "6071:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6063:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "6063:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6143:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6143:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6156:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6156:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6167:1:5",
																				"nodeType": "YulLiteral",
																				"src": "6167:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6152:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6152:3:5"
																		},
																		"nativeSrc": "6152:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6152:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6099:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6099:43:5"
																},
																"nativeSrc": "6099:71:5",
																"nodeType": "YulFunctionCall",
																"src": "6099:71:5"
															},
															"nativeSrc": "6099:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "6099:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6224:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6224:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6237:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6237:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6248:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6248:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6233:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6233:3:5"
																		},
																		"nativeSrc": "6233:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6233:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6180:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6180:43:5"
																},
																"nativeSrc": "6180:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6180:72:5"
															},
															"nativeSrc": "6180:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6180:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6306:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6306:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6319:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "6319:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6330:2:5",
																				"nodeType": "YulLiteral",
																				"src": "6330:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6315:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6315:3:5"
																		},
																		"nativeSrc": "6315:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6315:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6262:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "6262:43:5"
																},
																"nativeSrc": "6262:72:5",
																"nodeType": "YulFunctionCall",
																"src": "6262:72:5"
															},
															"nativeSrc": "6262:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "6262:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "5899:442:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6009:9:5",
														"nodeType": "YulTypedName",
														"src": "6009:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6021:6:5",
														"nodeType": "YulTypedName",
														"src": "6021:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6029:6:5",
														"nodeType": "YulTypedName",
														"src": "6029:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6037:6:5",
														"nodeType": "YulTypedName",
														"src": "6037:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6048:4:5",
														"nodeType": "YulTypedName",
														"src": "6048:4:5",
														"type": ""
													}
												],
												"src": "5899:442:5"
											},
											{
												"body": {
													"nativeSrc": "6405:40:5",
													"nodeType": "YulBlock",
													"src": "6405:40:5",
													"statements": [
														{
															"nativeSrc": "6416:22:5",
															"nodeType": "YulAssignment",
															"src": "6416:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6432:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "6432:5:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6426:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "6426:5:5"
																},
																"nativeSrc": "6426:12:5",
																"nodeType": "YulFunctionCall",
																"src": "6426:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "6416:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6416:6:5"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "6347:98:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6388:5:5",
														"nodeType": "YulTypedName",
														"src": "6388:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "6398:6:5",
														"nodeType": "YulTypedName",
														"src": "6398:6:5",
														"type": ""
													}
												],
												"src": "6347:98:5"
											},
											{
												"body": {
													"nativeSrc": "6564:34:5",
													"nodeType": "YulBlock",
													"src": "6564:34:5",
													"statements": [
														{
															"nativeSrc": "6574:18:5",
															"nodeType": "YulAssignment",
															"src": "6574:18:5",
															"value": {
																"name": "pos",
																"nativeSrc": "6589:3:5",
																"nodeType": "YulIdentifier",
																"src": "6589:3:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "6574:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "6574:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6451:147:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "6536:3:5",
														"nodeType": "YulTypedName",
														"src": "6536:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6541:6:5",
														"nodeType": "YulTypedName",
														"src": "6541:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "6552:11:5",
														"nodeType": "YulTypedName",
														"src": "6552:11:5",
														"type": ""
													}
												],
												"src": "6451:147:5"
											},
											{
												"body": {
													"nativeSrc": "6666:184:5",
													"nodeType": "YulBlock",
													"src": "6666:184:5",
													"statements": [
														{
															"nativeSrc": "6676:10:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6676:10:5",
															"value": {
																"kind": "number",
																"nativeSrc": "6685:1:5",
																"nodeType": "YulLiteral",
																"src": "6685:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "6680:1:5",
																	"nodeType": "YulTypedName",
																	"src": "6680:1:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6745:63:5",
																"nodeType": "YulBlock",
																"src": "6745:63:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "6770:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "6770:3:5"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "6775:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "6775:1:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6766:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6766:3:5"
																					},
																					"nativeSrc": "6766:11:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6766:11:5"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "6789:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "6789:3:5"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "6794:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "6794:1:5"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6785:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "6785:3:5"
																							},
																							"nativeSrc": "6785:11:5",
																							"nodeType": "YulFunctionCall",
																							"src": "6785:11:5"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "6779:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "6779:5:5"
																					},
																					"nativeSrc": "6779:18:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6779:18:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6759:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6759:6:5"
																			},
																			"nativeSrc": "6759:39:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6759:39:5"
																		},
																		"nativeSrc": "6759:39:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6759:39:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "6706:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "6706:1:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6709:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "6709:6:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6703:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "6703:2:5"
																},
																"nativeSrc": "6703:13:5",
																"nodeType": "YulFunctionCall",
																"src": "6703:13:5"
															},
															"nativeSrc": "6695:113:5",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6717:19:5",
																"nodeType": "YulBlock",
																"src": "6717:19:5",
																"statements": [
																	{
																		"nativeSrc": "6719:15:5",
																		"nodeType": "YulAssignment",
																		"src": "6719:15:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "6728:1:5",
																					"nodeType": "YulIdentifier",
																					"src": "6728:1:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6731:2:5",
																					"nodeType": "YulLiteral",
																					"src": "6731:2:5",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6724:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6724:3:5"
																			},
																			"nativeSrc": "6724:10:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6724:10:5"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "6719:1:5",
																				"nodeType": "YulIdentifier",
																				"src": "6719:1:5"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6699:3:5",
																"nodeType": "YulBlock",
																"src": "6699:3:5",
																"statements": []
															},
															"src": "6695:113:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6828:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "6828:3:5"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6833:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6833:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6824:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "6824:3:5"
																		},
																		"nativeSrc": "6824:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "6824:16:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6842:1:5",
																		"nodeType": "YulLiteral",
																		"src": "6842:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6817:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "6817:6:5"
																},
																"nativeSrc": "6817:27:5",
																"nodeType": "YulFunctionCall",
																"src": "6817:27:5"
															},
															"nativeSrc": "6817:27:5",
															"nodeType": "YulExpressionStatement",
															"src": "6817:27:5"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "6604:246:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6648:3:5",
														"nodeType": "YulTypedName",
														"src": "6648:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "6653:3:5",
														"nodeType": "YulTypedName",
														"src": "6653:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6658:6:5",
														"nodeType": "YulTypedName",
														"src": "6658:6:5",
														"type": ""
													}
												],
												"src": "6604:246:5"
											},
											{
												"body": {
													"nativeSrc": "6964:278:5",
													"nodeType": "YulBlock",
													"src": "6964:278:5",
													"statements": [
														{
															"nativeSrc": "6974:52:5",
															"nodeType": "YulVariableDeclaration",
															"src": "6974:52:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7020:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7020:5:5"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "6988:31:5",
																	"nodeType": "YulIdentifier",
																	"src": "6988:31:5"
																},
																"nativeSrc": "6988:38:5",
																"nodeType": "YulFunctionCall",
																"src": "6988:38:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6978:6:5",
																	"nodeType": "YulTypedName",
																	"src": "6978:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7035:95:5",
															"nodeType": "YulAssignment",
															"src": "7035:95:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7118:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7118:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7123:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7123:6:5"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7042:75:5",
																	"nodeType": "YulIdentifier",
																	"src": "7042:75:5"
																},
																"nativeSrc": "7042:88:5",
																"nodeType": "YulFunctionCall",
																"src": "7042:88:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7035:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7035:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7178:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7178:5:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7185:4:5",
																				"nodeType": "YulLiteral",
																				"src": "7185:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7174:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7174:3:5"
																		},
																		"nativeSrc": "7174:16:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7174:16:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7192:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7192:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7197:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7197:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7139:34:5",
																	"nodeType": "YulIdentifier",
																	"src": "7139:34:5"
																},
																"nativeSrc": "7139:65:5",
																"nodeType": "YulFunctionCall",
																"src": "7139:65:5"
															},
															"nativeSrc": "7139:65:5",
															"nodeType": "YulExpressionStatement",
															"src": "7139:65:5"
														},
														{
															"nativeSrc": "7213:23:5",
															"nodeType": "YulAssignment",
															"src": "7213:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7224:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7224:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7229:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7229:6:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7220:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7220:3:5"
																},
																"nativeSrc": "7220:16:5",
																"nodeType": "YulFunctionCall",
																"src": "7220:16:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7213:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7213:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "6856:386:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6945:5:5",
														"nodeType": "YulTypedName",
														"src": "6945:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6952:3:5",
														"nodeType": "YulTypedName",
														"src": "6952:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "6960:3:5",
														"nodeType": "YulTypedName",
														"src": "6960:3:5",
														"type": ""
													}
												],
												"src": "6856:386:5"
											},
											{
												"body": {
													"nativeSrc": "7382:137:5",
													"nodeType": "YulBlock",
													"src": "7382:137:5",
													"statements": [
														{
															"nativeSrc": "7393:100:5",
															"nodeType": "YulAssignment",
															"src": "7393:100:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7480:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7480:6:5"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7489:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "7489:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "7400:79:5",
																	"nodeType": "YulIdentifier",
																	"src": "7400:79:5"
																},
																"nativeSrc": "7400:93:5",
																"nodeType": "YulFunctionCall",
																"src": "7400:93:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7393:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7393:3:5"
																}
															]
														},
														{
															"nativeSrc": "7503:10:5",
															"nodeType": "YulAssignment",
															"src": "7503:10:5",
															"value": {
																"name": "pos",
																"nativeSrc": "7510:3:5",
																"nodeType": "YulIdentifier",
																"src": "7510:3:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7503:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7503:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "7248:271:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7361:3:5",
														"nodeType": "YulTypedName",
														"src": "7361:3:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7367:6:5",
														"nodeType": "YulTypedName",
														"src": "7367:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7378:3:5",
														"nodeType": "YulTypedName",
														"src": "7378:3:5",
														"type": ""
													}
												],
												"src": "7248:271:5"
											},
											{
												"body": {
													"nativeSrc": "7567:48:5",
													"nodeType": "YulBlock",
													"src": "7567:48:5",
													"statements": [
														{
															"nativeSrc": "7577:32:5",
															"nodeType": "YulAssignment",
															"src": "7577:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7602:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7602:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7595:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "7595:6:5"
																		},
																		"nativeSrc": "7595:13:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7595:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7588:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7588:6:5"
																},
																"nativeSrc": "7588:21:5",
																"nodeType": "YulFunctionCall",
																"src": "7588:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7577:7:5",
																	"nodeType": "YulIdentifier",
																	"src": "7577:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "7525:90:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7549:5:5",
														"nodeType": "YulTypedName",
														"src": "7549:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7559:7:5",
														"nodeType": "YulTypedName",
														"src": "7559:7:5",
														"type": ""
													}
												],
												"src": "7525:90:5"
											},
											{
												"body": {
													"nativeSrc": "7661:76:5",
													"nodeType": "YulBlock",
													"src": "7661:76:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "7715:16:5",
																"nodeType": "YulBlock",
																"src": "7715:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7724:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7724:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "7727:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7717:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "7717:6:5"
																			},
																			"nativeSrc": "7717:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "7717:12:5"
																		},
																		"nativeSrc": "7717:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "7717:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7684:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "7684:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7706:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "7706:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7691:14:5",
																					"nodeType": "YulIdentifier",
																					"src": "7691:14:5"
																				},
																				"nativeSrc": "7691:21:5",
																				"nodeType": "YulFunctionCall",
																				"src": "7691:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7681:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "7681:2:5"
																		},
																		"nativeSrc": "7681:32:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7681:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7674:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "7674:6:5"
																},
																"nativeSrc": "7674:40:5",
																"nodeType": "YulFunctionCall",
																"src": "7674:40:5"
															},
															"nativeSrc": "7671:60:5",
															"nodeType": "YulIf",
															"src": "7671:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7621:116:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7654:5:5",
														"nodeType": "YulTypedName",
														"src": "7654:5:5",
														"type": ""
													}
												],
												"src": "7621:116:5"
											},
											{
												"body": {
													"nativeSrc": "7803:77:5",
													"nodeType": "YulBlock",
													"src": "7803:77:5",
													"statements": [
														{
															"nativeSrc": "7813:22:5",
															"nodeType": "YulAssignment",
															"src": "7813:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7828:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "7828:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7822:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7822:5:5"
																},
																"nativeSrc": "7822:13:5",
																"nodeType": "YulFunctionCall",
																"src": "7822:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7813:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "7813:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7868:5:5",
																		"nodeType": "YulIdentifier",
																		"src": "7868:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7844:23:5",
																	"nodeType": "YulIdentifier",
																	"src": "7844:23:5"
																},
																"nativeSrc": "7844:30:5",
																"nodeType": "YulFunctionCall",
																"src": "7844:30:5"
															},
															"nativeSrc": "7844:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "7844:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7743:137:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7781:6:5",
														"nodeType": "YulTypedName",
														"src": "7781:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7789:3:5",
														"nodeType": "YulTypedName",
														"src": "7789:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7797:5:5",
														"nodeType": "YulTypedName",
														"src": "7797:5:5",
														"type": ""
													}
												],
												"src": "7743:137:5"
											},
											{
												"body": {
													"nativeSrc": "7960:271:5",
													"nodeType": "YulBlock",
													"src": "7960:271:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "8006:83:5",
																"nodeType": "YulBlock",
																"src": "8006:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8008:77:5",
																				"nodeType": "YulIdentifier",
																				"src": "8008:77:5"
																			},
																			"nativeSrc": "8008:79:5",
																			"nodeType": "YulFunctionCall",
																			"src": "8008:79:5"
																		},
																		"nativeSrc": "8008:79:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "8008:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7981:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "7981:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7990:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "7990:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7977:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "7977:3:5"
																		},
																		"nativeSrc": "7977:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "7977:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8002:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7973:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "7973:3:5"
																},
																"nativeSrc": "7973:32:5",
																"nodeType": "YulFunctionCall",
																"src": "7973:32:5"
															},
															"nativeSrc": "7970:119:5",
															"nodeType": "YulIf",
															"src": "7970:119:5"
														},
														{
															"nativeSrc": "8099:125:5",
															"nodeType": "YulBlock",
															"src": "8099:125:5",
															"statements": [
																{
																	"nativeSrc": "8114:15:5",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8114:15:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8128:1:5",
																		"nodeType": "YulLiteral",
																		"src": "8128:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8118:6:5",
																			"nodeType": "YulTypedName",
																			"src": "8118:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8143:71:5",
																	"nodeType": "YulAssignment",
																	"src": "8143:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8186:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "8186:9:5"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8197:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "8197:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8182:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "8182:3:5"
																				},
																				"nativeSrc": "8182:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "8182:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8206:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "8206:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "8153:28:5",
																			"nodeType": "YulIdentifier",
																			"src": "8153:28:5"
																		},
																		"nativeSrc": "8153:61:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8153:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8143:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "8143:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7886:345:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7930:9:5",
														"nodeType": "YulTypedName",
														"src": "7930:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7941:7:5",
														"nodeType": "YulTypedName",
														"src": "7941:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7953:6:5",
														"nodeType": "YulTypedName",
														"src": "7953:6:5",
														"type": ""
													}
												],
												"src": "7886:345:5"
											},
											{
												"body": {
													"nativeSrc": "8333:73:5",
													"nodeType": "YulBlock",
													"src": "8333:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8350:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8350:3:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8355:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "8355:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8343:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8343:6:5"
																},
																"nativeSrc": "8343:19:5",
																"nodeType": "YulFunctionCall",
																"src": "8343:19:5"
															},
															"nativeSrc": "8343:19:5",
															"nodeType": "YulExpressionStatement",
															"src": "8343:19:5"
														},
														{
															"nativeSrc": "8371:29:5",
															"nodeType": "YulAssignment",
															"src": "8371:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8390:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8390:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8395:4:5",
																		"nodeType": "YulLiteral",
																		"src": "8395:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8386:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8386:3:5"
																},
																"nativeSrc": "8386:14:5",
																"nodeType": "YulFunctionCall",
																"src": "8386:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8371:11:5",
																	"nodeType": "YulIdentifier",
																	"src": "8371:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "8237:169:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8305:3:5",
														"nodeType": "YulTypedName",
														"src": "8305:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8310:6:5",
														"nodeType": "YulTypedName",
														"src": "8310:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8321:11:5",
														"nodeType": "YulTypedName",
														"src": "8321:11:5",
														"type": ""
													}
												],
												"src": "8237:169:5"
											},
											{
												"body": {
													"nativeSrc": "8518:130:5",
													"nodeType": "YulBlock",
													"src": "8518:130:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8540:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8540:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8548:1:5",
																				"nodeType": "YulLiteral",
																				"src": "8548:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8536:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8536:3:5"
																		},
																		"nativeSrc": "8536:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8536:14:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472",
																		"kind": "string",
																		"nativeSrc": "8552:34:5",
																		"nodeType": "YulLiteral",
																		"src": "8552:34:5",
																		"type": "",
																		"value": "TransferHelper::transferFrom: tr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8529:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8529:6:5"
																},
																"nativeSrc": "8529:58:5",
																"nodeType": "YulFunctionCall",
																"src": "8529:58:5"
															},
															"nativeSrc": "8529:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "8529:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8608:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "8608:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8616:2:5",
																				"nodeType": "YulLiteral",
																				"src": "8616:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8604:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "8604:3:5"
																		},
																		"nativeSrc": "8604:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "8604:15:5"
																	},
																	{
																		"hexValue": "616e7366657246726f6d206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8621:19:5",
																		"nodeType": "YulLiteral",
																		"src": "8621:19:5",
																		"type": "",
																		"value": "ansferFrom failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8597:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "8597:6:5"
																},
																"nativeSrc": "8597:44:5",
																"nodeType": "YulFunctionCall",
																"src": "8597:44:5"
															},
															"nativeSrc": "8597:44:5",
															"nodeType": "YulExpressionStatement",
															"src": "8597:44:5"
														}
													]
												},
												"name": "store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
												"nativeSrc": "8412:236:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8510:6:5",
														"nodeType": "YulTypedName",
														"src": "8510:6:5",
														"type": ""
													}
												],
												"src": "8412:236:5"
											},
											{
												"body": {
													"nativeSrc": "8800:220:5",
													"nodeType": "YulBlock",
													"src": "8800:220:5",
													"statements": [
														{
															"nativeSrc": "8810:74:5",
															"nodeType": "YulAssignment",
															"src": "8810:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8876:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8876:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8881:2:5",
																		"nodeType": "YulLiteral",
																		"src": "8881:2:5",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8817:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "8817:58:5"
																},
																"nativeSrc": "8817:67:5",
																"nodeType": "YulFunctionCall",
																"src": "8817:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8810:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8810:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8982:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "8982:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																	"nativeSrc": "8893:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "8893:88:5"
																},
																"nativeSrc": "8893:93:5",
																"nodeType": "YulFunctionCall",
																"src": "8893:93:5"
															},
															"nativeSrc": "8893:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "8893:93:5"
														},
														{
															"nativeSrc": "8995:19:5",
															"nodeType": "YulAssignment",
															"src": "8995:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9006:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "9006:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9011:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9011:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9002:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9002:3:5"
																},
																"nativeSrc": "9002:12:5",
																"nodeType": "YulFunctionCall",
																"src": "9002:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8995:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "8995:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8654:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8788:3:5",
														"nodeType": "YulTypedName",
														"src": "8788:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8796:3:5",
														"nodeType": "YulTypedName",
														"src": "8796:3:5",
														"type": ""
													}
												],
												"src": "8654:366:5"
											},
											{
												"body": {
													"nativeSrc": "9197:248:5",
													"nodeType": "YulBlock",
													"src": "9197:248:5",
													"statements": [
														{
															"nativeSrc": "9207:26:5",
															"nodeType": "YulAssignment",
															"src": "9207:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9219:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9219:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9230:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9230:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9215:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9215:3:5"
																},
																"nativeSrc": "9215:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9215:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9207:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9207:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9254:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9254:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9265:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9265:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9250:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9250:3:5"
																		},
																		"nativeSrc": "9250:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9250:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9273:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "9273:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9279:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9279:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9269:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9269:3:5"
																		},
																		"nativeSrc": "9269:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9269:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9243:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:5"
																},
																"nativeSrc": "9243:47:5",
																"nodeType": "YulFunctionCall",
																"src": "9243:47:5"
															},
															"nativeSrc": "9243:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "9243:47:5"
														},
														{
															"nativeSrc": "9299:139:5",
															"nodeType": "YulAssignment",
															"src": "9299:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9433:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "9433:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9307:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "9307:124:5"
																},
																"nativeSrc": "9307:131:5",
																"nodeType": "YulFunctionCall",
																"src": "9307:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9299:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9299:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9026:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9177:9:5",
														"nodeType": "YulTypedName",
														"src": "9177:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9192:4:5",
														"nodeType": "YulTypedName",
														"src": "9192:4:5",
														"type": ""
													}
												],
												"src": "9026:419:5"
											},
											{
												"body": {
													"nativeSrc": "9577:206:5",
													"nodeType": "YulBlock",
													"src": "9577:206:5",
													"statements": [
														{
															"nativeSrc": "9587:26:5",
															"nodeType": "YulAssignment",
															"src": "9587:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9599:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "9599:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9610:2:5",
																		"nodeType": "YulLiteral",
																		"src": "9610:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9595:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "9595:3:5"
																},
																"nativeSrc": "9595:18:5",
																"nodeType": "YulFunctionCall",
																"src": "9595:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9587:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "9587:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9667:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9667:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9680:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9680:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9691:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9691:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9676:3:5"
																		},
																		"nativeSrc": "9676:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9676:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9623:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9623:43:5"
																},
																"nativeSrc": "9623:71:5",
																"nodeType": "YulFunctionCall",
																"src": "9623:71:5"
															},
															"nativeSrc": "9623:71:5",
															"nodeType": "YulExpressionStatement",
															"src": "9623:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9748:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "9748:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9761:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "9761:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9772:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9772:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9757:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:5"
																		},
																		"nativeSrc": "9757:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9757:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9704:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "9704:43:5"
																},
																"nativeSrc": "9704:72:5",
																"nodeType": "YulFunctionCall",
																"src": "9704:72:5"
															},
															"nativeSrc": "9704:72:5",
															"nodeType": "YulExpressionStatement",
															"src": "9704:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9451:332:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9541:9:5",
														"nodeType": "YulTypedName",
														"src": "9541:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9553:6:5",
														"nodeType": "YulTypedName",
														"src": "9553:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9561:6:5",
														"nodeType": "YulTypedName",
														"src": "9561:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9572:4:5",
														"nodeType": "YulTypedName",
														"src": "9572:4:5",
														"type": ""
													}
												],
												"src": "9451:332:5"
											},
											{
												"body": {
													"nativeSrc": "9895:124:5",
													"nodeType": "YulBlock",
													"src": "9895:124:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9917:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9917:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9925:1:5",
																				"nodeType": "YulLiteral",
																				"src": "9925:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9913:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9913:3:5"
																		},
																		"nativeSrc": "9913:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9913:14:5"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070",
																		"kind": "string",
																		"nativeSrc": "9929:34:5",
																		"nodeType": "YulLiteral",
																		"src": "9929:34:5",
																		"type": "",
																		"value": "TransferHelper::safeApprove: app"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9906:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9906:6:5"
																},
																"nativeSrc": "9906:58:5",
																"nodeType": "YulFunctionCall",
																"src": "9906:58:5"
															},
															"nativeSrc": "9906:58:5",
															"nodeType": "YulExpressionStatement",
															"src": "9906:58:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9985:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "9985:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9993:2:5",
																				"nodeType": "YulLiteral",
																				"src": "9993:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9981:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "9981:3:5"
																		},
																		"nativeSrc": "9981:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "9981:15:5"
																	},
																	{
																		"hexValue": "726f7665206661696c6564",
																		"kind": "string",
																		"nativeSrc": "9998:13:5",
																		"nodeType": "YulLiteral",
																		"src": "9998:13:5",
																		"type": "",
																		"value": "rove failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9974:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "9974:6:5"
																},
																"nativeSrc": "9974:38:5",
																"nodeType": "YulFunctionCall",
																"src": "9974:38:5"
															},
															"nativeSrc": "9974:38:5",
															"nodeType": "YulExpressionStatement",
															"src": "9974:38:5"
														}
													]
												},
												"name": "store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
												"nativeSrc": "9789:230:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9887:6:5",
														"nodeType": "YulTypedName",
														"src": "9887:6:5",
														"type": ""
													}
												],
												"src": "9789:230:5"
											},
											{
												"body": {
													"nativeSrc": "10171:220:5",
													"nodeType": "YulBlock",
													"src": "10171:220:5",
													"statements": [
														{
															"nativeSrc": "10181:74:5",
															"nodeType": "YulAssignment",
															"src": "10181:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10247:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10247:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10252:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10252:2:5",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10188:58:5",
																	"nodeType": "YulIdentifier",
																	"src": "10188:58:5"
																},
																"nativeSrc": "10188:67:5",
																"nodeType": "YulFunctionCall",
																"src": "10188:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10181:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10181:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10353:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10353:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																	"nativeSrc": "10264:88:5",
																	"nodeType": "YulIdentifier",
																	"src": "10264:88:5"
																},
																"nativeSrc": "10264:93:5",
																"nodeType": "YulFunctionCall",
																"src": "10264:93:5"
															},
															"nativeSrc": "10264:93:5",
															"nodeType": "YulExpressionStatement",
															"src": "10264:93:5"
														},
														{
															"nativeSrc": "10366:19:5",
															"nodeType": "YulAssignment",
															"src": "10366:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10377:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "10377:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10382:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10382:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10373:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10373:3:5"
																},
																"nativeSrc": "10373:12:5",
																"nodeType": "YulFunctionCall",
																"src": "10373:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10366:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10366:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10025:366:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10159:3:5",
														"nodeType": "YulTypedName",
														"src": "10159:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10167:3:5",
														"nodeType": "YulTypedName",
														"src": "10167:3:5",
														"type": ""
													}
												],
												"src": "10025:366:5"
											},
											{
												"body": {
													"nativeSrc": "10568:248:5",
													"nodeType": "YulBlock",
													"src": "10568:248:5",
													"statements": [
														{
															"nativeSrc": "10578:26:5",
															"nodeType": "YulAssignment",
															"src": "10578:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10590:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "10590:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10601:2:5",
																		"nodeType": "YulLiteral",
																		"src": "10601:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10586:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "10586:3:5"
																},
																"nativeSrc": "10586:18:5",
																"nodeType": "YulFunctionCall",
																"src": "10586:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10578:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10578:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10625:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10625:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10636:1:5",
																				"nodeType": "YulLiteral",
																				"src": "10636:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10621:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10621:3:5"
																		},
																		"nativeSrc": "10621:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10621:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10644:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "10644:4:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10650:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "10650:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10640:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "10640:3:5"
																		},
																		"nativeSrc": "10640:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "10640:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10614:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "10614:6:5"
																},
																"nativeSrc": "10614:47:5",
																"nodeType": "YulFunctionCall",
																"src": "10614:47:5"
															},
															"nativeSrc": "10614:47:5",
															"nodeType": "YulExpressionStatement",
															"src": "10614:47:5"
														},
														{
															"nativeSrc": "10670:139:5",
															"nodeType": "YulAssignment",
															"src": "10670:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10804:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "10804:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10678:124:5",
																	"nodeType": "YulIdentifier",
																	"src": "10678:124:5"
																},
																"nativeSrc": "10678:131:5",
																"nodeType": "YulFunctionCall",
																"src": "10678:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10670:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "10670:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10397:419:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10548:9:5",
														"nodeType": "YulTypedName",
														"src": "10548:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10563:4:5",
														"nodeType": "YulTypedName",
														"src": "10563:4:5",
														"type": ""
													}
												],
												"src": "10397:419:5"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IV3SwapRouter_$251_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IV3SwapRouter_$251_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IV3SwapRouter_$251__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IV3SwapRouter_$251_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    // struct IV3SwapRouter.ExactInputSingleParams -> struct IV3SwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$181_memory_ptr__to_t_struct$_ExactInputSingleParams_$181_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$181_memory_ptr_to_t_struct$_ExactInputSingleParams_$181_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::transferFrom: tr\")\n\n        mstore(add(memPtr, 32), \"ansferFrom failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 49)\n        store_literal_in_memory_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123(memPtr) {\n\n        mstore(add(memPtr, 0), \"TransferHelper::safeApprove: app\")\n\n        mstore(add(memPtr, 32), \"rove failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"391": [
									{
										"length": 32,
										"start": 258
									},
									{
										"length": 32,
										"start": 487
									},
									{
										"length": 32,
										"start": 666
									},
									{
										"length": 32,
										"start": 926
									},
									{
										"length": 32,
										"start": 1144
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c806382d2dcfb14610043578063a048600d14610061578063c31c9c0714610091575b5f80fd5b61004b6100af565b604051610058919061073c565b60405180910390f35b61007b6004803603810190610076919061078c565b6100c7565b60405161008891906107c6565b60405180910390f35b610099610476565b6040516100a6919061083a565b60405180910390f35b73d10a9ec6e827b13cf399fcc7e6424f233e99562a81565b5f6100e87364b6f44862e8800ebd63cd7f1319c8bf0bc1bb9933308561049a565b6101277364b6f44862e8800ebd63cd7f1319c8bf0bc1bb997f0000000000000000000000000000000000000000000000000000000000000000846105cd565b5f6040518060e001604052807364b6f44862e8800ebd63cd7f1319c8bf0bc1bb9973ffffffffffffffffffffffffffffffffffffffff16815260200173d10a9ec6e827b13cf399fcc7e6424f233e99562a73ffffffffffffffffffffffffffffffffffffffff1681526020016101f462ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff1681526020018481526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf836040518263ffffffff1660e01b815260040161023e9190610929565b6020604051808303815f875af115801561025a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061027e9190610956565b90506102df73d10a9ec6e827b13cf399fcc7e6424f233e99562a7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6105cd565b5f6040518060e0016040528073d10a9ec6e827b13cf399fcc7e6424f233e99562a73ffffffffffffffffffffffffffffffffffffffff1681526020017364b6f44862e8800ebd63cd7f1319c8bf0bc1bb9973ffffffffffffffffffffffffffffffffffffffff16815260200161271062ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681525090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166304e45aaf826040518263ffffffff1660e01b81526004016103f59190610929565b6020604051808303815f875af1158015610411573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104359190610956565b93507f3bb2ef743367d6bf518e353ce6f97647577a7ba1b971feecabd1bf42be1b55a38460405161046691906107c6565b60405180910390a1505050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f808573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016104cd93929190610981565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161051b9190610a22565b5f604051808303815f865af19150503d805f8114610554576040519150601f19603f3d011682016040523d82523d5f602084013e610559565b606091505b509150915081801561058657505f815114806105855750808060200190518101906105849190610a6d565b5b5b6105c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bc90610b18565b60405180910390fd5b505050505050565b5f808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b385856040516024016105fe929190610b36565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161064c9190610a22565b5f604051808303815f865af19150503d805f8114610685576040519150601f19603f3d011682016040523d82523d5f602084013e61068a565b606091505b50915091508180156106b757505f815114806106b65750808060200190518101906106b59190610a6d565b5b5b6106f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ed90610bcd565b60405180910390fd5b5050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610726826106fd565b9050919050565b6107368161071c565b82525050565b5f60208201905061074f5f83018461072d565b92915050565b5f80fd5b5f819050919050565b61076b81610759565b8114610775575f80fd5b50565b5f8135905061078681610762565b92915050565b5f602082840312156107a1576107a0610755565b5b5f6107ae84828501610778565b91505092915050565b6107c081610759565b82525050565b5f6020820190506107d95f8301846107b7565b92915050565b5f819050919050565b5f6108026107fd6107f8846106fd565b6107df565b6106fd565b9050919050565b5f610813826107e8565b9050919050565b5f61082482610809565b9050919050565b6108348161081a565b82525050565b5f60208201905061084d5f83018461082b565b92915050565b61085c8161071c565b82525050565b5f62ffffff82169050919050565b61087981610862565b82525050565b61088881610759565b82525050565b610897816106fd565b82525050565b60e082015f8201516108b15f850182610853565b5060208201516108c46020850182610853565b5060408201516108d76040850182610870565b5060608201516108ea6060850182610853565b5060808201516108fd608085018261087f565b5060a082015161091060a085018261087f565b5060c082015161092360c085018261088e565b50505050565b5f60e08201905061093c5f83018461089d565b92915050565b5f8151905061095081610762565b92915050565b5f6020828403121561096b5761096a610755565b5b5f61097884828501610942565b91505092915050565b5f6060820190506109945f83018661072d565b6109a1602083018561072d565b6109ae60408301846107b7565b949350505050565b5f81519050919050565b5f81905092915050565b5f5b838110156109e75780820151818401526020810190506109cc565b5f8484015250505050565b5f6109fc826109b6565b610a0681856109c0565b9350610a168185602086016109ca565b80840191505092915050565b5f610a2d82846109f2565b915081905092915050565b5f8115159050919050565b610a4c81610a38565b8114610a56575f80fd5b50565b5f81519050610a6781610a43565b92915050565b5f60208284031215610a8257610a81610755565b5b5f610a8f84828501610a59565b91505092915050565b5f82825260208201905092915050565b7f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a2074725f8201527f616e7366657246726f6d206661696c6564000000000000000000000000000000602082015250565b5f610b02603183610a98565b9150610b0d82610aa8565b604082019050919050565b5f6020820190508181035f830152610b2f81610af6565b9050919050565b5f604082019050610b495f83018561072d565b610b5660208301846107b7565b9392505050565b7f5472616e7366657248656c7065723a3a73616665417070726f76653a206170705f8201527f726f7665206661696c6564000000000000000000000000000000000000000000602082015250565b5f610bb7602b83610a98565b9150610bc282610b5d565b604082019050919050565b5f6020820190508181035f830152610be481610bab565b905091905056fea264697066735822122022163e382698e6d222817fa66eb713d5be46eb7d18045fd6580df0ffc59fd26264736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82D2DCFB EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0xA048600D EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x91 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x73C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x78C JUMP JUMPDEST PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x99 PUSH2 0x476 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA6 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A DUP2 JUMP JUMPDEST PUSH0 PUSH2 0xE8 PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 CALLER ADDRESS DUP6 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x127 PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 PUSH32 0x0 DUP5 PUSH2 0x5CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x25A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DF PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A PUSH32 0x0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH2 0x5CD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH20 0xD10A9EC6E827B13CF399FCC7E6424F233E99562A PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH20 0x64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4E45AAF DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x929 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x411 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x956 JUMP JUMPDEST SWAP4 POP PUSH32 0x3BB2EF743367D6BF518E353CE6F97647577A7BA1B971FEECABD1BF42BE1B55A3 DUP5 PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x7C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4CD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x981 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x51B SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x554 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x559 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x586 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x585 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x584 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5BC SWAP1 PUSH2 0xB18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x5FE SWAP3 SWAP2 SWAP1 PUSH2 0xB36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD PUSH2 0x64C SWAP2 SWAP1 PUSH2 0xA22 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x685 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x68A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x6B7 JUMPI POP PUSH0 DUP2 MLOAD EQ DUP1 PUSH2 0x6B6 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x6B5 SWAP2 SWAP1 PUSH2 0xA6D JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x6F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6ED SWAP1 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x726 DUP3 PUSH2 0x6FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x736 DUP2 PUSH2 0x71C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x74F PUSH0 DUP4 ADD DUP5 PUSH2 0x72D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0x759 JUMP JUMPDEST DUP2 EQ PUSH2 0x775 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x786 DUP2 PUSH2 0x762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x7A0 PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x7AE DUP5 DUP3 DUP6 ADD PUSH2 0x778 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C0 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x7B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x802 PUSH2 0x7FD PUSH2 0x7F8 DUP5 PUSH2 0x6FD JUMP JUMPDEST PUSH2 0x7DF JUMP JUMPDEST PUSH2 0x6FD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x813 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x824 DUP3 PUSH2 0x809 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x834 DUP2 PUSH2 0x81A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x84D PUSH0 DUP4 ADD DUP5 PUSH2 0x82B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x85C DUP2 PUSH2 0x71C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x879 DUP2 PUSH2 0x862 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x888 DUP2 PUSH2 0x759 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x897 DUP2 PUSH2 0x6FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x8B1 PUSH0 DUP6 ADD DUP3 PUSH2 0x853 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x8C4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x853 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x8D7 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x870 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x8EA PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x853 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x8FD PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x87F JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x910 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x87F JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x923 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x88E JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x93C PUSH0 DUP4 ADD DUP5 PUSH2 0x89D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x950 DUP2 PUSH2 0x762 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x96B JUMPI PUSH2 0x96A PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x978 DUP5 DUP3 DUP6 ADD PUSH2 0x942 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x994 PUSH0 DUP4 ADD DUP7 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x9A1 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0x9AE PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x7B7 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x9E7 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x9CC JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x9FC DUP3 PUSH2 0x9B6 JUMP JUMPDEST PUSH2 0xA06 DUP2 DUP6 PUSH2 0x9C0 JUMP JUMPDEST SWAP4 POP PUSH2 0xA16 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x9CA JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA2D DUP3 DUP5 PUSH2 0x9F2 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA4C DUP2 PUSH2 0xA38 JUMP JUMPDEST DUP2 EQ PUSH2 0xA56 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0xA67 DUP2 PUSH2 0xA43 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA82 JUMPI PUSH2 0xA81 PUSH2 0x755 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA8F DUP5 DUP3 DUP6 ADD PUSH2 0xA59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472 PUSH0 DUP3 ADD MSTORE PUSH32 0x616E7366657246726F6D206661696C6564000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xB02 PUSH1 0x31 DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xB0D DUP3 PUSH2 0xAA8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xB2F DUP2 PUSH2 0xAF6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB49 PUSH0 DUP4 ADD DUP6 PUSH2 0x72D JUMP JUMPDEST PUSH2 0xB56 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5472616E7366657248656C7065723A3A73616665417070726F76653A20617070 PUSH0 DUP3 ADD MSTORE PUSH32 0x726F7665206661696C6564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0xBB7 PUSH1 0x2B DUP4 PUSH2 0xA98 JUMP JUMPDEST SWAP2 POP PUSH2 0xBC2 DUP3 PUSH2 0xB5D JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xBE4 DUP2 PUSH2 0xBAB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x22 AND RETURNDATACOPY CODESIZE 0x26 SWAP9 0xE6 0xD2 0x22 DUP2 PUSH32 0xA66EB713D5BE46EB7D18045FD6580DF0FFC59FD26264736F6C63430008180033 ",
							"sourceMap": "212:1855:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:73;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;662:1403;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;538:70;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;458:73;489:42;458:73;:::o;662:1403::-;735:17;768:132;410:42;831:10;863:4;882:8;768:31;:132::i;:::-;911:63;410:42;952:10;965:8;911:26;:63::i;:::-;985:50;1038:343;;;;;;;;410:42;1038:343;;;;;;489:42;1038:343;;;;;;1174:3;1038:343;;;;;;1250:4;1038:343;;;;;;1283:8;1038:343;;;;1327:1;1038:343;;;;1365:1;1038:343;;;;;985:396;;1392:18;1413:10;:27;;;1441:6;1413:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1392:56;;1459:63;489:42;1500:10;265;1459:26;:63::i;:::-;1533:51;1587:344;;;;;;;;489:42;1587:344;;;;;;410:42;1587:344;;;;;;1723:5;1587:344;;;;;;1793:10;1587:344;;;;;;1831:10;1587:344;;;;1877:1;1587:344;;;;1915:1;1587:344;;;;;1533:398;;1954:10;:27;;;1982:7;1954:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1942:48;;2006:26;2022:9;2006:26;;;;;;:::i;:::-;;;;;;;;2042:16;;;662:1403;;;:::o;538:70::-;;;:::o;1096:486:0:-;1314:12;1328:17;1349:5;:10;;1383;1395:4;1401:2;1405:5;1360:51;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1349:63;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1313:99;;;;1443:7;:57;;;;;1470:1;1455:4;:11;:16;:44;;;;1486:4;1475:24;;;;;;;;;;;;:::i;:::-;1455:44;1443:57;1422:153;;;;;;;;;;;;:::i;:::-;;;;;;;;;1225:357;;1096:486;;;;:::o;212:434::-;390:12;404:17;425:5;:10;;459;471:2;475:5;436:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;425:57;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:93;;;;513:7;:57;;;;;540:1;525:4;:11;:16;:44;;;;556:4;545:24;;;;;;;;;;;;:::i;:::-;525:44;513:57;492:147;;;;;;;;;;;;:::i;:::-;;;;;;;;;314:332;;212:434;;;:::o;7:126:5:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:77;957:7;986:5;975:16;;920:77;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:329::-;1335:6;1384:2;1372:9;1363:7;1359:23;1355:32;1352:119;;;1390:79;;:::i;:::-;1352:119;1510:1;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1481:117;1276:329;;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:60::-;1991:3;2012:5;2005:12;;1963:60;;;:::o;2029:142::-;2079:9;2112:53;2130:34;2139:24;2157:5;2139:24;:::i;:::-;2130:34;:::i;:::-;2112:53;:::i;:::-;2099:66;;2029:142;;;:::o;2177:126::-;2227:9;2260:37;2291:5;2260:37;:::i;:::-;2247:50;;2177:126;;;:::o;2309:147::-;2380:9;2413:37;2444:5;2413:37;:::i;:::-;2400:50;;2309:147;;;:::o;2462:173::-;2570:58;2622:5;2570:58;:::i;:::-;2565:3;2558:71;2462:173;;:::o;2641:264::-;2755:4;2793:2;2782:9;2778:18;2770:26;;2806:92;2895:1;2884:9;2880:17;2871:6;2806:92;:::i;:::-;2641:264;;;;:::o;2911:108::-;2988:24;3006:5;2988:24;:::i;:::-;2983:3;2976:37;2911:108;;:::o;3025:91::-;3061:7;3101:8;3094:5;3090:20;3079:31;;3025:91;;;:::o;3122:105::-;3197:23;3214:5;3197:23;:::i;:::-;3192:3;3185:36;3122:105;;:::o;3233:108::-;3310:24;3328:5;3310:24;:::i;:::-;3305:3;3298:37;3233:108;;:::o;3347:::-;3424:24;3442:5;3424:24;:::i;:::-;3419:3;3412:37;3347:108;;:::o;3559:1443::-;3734:4;3729:3;3725:14;3824:4;3817:5;3813:16;3807:23;3843:63;3900:4;3895:3;3891:14;3877:12;3843:63;:::i;:::-;3749:167;4002:4;3995:5;3991:16;3985:23;4021:63;4078:4;4073:3;4069:14;4055:12;4021:63;:::i;:::-;3926:168;4175:4;4168:5;4164:16;4158:23;4194:61;4249:4;4244:3;4240:14;4226:12;4194:61;:::i;:::-;4104:161;4352:4;4345:5;4341:16;4335:23;4371:63;4428:4;4423:3;4419:14;4405:12;4371:63;:::i;:::-;4275:169;4530:4;4523:5;4519:16;4513:23;4549:63;4606:4;4601:3;4597:14;4583:12;4549:63;:::i;:::-;4454:168;4716:4;4709:5;4705:16;4699:23;4735:63;4792:4;4787:3;4783:14;4769:12;4735:63;:::i;:::-;4632:176;4903:4;4896:5;4892:16;4886:23;4922:63;4979:4;4974:3;4970:14;4956:12;4922:63;:::i;:::-;4818:177;3703:1299;3559:1443;;:::o;5008:379::-;5179:4;5217:3;5206:9;5202:19;5194:27;;5231:149;5377:1;5366:9;5362:17;5353:6;5231:149;:::i;:::-;5008:379;;;;:::o;5393:143::-;5450:5;5481:6;5475:13;5466:22;;5497:33;5524:5;5497:33;:::i;:::-;5393:143;;;;:::o;5542:351::-;5612:6;5661:2;5649:9;5640:7;5636:23;5632:32;5629:119;;;5667:79;;:::i;:::-;5629:119;5787:1;5812:64;5868:7;5859:6;5848:9;5844:22;5812:64;:::i;:::-;5802:74;;5758:128;5542:351;;;;:::o;5899:442::-;6048:4;6086:2;6075:9;6071:18;6063:26;;6099:71;6167:1;6156:9;6152:17;6143:6;6099:71;:::i;:::-;6180:72;6248:2;6237:9;6233:18;6224:6;6180:72;:::i;:::-;6262;6330:2;6319:9;6315:18;6306:6;6262:72;:::i;:::-;5899:442;;;;;;:::o;6347:98::-;6398:6;6432:5;6426:12;6416:22;;6347:98;;;:::o;6451:147::-;6552:11;6589:3;6574:18;;6451:147;;;;:::o;6604:246::-;6685:1;6695:113;6709:6;6706:1;6703:13;6695:113;;;6794:1;6789:3;6785:11;6779:18;6775:1;6770:3;6766:11;6759:39;6731:2;6728:1;6724:10;6719:15;;6695:113;;;6842:1;6833:6;6828:3;6824:16;6817:27;6666:184;6604:246;;;:::o;6856:386::-;6960:3;6988:38;7020:5;6988:38;:::i;:::-;7042:88;7123:6;7118:3;7042:88;:::i;:::-;7035:95;;7139:65;7197:6;7192:3;7185:4;7178:5;7174:16;7139:65;:::i;:::-;7229:6;7224:3;7220:16;7213:23;;6964:278;6856:386;;;;:::o;7248:271::-;7378:3;7400:93;7489:3;7480:6;7400:93;:::i;:::-;7393:100;;7510:3;7503:10;;7248:271;;;;:::o;7525:90::-;7559:7;7602:5;7595:13;7588:21;7577:32;;7525:90;;;:::o;7621:116::-;7691:21;7706:5;7691:21;:::i;:::-;7684:5;7681:32;7671:60;;7727:1;7724;7717:12;7671:60;7621:116;:::o;7743:137::-;7797:5;7828:6;7822:13;7813:22;;7844:30;7868:5;7844:30;:::i;:::-;7743:137;;;;:::o;7886:345::-;7953:6;8002:2;7990:9;7981:7;7977:23;7973:32;7970:119;;;8008:79;;:::i;:::-;7970:119;8128:1;8153:61;8206:7;8197:6;8186:9;8182:22;8153:61;:::i;:::-;8143:71;;8099:125;7886:345;;;;:::o;8237:169::-;8321:11;8355:6;8350:3;8343:19;8395:4;8390:3;8386:14;8371:29;;8237:169;;;;:::o;8412:236::-;8552:34;8548:1;8540:6;8536:14;8529:58;8621:19;8616:2;8608:6;8604:15;8597:44;8412:236;:::o;8654:366::-;8796:3;8817:67;8881:2;8876:3;8817:67;:::i;:::-;8810:74;;8893:93;8982:3;8893:93;:::i;:::-;9011:2;9006:3;9002:12;8995:19;;8654:366;;;:::o;9026:419::-;9192:4;9230:2;9219:9;9215:18;9207:26;;9279:9;9273:4;9269:20;9265:1;9254:9;9250:17;9243:47;9307:131;9433:4;9307:131;:::i;:::-;9299:139;;9026:419;;;:::o;9451:332::-;9572:4;9610:2;9599:9;9595:18;9587:26;;9623:71;9691:1;9680:9;9676:17;9667:6;9623:71;:::i;:::-;9704:72;9772:2;9761:9;9757:18;9748:6;9704:72;:::i;:::-;9451:332;;;;;:::o;9789:230::-;9929:34;9925:1;9917:6;9913:14;9906:58;9998:13;9993:2;9985:6;9981:15;9974:38;9789:230;:::o;10025:366::-;10167:3;10188:67;10252:2;10247:3;10188:67;:::i;:::-;10181:74;;10264:93;10353:3;10264:93;:::i;:::-;10382:2;10377:3;10373:12;10366:19;;10025:366;;;:::o;10397:419::-;10563:4;10601:2;10590:9;10586:18;10578:26;;10650:9;10644:4;10640:20;10636:1;10625:9;10621:17;10614:47;10678:131;10804:4;10678:131;:::i;:::-;10670:139;;10397:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "621000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"UETH()": "351",
								"doArbitrage(uint256)": "infinite",
								"swapRouter()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 329,
									"end": 371,
									"name": "PUSH",
									"source": 4,
									"value": "3BFA4769FB09EEFC5A80D6E87C3B9C650F7AE48E"
								},
								{
									"begin": 538,
									"end": 608,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 538,
									"end": 608,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 538,
									"end": 608,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 538,
									"end": 608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 538,
									"end": 608,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 538,
									"end": 608,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 538,
									"end": 608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 538,
									"end": 608,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 538,
									"end": 608,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "ASSIGNIMMUTABLE",
									"source": 4,
									"value": "391"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 212,
									"end": 2067,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122022163e382698e6d222817fa66eb713d5be46eb7d18045fd6580df0ffc59fd26264736f6c63430008180033",
									".code": [
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "82D2DCFB"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "A048600D"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "C31C9C07"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 212,
											"end": 2067,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 458,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 458,
											"end": 531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 662,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 662,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 662,
											"end": 2065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 538,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 538,
											"end": 608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 4,
											"value": "D10A9EC6E827B13CF399FCC7E6424F233E99562A"
										},
										{
											"begin": 458,
											"end": 531,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 458,
											"end": 531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 735,
											"end": 752,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 768,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 452,
											"name": "PUSH",
											"source": 4,
											"value": "64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99"
										},
										{
											"begin": 831,
											"end": 841,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 863,
											"end": 867,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 882,
											"end": 890,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 768,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 768,
											"end": 900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 768,
											"end": 900,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 768,
											"end": 900,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 911,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 452,
											"name": "PUSH",
											"source": 4,
											"value": "64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99"
										},
										{
											"begin": 952,
											"end": 962,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 965,
											"end": 973,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 911,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 911,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 911,
											"end": 974,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 911,
											"end": 974,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1035,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 410,
											"end": 452,
											"name": "PUSH",
											"source": 4,
											"value": "64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 4,
											"value": "D10A9EC6E827B13CF399FCC7E6424F233E99562A"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1174,
											"end": 1177,
											"name": "PUSH",
											"source": 4,
											"value": "1F4"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1250,
											"end": 1254,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1283,
											"end": 1291,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1327,
											"end": 1328,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1038,
											"end": 1381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1381,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 985,
											"end": 1381,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1410,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1423,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 1413,
											"end": 1440,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1440,
											"name": "PUSH",
											"source": 4,
											"value": "4E45AAF"
										},
										{
											"begin": 1441,
											"end": 1447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1413,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1413,
											"end": 1448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1413,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1392,
											"end": 1448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 4,
											"value": "D10A9EC6E827B13CF399FCC7E6424F233E99562A"
										},
										{
											"begin": 1500,
											"end": 1510,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 265,
											"end": 275,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1459,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1459,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1459,
											"end": 1522,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1459,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1584,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 489,
											"end": 531,
											"name": "PUSH",
											"source": 4,
											"value": "D10A9EC6E827B13CF399FCC7E6424F233E99562A"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 410,
											"end": 452,
											"name": "PUSH",
											"source": 4,
											"value": "64B6F44862E8800EBD63CD7F1319C8BF0BC1BB99"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1723,
											"end": 1728,
											"name": "PUSH",
											"source": 4,
											"value": "2710"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFF"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1793,
											"end": 1803,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1831,
											"end": 1841,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1964,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "PUSH",
											"source": 4,
											"value": "4E45AAF"
										},
										{
											"begin": 1982,
											"end": 1989,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1954,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1954,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1954,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1990,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1990,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "PUSH",
											"source": 4,
											"value": "3BB2EF743367D6BF518E353CE6F97647577A7BA1B971FEECABD1BF42BE1B55A3"
										},
										{
											"begin": 2022,
											"end": 2031,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2006,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2032,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2042,
											"end": 2058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 662,
											"end": 2065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 538,
											"end": 608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 538,
											"end": 608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1314,
											"end": 1326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1345,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1354,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1349,
											"end": 1359,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1383,
											"end": 1393,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1395,
											"end": 1399,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1401,
											"end": 1403,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1360,
											"end": 1411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1360,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 1349,
											"end": 1412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1349,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1313,
											"end": 1412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1470,
											"end": 1471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1471,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 1475,
											"end": 1499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1475,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1455,
											"end": 1499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1443,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1422,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1422,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 212,
											"end": 646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 390,
											"end": 402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 404,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 425,
											"end": 435,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 425,
											"end": 435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 459,
											"end": 469,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 471,
											"end": 473,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 475,
											"end": 480,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 436,
											"end": 481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 481,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 425,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 425,
											"end": 482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 425,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 389,
											"end": 482,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 513,
											"end": 520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 513,
											"end": 570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 540,
											"end": 541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 525,
											"end": 536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 525,
											"end": 541,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 525,
											"end": 569,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 556,
											"end": 560,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 545,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 545,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 545,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 525,
											"end": 569,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 525,
											"end": 569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 513,
											"end": 570,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 513,
											"end": 570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 492,
											"end": 639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 492,
											"end": 639,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 492,
											"end": 639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 212,
											"end": 646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 920,
											"end": 997,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 920,
											"end": 997,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 957,
											"end": 964,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 975,
											"end": 991,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 975,
											"end": 991,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 920,
											"end": 997,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 920,
											"end": 997,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 920,
											"end": 997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1076,
											"end": 1100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1076,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1066,
											"end": 1101,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1116,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1105,
											"end": 1117,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 1056,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1003,
											"end": 1125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1177,
											"end": 1182,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1202,
											"end": 1222,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1193,
											"end": 1222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1258,
											"end": 1263,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1231,
											"end": 1264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1231,
											"end": 1264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1131,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1335,
											"end": 1341,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1384,
											"end": 1386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1381,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1363,
											"end": 1370,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1359,
											"end": 1382,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1355,
											"end": 1387,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1390,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 1390,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1352,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1510,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1535,
											"end": 1588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1481,
											"end": 1598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1276,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1716,
											"end": 1721,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1698,
											"end": 1722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 1698,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1693,
											"end": 1696,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1686,
											"end": 1723,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1611,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1832,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1851,
											"end": 1869,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1843,
											"end": 1869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1947,
											"end": 1948,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1945,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1949,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1923,
											"end": 1929,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1879,
											"end": 1950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 1879,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1735,
											"end": 1957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2012,
											"end": 2017,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2005,
											"end": 2017,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2023,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1963,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2157,
											"end": 2162,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2139,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2139,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2130,
											"end": 2164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2130,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2112,
											"end": 2165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2112,
											"end": 2165,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2099,
											"end": 2165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2171,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2029,
											"end": 2171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2291,
											"end": 2296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 2260,
											"end": 2297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2260,
											"end": 2297,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2247,
											"end": 2297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2456,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2309,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2380,
											"end": 2389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2413,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2450,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2413,
											"end": 2450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2413,
											"end": 2450,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 2413,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 2450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2400,
											"end": 2450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2456,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2456,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2456,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2309,
											"end": 2456,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2635,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2462,
											"end": 2635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2622,
											"end": 2627,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2628,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 2570,
											"end": 2628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2570,
											"end": 2628,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 2570,
											"end": 2628,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2565,
											"end": 2568,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2629,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2462,
											"end": 2635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2905,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2641,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2759,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2793,
											"end": 2795,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2782,
											"end": 2791,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2778,
											"end": 2796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2796,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2770,
											"end": 2796,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2895,
											"end": 2896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2871,
											"end": 2877,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2806,
											"end": 2898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2806,
											"end": 2898,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 2806,
											"end": 2898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2905,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2905,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2905,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2905,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3006,
											"end": 3011,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 2988,
											"end": 3012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 2988,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2983,
											"end": 2986,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2976,
											"end": 3013,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 3019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3061,
											"end": 3068,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3101,
											"end": 3109,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFF"
										},
										{
											"begin": 3094,
											"end": 3099,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3090,
											"end": 3110,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3079,
											"end": 3110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3214,
											"end": 3219,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 3197,
											"end": 3220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 3197,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3192,
											"end": 3195,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3185,
											"end": 3221,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3122,
											"end": 3227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3328,
											"end": 3333,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 3310,
											"end": 3334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 3310,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3305,
											"end": 3308,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3335,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3233,
											"end": 3341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3442,
											"end": 3447,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3424,
											"end": 3448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 3424,
											"end": 3448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3449,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3738,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 3729,
											"end": 3732,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3725,
											"end": 3739,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 3828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3822,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3813,
											"end": 3829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3807,
											"end": 3830,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3900,
											"end": 3904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3895,
											"end": 3898,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3891,
											"end": 3905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 3843,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3843,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3916,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3995,
											"end": 4000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3991,
											"end": 4007,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3985,
											"end": 4008,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4078,
											"end": 4082,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4073,
											"end": 4076,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4069,
											"end": 4083,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4055,
											"end": 4067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4021,
											"end": 4084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 4021,
											"end": 4084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3926,
											"end": 4094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4175,
											"end": 4179,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4168,
											"end": 4173,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4180,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4249,
											"end": 4253,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4244,
											"end": 4247,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4240,
											"end": 4254,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4226,
											"end": 4238,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4194,
											"end": 4255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 4194,
											"end": 4255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4104,
											"end": 4265,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4352,
											"end": 4356,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4345,
											"end": 4350,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4341,
											"end": 4357,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4335,
											"end": 4358,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4428,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4423,
											"end": 4426,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4419,
											"end": 4433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4405,
											"end": 4417,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4371,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 4371,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4444,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4530,
											"end": 4534,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4523,
											"end": 4528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4519,
											"end": 4535,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4513,
											"end": 4536,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4606,
											"end": 4610,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4601,
											"end": 4604,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4597,
											"end": 4611,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4549,
											"end": 4612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 4549,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4454,
											"end": 4622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4720,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4709,
											"end": 4714,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4705,
											"end": 4721,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4722,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4792,
											"end": 4796,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 4787,
											"end": 4790,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4797,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4735,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 4735,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4632,
											"end": 4808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4907,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4896,
											"end": 4901,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4892,
											"end": 4908,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4886,
											"end": 4909,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4979,
											"end": 4983,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 4974,
											"end": 4977,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4970,
											"end": 4984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4968,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4922,
											"end": 4985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 4922,
											"end": 4985,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4818,
											"end": 4995,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 5002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 5002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5179,
											"end": 5183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5217,
											"end": 5220,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5202,
											"end": 5221,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5221,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5194,
											"end": 5221,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5377,
											"end": 5378,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5366,
											"end": 5375,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5362,
											"end": 5379,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5359,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 5231,
											"end": 5380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 5231,
											"end": 5380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5008,
											"end": 5387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5450,
											"end": 5455,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5481,
											"end": 5487,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5475,
											"end": 5488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5466,
											"end": 5488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5524,
											"end": 5529,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 5497,
											"end": 5530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 5497,
											"end": 5530,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5393,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5612,
											"end": 5618,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5663,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5649,
											"end": 5658,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5659,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5632,
											"end": 5664,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5667,
											"end": 5746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 5667,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 5629,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5787,
											"end": 5788,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5868,
											"end": 5875,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5848,
											"end": 5857,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5844,
											"end": 5866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5812,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 5812,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5876,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5802,
											"end": 5876,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5758,
											"end": 5886,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5542,
											"end": 5893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6048,
											"end": 6052,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6088,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 6075,
											"end": 6084,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6167,
											"end": 6168,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6165,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6099,
											"end": 6170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 6099,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6248,
											"end": 6250,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6237,
											"end": 6246,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6233,
											"end": 6251,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6224,
											"end": 6230,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 6180,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 6180,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6330,
											"end": 6332,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6319,
											"end": 6328,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6306,
											"end": 6312,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 6262,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 6262,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5899,
											"end": 6341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6398,
											"end": 6404,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6432,
											"end": 6437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6438,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6416,
											"end": 6438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6347,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6552,
											"end": 6563,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6592,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6574,
											"end": 6592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6451,
											"end": 6598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6850,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 6604,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6685,
											"end": 6686,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6709,
											"end": 6715,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6703,
											"end": 6716,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6794,
											"end": 6795,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6789,
											"end": 6792,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6785,
											"end": 6796,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6779,
											"end": 6797,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6775,
											"end": 6776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6770,
											"end": 6773,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6766,
											"end": 6777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6798,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6729,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6724,
											"end": 6734,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6719,
											"end": 6734,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 6695,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6842,
											"end": 6843,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6833,
											"end": 6839,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6828,
											"end": 6831,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6824,
											"end": 6840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6817,
											"end": 6844,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6666,
											"end": 6850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6856,
											"end": 7242,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 6856,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6960,
											"end": 6963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7020,
											"end": 7025,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 6988,
											"end": 7026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 6988,
											"end": 7026,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7042,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7123,
											"end": 7129,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7118,
											"end": 7121,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7042,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 7042,
											"end": 7130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7042,
											"end": 7130,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7042,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7130,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7130,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7197,
											"end": 7203,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7192,
											"end": 7195,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7185,
											"end": 7189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7178,
											"end": 7183,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 7174,
											"end": 7190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 7139,
											"end": 7204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7139,
											"end": 7204,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 7139,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7229,
											"end": 7235,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7224,
											"end": 7227,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7220,
											"end": 7236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7236,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7213,
											"end": 7236,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6856,
											"end": 7242,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6856,
											"end": 7242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6856,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6856,
											"end": 7242,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6856,
											"end": 7242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7519,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7248,
											"end": 7519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7378,
											"end": 7381,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7400,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7489,
											"end": 7492,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7480,
											"end": 7486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 7400,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7400,
											"end": 7493,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 7400,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7393,
											"end": 7493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7510,
											"end": 7513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7513,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7503,
											"end": 7513,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7519,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7248,
											"end": 7519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7525,
											"end": 7615,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7525,
											"end": 7615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7566,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7602,
											"end": 7607,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7595,
											"end": 7608,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7588,
											"end": 7609,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7577,
											"end": 7609,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7577,
											"end": 7609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7525,
											"end": 7615,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7525,
											"end": 7615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7525,
											"end": 7615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7525,
											"end": 7615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7621,
											"end": 7737,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7621,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7691,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 7706,
											"end": 7711,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7691,
											"end": 7712,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 7691,
											"end": 7712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7691,
											"end": 7712,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 7691,
											"end": 7712,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7684,
											"end": 7689,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7681,
											"end": 7713,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7671,
											"end": 7731,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7727,
											"end": 7728,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7724,
											"end": 7725,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7717,
											"end": 7729,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7671,
											"end": 7731,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 7671,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7621,
											"end": 7737,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7621,
											"end": 7737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7880,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 7743,
											"end": 7880,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7797,
											"end": 7802,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7828,
											"end": 7834,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7822,
											"end": 7835,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7835,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7835,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7844,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7868,
											"end": 7873,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7844,
											"end": 7874,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 7844,
											"end": 7874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7844,
											"end": 7874,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 7844,
											"end": 7874,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7880,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7880,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7880,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7743,
											"end": 7880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 8231,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 7886,
											"end": 8231,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7953,
											"end": 7959,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7990,
											"end": 7999,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7981,
											"end": 7988,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7977,
											"end": 8000,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7973,
											"end": 8005,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 8089,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 8089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 7970,
											"end": 8089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8008,
											"end": 8087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 8008,
											"end": 8087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8008,
											"end": 8087,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 8008,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7970,
											"end": 8089,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 7970,
											"end": 8089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8128,
											"end": 8129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8206,
											"end": 8213,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8197,
											"end": 8203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8186,
											"end": 8195,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 8182,
											"end": 8204,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8153,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 8153,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8153,
											"end": 8214,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8153,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8143,
											"end": 8214,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8143,
											"end": 8214,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8099,
											"end": 8224,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 8231,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 8231,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 8231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 8231,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7886,
											"end": 8231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8237,
											"end": 8406,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8237,
											"end": 8406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8321,
											"end": 8332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8361,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8350,
											"end": 8353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8343,
											"end": 8362,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8395,
											"end": 8399,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8390,
											"end": 8393,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8386,
											"end": 8400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8371,
											"end": 8400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8371,
											"end": 8400,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8237,
											"end": 8406,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8237,
											"end": 8406,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8237,
											"end": 8406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8237,
											"end": 8406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8237,
											"end": 8406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8648,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8412,
											"end": 8648,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8552,
											"end": 8586,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A3A7472616E7366657246726F6D3A207472"
										},
										{
											"begin": 8548,
											"end": 8549,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8540,
											"end": 8546,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8536,
											"end": 8550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8529,
											"end": 8587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8621,
											"end": 8640,
											"name": "PUSH",
											"source": 5,
											"value": "616E7366657246726F6D206661696C6564000000000000000000000000000000"
										},
										{
											"begin": 8616,
											"end": 8618,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8608,
											"end": 8614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8604,
											"end": 8619,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8597,
											"end": 8641,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 9020,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 8654,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8796,
											"end": 8799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8817,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8881,
											"end": 8883,
											"name": "PUSH",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 8876,
											"end": 8879,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8884,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 8817,
											"end": 8884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8817,
											"end": 8884,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 8817,
											"end": 8884,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8884,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8810,
											"end": 8884,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8893,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8982,
											"end": 8985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8893,
											"end": 8986,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 8893,
											"end": 8986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8893,
											"end": 8986,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 8893,
											"end": 8986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9011,
											"end": 9013,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9006,
											"end": 9009,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9002,
											"end": 9014,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9014,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8995,
											"end": 9014,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 9020,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 9020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 9020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8654,
											"end": 9020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9445,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 9026,
											"end": 9445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9192,
											"end": 9196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9230,
											"end": 9232,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9219,
											"end": 9228,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9215,
											"end": 9233,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9207,
											"end": 9233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9288,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9273,
											"end": 9277,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9269,
											"end": 9289,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9265,
											"end": 9266,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9254,
											"end": 9263,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9250,
											"end": 9267,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9243,
											"end": 9290,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9433,
											"end": 9437,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 9307,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9307,
											"end": 9438,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9307,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9438,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9299,
											"end": 9438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9445,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9445,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9445,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9026,
											"end": 9445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9783,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 9451,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9572,
											"end": 9576,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9610,
											"end": 9612,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9599,
											"end": 9608,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9595,
											"end": 9613,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9613,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9587,
											"end": 9613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9691,
											"end": 9692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9680,
											"end": 9689,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9676,
											"end": 9693,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9667,
											"end": 9673,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9623,
											"end": 9694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 9623,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9772,
											"end": 9774,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9761,
											"end": 9770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9757,
											"end": 9775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9748,
											"end": 9754,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 9704,
											"end": 9776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9704,
											"end": 9776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9783,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9783,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9783,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9451,
											"end": 9783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 10019,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 9789,
											"end": 10019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 9963,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E7366657248656C7065723A3A73616665417070726F76653A20617070"
										},
										{
											"begin": 9925,
											"end": 9926,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9923,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9913,
											"end": 9927,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9906,
											"end": 9964,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10011,
											"name": "PUSH",
											"source": 5,
											"value": "726F7665206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 9993,
											"end": 9995,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9985,
											"end": 9991,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9981,
											"end": 9996,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 10012,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 10019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9789,
											"end": 10019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10025,
											"end": 10391,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10025,
											"end": 10391,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10167,
											"end": 10170,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10188,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 10252,
											"end": 10254,
											"name": "PUSH",
											"source": 5,
											"value": "2B"
										},
										{
											"begin": 10247,
											"end": 10250,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10188,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 10188,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10188,
											"end": 10255,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 10188,
											"end": 10255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10181,
											"end": 10255,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10181,
											"end": 10255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 10353,
											"end": 10356,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 10264,
											"end": 10357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10264,
											"end": 10357,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 10264,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10382,
											"end": 10384,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10377,
											"end": 10380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10373,
											"end": 10385,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10366,
											"end": 10385,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10366,
											"end": 10385,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10025,
											"end": 10391,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10025,
											"end": 10391,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10025,
											"end": 10391,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10025,
											"end": 10391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10397,
											"end": 10816,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 10397,
											"end": 10816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10563,
											"end": 10567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10603,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 10590,
											"end": 10599,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10586,
											"end": 10604,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10578,
											"end": 10604,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10578,
											"end": 10604,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10650,
											"end": 10659,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10644,
											"end": 10648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10640,
											"end": 10660,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10637,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10625,
											"end": 10634,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10621,
											"end": 10638,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10614,
											"end": 10661,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 10804,
											"end": 10808,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10809,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10678,
											"end": 10809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10678,
											"end": 10809,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 10678,
											"end": 10809,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 10809,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10670,
											"end": 10809,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10397,
											"end": 10816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10397,
											"end": 10816,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10397,
											"end": 10816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10397,
											"end": 10816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/lib/contracts/libraries/TransferHelper.sol",
								"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
								"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
								"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
								"Arbitrage_Noflashloan.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"UETH()": "82d2dcfb",
							"doArbitrage(uint256)": "a048600d",
							"swapRouter()": "c31c9c07"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"ArbitrageResult\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"doArbitrage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract IV3SwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Arbitrage_Noflashloan.sol\":\"Arbitrage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/lib/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0xaff99b54915f57e2a4e71b8d15afd4ee425410e5a6f45c07517ae1beb806f8bd\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://15432ec031f4cfa6709921289e198b030a0c5eac75b5a3e0eb64827a2b3b5595\",\"dweb:/ipfs/QmZvR1KuuDvuzXFiADCngTKyMCTy31uhq9U6CazP59B55j\"]},\"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol\":{\"keccak256\":\"0xa2300af2b82af292216a8f3f301a86e65463655fff9fb791515e3fd2ccf4a14c\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a0a9bece58527fb5c1773d86666c7a71884a78f413e230dfa8c8a7f8ea564ef9\",\"dweb:/ipfs/QmbDhvpoZJN1KntxUUxkYV89RPTwqVBiyHBkvVh4QHSveo\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"Arbitrage_Noflashloan.sol\":{\"keccak256\":\"0xab8632adad3e9c7211e8b5580684d3eba4e778b78cf8dadead93f2369117ef76\",\"urls\":[\"bzz-raw://3a4f1a5c80a2a1bb233219afd9c7fade450455b86ed3815f171ebc32a239f1f0\",\"dweb:/ipfs/QmTYtWooK3bt6aUtUoEXeuAhiohmV7J8G4zYTHkcAgoLxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Arbitrage_Noflashloan.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Arbitrage_Noflashloan.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.24;\"\n--> Arbitrage_Noflashloan.sol\n\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.8.24;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Arbitrage_Noflashloan.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/lib/contracts/libraries/TransferHelper.sol": {
				"ast": {
					"absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
					"exportedSymbols": {
						"TransferHelper": [
							159
						]
					},
					"id": 160,
					"license": "GPL-3.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 159,
							"linearizedBaseContracts": [
								159
							],
							"name": "TransferHelper",
							"nameLocation": "191:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "314:332:0",
										"statements": [
											{
												"assignments": [
													11,
													13
												],
												"declarations": [
													{
														"constant": false,
														"id": 11,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "395:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "390:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 10,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "390:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 13,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "417:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 43,
														"src": "404:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 12,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "404:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 23,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "459:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 19,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "471:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 20,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "475:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 16,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "436:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "440:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "436:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "436:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 14,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "425:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "431:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "425:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "425:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 25,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "513:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 37,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 29,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 26,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "525:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 27,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "530:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "525:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "540:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "525:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 32,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 13,
																					"src": "556:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 34,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "563:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 33,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "563:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 35,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "562:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 30,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "545:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 31,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "549:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "545:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 36,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "545:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "525:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 38,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "524:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "513:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a73616665417070726f76653a20617070726f7665206661696c6564",
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "584:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															},
															"value": "TransferHelper::safeApprove: approve failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b4dd1eb4be82119fd3a99acfb5dd4c57591eb0ea309359b1af3d65a4460c7123",
																"typeString": "literal_string \"TransferHelper::safeApprove: approve failed\""
															}
														],
														"id": 24,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "492:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "492:147:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "492:147:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "221:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "250:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "242:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "273:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "265:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "293:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "285:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "285:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "232:72:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "314:0:0"
									},
									"scope": 159,
									"src": "212:434:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "755:335:0",
										"statements": [
											{
												"assignments": [
													54,
													56
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "837:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "832:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 53,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "832:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 56,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "859:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "846:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 55,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "846:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 66,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "901:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 62,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "913:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 63,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 50,
																	"src": "917:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 59,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "878:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "882:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "878:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "878:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 57,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 46,
															"src": "867:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "873:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "867:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "831:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 68,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "955:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 72,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 69,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "967:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "972:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "967:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 71,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "982:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "967:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 75,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 56,
																					"src": "998:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 77,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1005:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 76,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1005:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 78,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1004:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 73,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "987:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 74,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "991:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "987:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 79,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "987:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "967:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 81,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "966:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "955:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1026:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															},
															"value": "TransferHelper::safeTransfer: transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_daea69421eeb1164e163c36f3d4349f0db3ec4e0d1381bd5bf4faf53496c2611",
																"typeString": "literal_string \"TransferHelper::safeTransfer: transfer failed\""
															}
														],
														"id": 67,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "934:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "934:149:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "934:149:0"
											}
										]
									},
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "661:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "714:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "706:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "734:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:72:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:0"
									},
									"scope": 159,
									"src": "652:438:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "1225:357:0",
										"statements": [
											{
												"assignments": [
													99,
													101
												],
												"declarations": [
													{
														"constant": false,
														"id": 99,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1319:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1314:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 98,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1314:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 101,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "1341:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 132,
														"src": "1328:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 100,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1328:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1383:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 107,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1395:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 108,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1401:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 109,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "1405:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 104,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1360:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1364:18:0",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1360:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1360:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 102,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "1349:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1355:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1349:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1349:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1313:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 114,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "1443:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 126,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 115,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 101,
																					"src": "1455:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1460:6:0",
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "1455:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1470:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "1455:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 121,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 101,
																					"src": "1486:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 123,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "1493:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 122,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "1493:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 124,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1492:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 119,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1475:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberLocation": "1479:6:0",
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "1475:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1475:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "1455:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 127,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1454:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1443:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c6564",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1514:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															},
															"value": "TransferHelper::transferFrom: transferFrom failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f8faf98afe9344b6d4b0e75b0101259bf282914b3b5a9320c6918b6e27ede1c",
																"typeString": "literal_string \"TransferHelper::transferFrom: transferFrom failed\""
															}
														],
														"id": 113,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1422:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "1422:153:0"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1105:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1139:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1162:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1154:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1184:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1176:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1204:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "1196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1121:94:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1225:0:0"
									},
									"scope": 159,
									"src": "1096:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 157,
										"nodeType": "Block",
										"src": "1649:153:0",
										"statements": [
											{
												"assignments": [
													141,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 141,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1665:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 157,
														"src": "1660:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 140,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1660:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 151,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1710:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "1700:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 146,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1704:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1700:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 142,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "1678:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1681:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1678:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 144,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1693:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1678:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1678:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1659:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 153,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a3a736166655472616e736665724554483a20455448207472616e73666572206661696c6564",
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1740:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															},
															"value": "TransferHelper::safeTransferETH: ETH transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_43d7bec223ecf9eb06ea147e7d564bc71c2448662d62a4ea86ce71fc4518b350",
																"typeString": "literal_string \"TransferHelper::safeTransferETH: ETH transfer failed\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1723:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1723:72:0"
											}
										]
									},
									"id": 158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "1597:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1621:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1613:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:27:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1649:0:0"
									},
									"scope": 159,
									"src": "1588:214:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 160,
							"src": "183:1621:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "46:1759:0"
				},
				"id": 0
			},
			"@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							265
						],
						"IV3SwapRouter": [
							251
						]
					},
					"id": 252,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 161,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"id": 162,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 163,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 266,
							"src": "91:83:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 165,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"307:22:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "307:22:1"
									},
									"id": 166,
									"nodeType": "InheritanceSpecifier",
									"src": "307:22:1"
								}
							],
							"canonicalName": "IV3SwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 164,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:1",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								265
							],
							"name": "IV3SwapRouter",
							"nameLocation": "290:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IV3SwapRouter.ExactInputSingleParams",
									"id": 181,
									"members": [
										{
											"constant": false,
											"id": 168,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "384:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "376:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 167,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "376:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 170,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "409:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "401:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 169,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "401:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 172,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "434:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "427:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 171,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "427:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 174,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "455:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "447:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 173,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "447:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 176,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "482:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "474:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 175,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "474:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 178,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "508:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "500:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "500:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 180,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "542:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 181,
											"src": "534:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 179,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "534:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "343:22:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "336:230:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "572:439:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "04e45aaf",
									"id": 190,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "1025:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1074:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1042:38:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 183,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"1042:22:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 181,
														"src": "1042:22:1"
													},
													"referencedDeclaration": 181,
													"src": "1042:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:40:1"
									},
									"returnParameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1116:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "1108:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1108:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1107:19:1"
									},
									"scope": 251,
									"src": "1016:111:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactInputParams",
									"id": 199,
									"members": [
										{
											"constant": false,
											"id": 192,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1173:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1167:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 191,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1167:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 194,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1195:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1187:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 193,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1187:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 196,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1222:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1214:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 195,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1214:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 198,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1248:16:1",
											"nodeType": "VariableDeclaration",
											"scope": 199,
											"src": "1240:24:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 197,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1240:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "1140:16:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "1133:138:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "1277:462:1",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @dev Setting `amountIn` to 0 will cause the contract to look up its own balance,\n and swap the entire amount, enabling contracts to send tokens before calling this function.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "b858183f",
									"id": 208,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1753:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1790:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1764:32:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$199_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 202,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 201,
														"name": "ExactInputParams",
														"nameLocations": [
															"1764:16:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 199,
														"src": "1764:16:1"
													},
													"referencedDeclaration": 199,
													"src": "1764:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$199_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1763:34:1"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1832:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "1824:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:19:1"
									},
									"scope": 251,
									"src": "1744:99:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputSingleParams",
									"id": 223,
									"members": [
										{
											"constant": false,
											"id": 210,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1898:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1890:15:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 209,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1890:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 212,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1923:8:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1915:16:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 211,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1915:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 214,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1948:3:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1941:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 213,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1941:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 216,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1969:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1961:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 215,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1961:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 218,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1996:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "1988:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 217,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1988:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 220,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2023:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "2015:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 219,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2015:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 222,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "2056:17:1",
											"nodeType": "VariableDeclaration",
											"scope": 223,
											"src": "2048:25:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 221,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "2048:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1856:23:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "1849:231:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "2086:304:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n that may remain in the router after the swap.\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "5023b4df",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2404:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2455:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2422:39:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$223_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 226,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 225,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2422:23:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 223,
														"src": "2422:23:1"
													},
													"referencedDeclaration": 223,
													"src": "2422:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$223_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2421:41:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2497:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2489:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2488:18:1"
									},
									"scope": 251,
									"src": "2395:112:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IV3SwapRouter.ExactOutputParams",
									"id": 241,
									"members": [
										{
											"constant": false,
											"id": 234,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2554:4:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2548:10:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 233,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2548:5:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 236,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2576:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2568:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 235,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2568:7:1",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 238,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2603:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2595:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 237,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2595:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 240,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2630:15:1",
											"nodeType": "VariableDeclaration",
											"scope": 241,
											"src": "2622:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 239,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2622:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2520:17:1",
									"nodeType": "StructDefinition",
									"scope": 251,
									"src": "2513:139:1",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "2658:338:1",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n that may remain in the router after the swap.\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "09b81346",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "3010:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "3049:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3022:33:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$241_calldata_ptr",
													"typeString": "struct IV3SwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 244,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 243,
														"name": "ExactOutputParams",
														"nameLocations": [
															"3022:17:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 241,
														"src": "3022:17:1"
													},
													"referencedDeclaration": 241,
													"src": "3022:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$241_storage_ptr",
														"typeString": "struct IV3SwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3021:35:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3091:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "3083:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3083:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3082:18:1"
									},
									"scope": 251,
									"src": "3001:100:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "280:2823:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:3059:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
					"exportedSymbols": {
						"IUniswapV3SwapCallback": [
							265
						]
					},
					"id": 266,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3SwapCallback",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "71:144:2",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IUniswapV3SwapCallback",
							"nameLocation": "225:22:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "254:898:2",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 264,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nameLocation": "1166:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nameLocation": "1204:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1197:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 256,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1197:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nameLocation": "1233:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1226:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 258,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1226:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1270:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "1255:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1255:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1187:93:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1289:0:2"
									},
									"scope": 265,
									"src": "1157:133:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 266,
							"src": "215:1077:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:1248:2"
				},
				"id": 2
			},
			"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
					"exportedSymbols": {
						"ISwapRouter": [
							365
						],
						"IUniswapV3SwapCallback": [
							265
						]
					},
					"id": 366,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 267,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"id": 268,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "70:19:3"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol",
							"id": 269,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 366,
							"sourceUnit": 266,
							"src": "91:83:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 271,
										"name": "IUniswapV3SwapCallback",
										"nameLocations": [
											"305:22:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 265,
										"src": "305:22:3"
									},
									"id": 272,
									"nodeType": "InheritanceSpecifier",
									"src": "305:22:3"
								}
							],
							"canonicalName": "ISwapRouter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "176:104:3",
								"text": "@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"
							},
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365,
								265
							],
							"name": "ISwapRouter",
							"nameLocation": "290:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ISwapRouter.ExactInputSingleParams",
									"id": 289,
									"members": [
										{
											"constant": false,
											"id": 274,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "382:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "374:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 273,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "374:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 276,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "407:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "399:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 275,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "399:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 278,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "432:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "425:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 277,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "425:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 280,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "453:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "445:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 279,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "445:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 282,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "480:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "472:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 281,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "472:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 284,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "506:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "498:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 283,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "498:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 286,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "532:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "524:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 285,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "524:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 288,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "566:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 289,
											"src": "558:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 287,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "558:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputSingleParams",
									"nameLocation": "341:22:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "334:256:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "596:250:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "414bf389",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInputSingle",
									"nameLocation": "860:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "909:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "877:38:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputSingleParams_$289_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputSingleParams"
												},
												"typeName": {
													"id": 292,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 291,
														"name": "ExactInputSingleParams",
														"nameLocations": [
															"877:22:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 289,
														"src": "877:22:3"
													},
													"referencedDeclaration": 289,
													"src": "877:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$289_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:40:3"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "951:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "943:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "942:19:3"
									},
									"scope": 365,
									"src": "851:111:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactInputParams",
									"id": 309,
									"members": [
										{
											"constant": false,
											"id": 300,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "1008:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1002:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 299,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1002:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 302,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1030:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1022:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 301,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1022:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 304,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1057:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1049:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 303,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1049:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 306,
											"mutability": "mutable",
											"name": "amountIn",
											"nameLocation": "1083:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1075:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 305,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1075:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 308,
											"mutability": "mutable",
											"name": "amountOutMinimum",
											"nameLocation": "1109:16:3",
											"nodeType": "VariableDeclaration",
											"scope": 309,
											"src": "1101:24:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 307,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1101:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactInputParams",
									"nameLocation": "975:16:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "968:164:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "1138:273:3",
										"text": "@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"
									},
									"functionSelector": "c04b8d59",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactInput",
									"nameLocation": "1425:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "1462:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1436:32:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactInputParams_$309_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactInputParams"
												},
												"typeName": {
													"id": 312,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 311,
														"name": "ExactInputParams",
														"nameLocations": [
															"1436:16:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 309,
														"src": "1436:16:3"
													},
													"referencedDeclaration": 309,
													"src": "1436:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputParams_$309_storage_ptr",
														"typeString": "struct ISwapRouter.ExactInputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:34:3"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1504:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "1496:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:19:3"
									},
									"scope": 365,
									"src": "1416:99:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputSingleParams",
									"id": 335,
									"members": [
										{
											"constant": false,
											"id": 320,
											"mutability": "mutable",
											"name": "tokenIn",
											"nameLocation": "1570:7:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1562:15:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 319,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1562:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 322,
											"mutability": "mutable",
											"name": "tokenOut",
											"nameLocation": "1595:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1587:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 321,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1587:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 324,
											"mutability": "mutable",
											"name": "fee",
											"nameLocation": "1620:3:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1613:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 323,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "1613:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 326,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "1641:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1633:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 325,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1633:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 328,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "1668:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1660:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1660:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 330,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "1694:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1686:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1686:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 332,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "1721:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1713:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 331,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1713:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 334,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nameLocation": "1754:17:3",
											"nodeType": "VariableDeclaration",
											"scope": 335,
											"src": "1746:25:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 333,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "1746:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputSingleParams",
									"nameLocation": "1528:23:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "1521:257:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1784:250:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "db3e2198",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutputSingle",
									"nameLocation": "2048:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2099:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2066:39:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputSingleParams_$335_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputSingleParams"
												},
												"typeName": {
													"id": 338,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 337,
														"name": "ExactOutputSingleParams",
														"nameLocations": [
															"2066:23:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 335,
														"src": "2066:23:3"
													},
													"referencedDeclaration": 335,
													"src": "2066:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputSingleParams_$335_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:41:3"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2141:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "2133:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2132:18:3"
									},
									"scope": 365,
									"src": "2039:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "ISwapRouter.ExactOutputParams",
									"id": 355,
									"members": [
										{
											"constant": false,
											"id": 346,
											"mutability": "mutable",
											"name": "path",
											"nameLocation": "2198:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2192:10:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 345,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "2192:5:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 348,
											"mutability": "mutable",
											"name": "recipient",
											"nameLocation": "2220:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2212:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 347,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2212:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 350,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "2247:8:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2239:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 349,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2239:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 352,
											"mutability": "mutable",
											"name": "amountOut",
											"nameLocation": "2273:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2265:17:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 351,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2265:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 354,
											"mutability": "mutable",
											"name": "amountInMaximum",
											"nameLocation": "2300:15:3",
											"nodeType": "VariableDeclaration",
											"scope": 355,
											"src": "2292:23:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 353,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2292:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ExactOutputParams",
									"nameLocation": "2164:17:3",
									"nodeType": "StructDefinition",
									"scope": 365,
									"src": "2157:165:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "2328:284:3",
										"text": "@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"
									},
									"functionSelector": "f28c0498",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "exactOutput",
									"nameLocation": "2626:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "params",
												"nameLocation": "2665:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2638:33:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ExactOutputParams_$355_calldata_ptr",
													"typeString": "struct ISwapRouter.ExactOutputParams"
												},
												"typeName": {
													"id": 358,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 357,
														"name": "ExactOutputParams",
														"nameLocations": [
															"2638:17:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 355,
														"src": "2638:17:3"
													},
													"referencedDeclaration": 355,
													"src": "2638:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactOutputParams_$355_storage_ptr",
														"typeString": "struct ISwapRouter.ExactOutputParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2637:35:3"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2707:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2699:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:18:3"
									},
									"scope": 365,
									"src": "2617:100:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 366,
							"src": "280:2439:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "45:2675:3"
				},
				"id": 3
			},
			"Arbitrage_Noflashloan.sol": {
				"ast": {
					"absolutePath": "Arbitrage_Noflashloan.sol",
					"exportedSymbols": {
						"Arbitrage": [
							495
						],
						"ISwapRouter": [
							365
						],
						"IUniswapV3SwapCallback": [
							265
						],
						"IV3SwapRouter": [
							251
						],
						"TransferHelper": [
							159
						]
					},
					"id": 496,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
							"id": 367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 496,
							"sourceUnit": 366,
							"src": "0:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
							"file": "@uniswap/lib/contracts/libraries/TransferHelper.sol",
							"id": 368,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 496,
							"sourceUnit": 160,
							"src": "69:61:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
							"file": "@uniswap/swap-router-contracts/contracts/interfaces/IV3SwapRouter.sol",
							"id": 369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 496,
							"sourceUnit": 252,
							"src": "131:79:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arbitrage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 495,
							"linearizedBaseContracts": [
								495
							],
							"name": "Arbitrage",
							"nameLocation": "221:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "MAX_UINT",
									"nameLocation": "254:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "237:38:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 370,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "237:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										},
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											},
											"id": 373,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "32",
												"id": 371,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "265:1:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2_by_1",
													"typeString": "int_const 2"
												},
												"value": "2"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "323536",
												"id": 372,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "268:3:4",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_256_by_1",
													"typeString": "int_const 256"
												},
												"value": "256"
											},
											"src": "265:6:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1",
												"typeString": "int_const 1157...(70 digits omitted)...9936"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 374,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "274:1:4",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "265:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1",
											"typeString": "int_const 1157...(70 digits omitted)...9935"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"id": 379,
									"mutability": "constant",
									"name": "SWAP_ROUTER",
									"nameLocation": "307:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "282:89:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 377,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "282:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307833624641343736394642303965656643356138306436453837633342394336353066374165343845",
										"id": 378,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "329:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x3bFA4769FB09eefC5a80d6E87c3B9C650f7Ae48E"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 382,
									"mutability": "constant",
									"name": "UHKD",
									"nameLocation": "403:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "378:74:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 380,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307836344236663434383632453838303045426436334364376631333139433842463042433162623939",
										"id": 381,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "410:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0x64B6f44862E8800EBd63Cd7f1319C8BF0BC1bb99"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "82d2dcfb",
									"id": 385,
									"mutability": "constant",
									"name": "UETH",
									"nameLocation": "482:4:4",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "458:73:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 383,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "458:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"hexValue": "307864313041394563364538323742313363463339396643433745363432346632333345393935363261",
										"id": 384,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "489:42:4",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										},
										"value": "0xd10A9Ec6E827B13cF399fCC7E6424f233E99562a"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c31c9c07",
									"id": 391,
									"mutability": "immutable",
									"name": "swapRouter",
									"nameLocation": "569:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 495,
									"src": "538:70:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
										"typeString": "contract IV3SwapRouter"
									},
									"typeName": {
										"id": 387,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 386,
											"name": "IV3SwapRouter",
											"nameLocations": [
												"538:13:4"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 251,
											"src": "538:13:4"
										},
										"referencedDeclaration": 251,
										"src": "538:13:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
											"typeString": "contract IV3SwapRouter"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 389,
												"name": "SWAP_ROUTER",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 379,
												"src": "596:11:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											],
											"id": 388,
											"name": "IV3SwapRouter",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 251,
											"src": "582:13:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
												"typeString": "type(contract IV3SwapRouter)"
											}
										},
										"id": 390,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "582:26:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
											"typeString": "contract IV3SwapRouter"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3bb2ef743367d6bf518e353ce6f97647577a7ba1b971feecabd1bf42be1b55a3",
									"id": 395,
									"name": "ArbitrageResult",
									"nameLocation": "621:15:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "645:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "637:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:19:4"
									},
									"src": "615:41:4"
								},
								{
									"body": {
										"id": 493,
										"nodeType": "Block",
										"src": "758:1307:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 405,
															"name": "UHKD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "813:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "831:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "835:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "831:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 410,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "863:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$495",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$495",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "855:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 408,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "855:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "855:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 412,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "882:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 402,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "768:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "783:16:4",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 133,
														"src": "768:31:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256)"
														}
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "768:132:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 414,
												"nodeType": "ExpressionStatement",
												"src": "768:132:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 418,
															"name": "UHKD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "938:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 421,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "952:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																],
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "944:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 419,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "944:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "944:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 423,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "965:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 415,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "911:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "926:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "911:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "911:63:4"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "params",
														"nameLocation": "1029:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "985:50:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
															"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 429,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 428,
																"name": "IV3SwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"985:13:4",
																	"999:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "985:36:4"
															},
															"referencedDeclaration": 181,
															"src": "985:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 444,
												"initialValue": {
													"arguments": [
														{
															"id": 433,
															"name": "UHKD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "1115:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 434,
															"name": "UETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "1147:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "353030",
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1174:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														{
															"arguments": [
																{
																	"id": 438,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1250:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Arbitrage_$495",
																		"typeString": "contract Arbitrage"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Arbitrage_$495",
																		"typeString": "contract Arbitrage"
																	}
																],
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1242:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 436,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1242:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1242:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 440,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "1283:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1327:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1365:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 431,
															"name": "IV3SwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1038:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
																"typeString": "type(contract IV3SwapRouter)"
															}
														},
														"id": 432,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1065:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "1038:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$181_storage_ptr_$",
															"typeString": "type(struct IV3SwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1106:7:4",
														"1137:8:4",
														"1169:3:4",
														"1231:9:4",
														"1273:8:4",
														"1309:16:4",
														"1346:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1038:343:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "985:396:4"
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "amountOut1",
														"nameLocation": "1400:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "1392:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1392:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 451,
												"initialValue": {
													"arguments": [
														{
															"id": 449,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 430,
															"src": "1441:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
															}
														],
														"expression": {
															"id": 447,
															"name": "swapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "1413:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																"typeString": "contract IV3SwapRouter"
															}
														},
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1424:16:4",
														"memberName": "exactInputSingle",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 190,
														"src": "1413:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$181_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct IV3SwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
														}
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1413:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1392:56:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "UETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "1486:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 458,
																	"name": "swapRouter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 391,
																	"src": "1500:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																		"typeString": "contract IV3SwapRouter"
																	}
																],
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1492:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 456,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1492:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1492:19:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 460,
															"name": "MAX_UINT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "1513:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 452,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 159,
															"src": "1459:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$159_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1474:11:4",
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1459:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1459:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "1459:63:4"
											},
											{
												"assignments": [
													467
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "params2",
														"nameLocation": "1577:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 493,
														"src": "1533:51:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
															"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
														},
														"typeName": {
															"id": 466,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 465,
																"name": "IV3SwapRouter.ExactInputSingleParams",
																"nameLocations": [
																	"1533:13:4",
																	"1547:22:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 181,
																"src": "1533:36:4"
															},
															"referencedDeclaration": 181,
															"src": "1533:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_storage_ptr",
																"typeString": "struct IV3SwapRouter.ExactInputSingleParams"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 479,
												"initialValue": {
													"arguments": [
														{
															"id": 470,
															"name": "UETH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "1664:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "UHKD",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 382,
															"src": "1696:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "3130303030",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1723:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														},
														{
															"expression": {
																"id": 473,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1793:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1797:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1793:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "amountOut1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "1831:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1877:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "30",
															"id": 477,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1915:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"expression": {
															"id": 468,
															"name": "IV3SwapRouter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "1587:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IV3SwapRouter_$251_$",
																"typeString": "type(contract IV3SwapRouter)"
															}
														},
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1614:22:4",
														"memberName": "ExactInputSingleParams",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 181,
														"src": "1587:49:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$181_storage_ptr_$",
															"typeString": "type(struct IV3SwapRouter.ExactInputSingleParams storage pointer)"
														}
													},
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"1655:7:4",
														"1686:8:4",
														"1718:3:4",
														"1782:9:4",
														"1821:8:4",
														"1859:16:4",
														"1896:17:4"
													],
													"names": [
														"tokenIn",
														"tokenOut",
														"fee",
														"recipient",
														"amountIn",
														"amountOutMinimum",
														"sqrtPriceLimitX96"
													],
													"nodeType": "FunctionCall",
													"src": "1587:344:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
														"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1533:398:4"
											},
											{
												"expression": {
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 480,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "1942:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 483,
																"name": "params2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1982:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_ExactInputSingleParams_$181_memory_ptr",
																	"typeString": "struct IV3SwapRouter.ExactInputSingleParams memory"
																}
															],
															"expression": {
																"id": 481,
																"name": "swapRouter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "1954:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IV3SwapRouter_$251",
																	"typeString": "contract IV3SwapRouter"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1965:16:4",
															"memberName": "exactInputSingle",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 190,
															"src": "1954:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$181_memory_ptr_$returns$_t_uint256_$",
																"typeString": "function (struct IV3SwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
															}
														},
														"id": 484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1954:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1942:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "1942:48:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 488,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 400,
															"src": "2022:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 487,
														"name": "ArbitrageResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "2006:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2006:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 490,
												"nodeType": "EmitStatement",
												"src": "2001:31:4"
											},
											{
												"expression": {
													"id": 491,
													"name": "amountOut",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 400,
													"src": "2049:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 492,
												"nodeType": "Return",
												"src": "2042:16:4"
											}
										]
									},
									"functionSelector": "a048600d",
									"id": 494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "doArbitrage",
									"nameLocation": "671:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "691:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "683:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "682:18:4"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "743:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "735:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "735:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "734:19:4"
									},
									"scope": 495,
									"src": "662:1403:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 496,
							"src": "212:1855:4",
							"usedErrors": [],
							"usedEvents": [
								395
							]
						}
					],
					"src": "0:2068:4"
				},
				"id": 4
			}
		}
	}
}